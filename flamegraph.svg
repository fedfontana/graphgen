<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="7334"><g><title>graphgen`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="0.0000%" y="853" width="0.0136%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="0.1364%" y="837" width="0.0818%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="6"/><text x="0.3864%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.03%)</title><rect x="0.2182%" y="837" width="0.0273%" height="15" fill="rgb(221,193,54)" fg:x="16" fg:w="2"/><text x="0.4682%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.03%)</title><rect x="0.2182%" y="821" width="0.0273%" height="15" fill="rgb(248,212,6)" fg:x="16" fg:w="2"/><text x="0.4682%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="0.2182%" y="805" width="0.0273%" height="15" fill="rgb(208,68,35)" fg:x="16" fg:w="2"/><text x="0.4682%" y="815.50"></text></g><g><title>graphgen`flurry::raw::Table&lt;K,V&gt;::drop_bins (21 samples, 0.29%)</title><rect x="0.0136%" y="853" width="0.2863%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="21"/><text x="0.2636%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.05%)</title><rect x="0.2454%" y="837" width="0.0545%" height="15" fill="rgb(207,160,47)" fg:x="18" fg:w="4"/><text x="0.4954%" y="847.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;graphgen::scraper::WikipediaScraper&gt; (24 samples, 0.33%)</title><rect x="0.0000%" y="901" width="0.3272%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="24"/><text x="0.2500%" y="911.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (24 samples, 0.33%)</title><rect x="0.0000%" y="885" width="0.3272%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="24"/><text x="0.2500%" y="895.50"></text></g><g><title>graphgen`&lt;flurry::map::HashMap&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.33%)</title><rect x="0.0000%" y="869" width="0.3272%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="24"/><text x="0.2500%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="0.3000%" y="853" width="0.0273%" height="15" fill="rgb(250,228,42)" fg:x="22" fg:w="2"/><text x="0.5500%" y="863.50"></text></g><g><title>graphgen`&lt;flurry::iter::traverser::NodeIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="0.3272%" y="885" width="0.0273%" height="15" fill="rgb(240,193,28)" fg:x="24" fg:w="2"/><text x="0.5772%" y="895.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::load (2 samples, 0.03%)</title><rect x="0.3272%" y="869" width="0.0273%" height="15" fill="rgb(216,20,37)" fg:x="24" fg:w="2"/><text x="0.5772%" y="879.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="0.3272%" y="853" width="0.0273%" height="15" fill="rgb(206,188,39)" fg:x="24" fg:w="2"/><text x="0.5772%" y="863.50"></text></g><g><title>graphgen`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="0.3545%" y="869" width="0.0136%" height="15" fill="rgb(217,207,13)" fg:x="26" fg:w="1"/><text x="0.6045%" y="879.50"></text></g><g><title>graphgen`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="0.4091%" y="821" width="0.0136%" height="15" fill="rgb(231,73,38)" fg:x="30" fg:w="1"/><text x="0.6591%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="0.4227%" y="805" width="0.0136%" height="15" fill="rgb(225,20,46)" fg:x="31" fg:w="1"/><text x="0.6727%" y="815.50"></text></g><g><title>graphgen`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.11%)</title><rect x="0.3681%" y="853" width="0.1091%" height="15" fill="rgb(210,31,41)" fg:x="27" fg:w="8"/><text x="0.6181%" y="863.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.07%)</title><rect x="0.4091%" y="837" width="0.0682%" height="15" fill="rgb(221,200,47)" fg:x="30" fg:w="5"/><text x="0.6591%" y="847.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="0.4227%" y="821" width="0.0545%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="4"/><text x="0.6727%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="0.4363%" y="805" width="0.0409%" height="15" fill="rgb(249,33,26)" fg:x="32" fg:w="3"/><text x="0.6863%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="0.4500%" y="789" width="0.0273%" height="15" fill="rgb(235,183,28)" fg:x="33" fg:w="2"/><text x="0.7000%" y="799.50"></text></g><g><title>graphgen`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="0.4772%" y="853" width="0.0136%" height="15" fill="rgb(221,5,38)" fg:x="35" fg:w="1"/><text x="0.7272%" y="863.50"></text></g><g><title>graphgen`core::fmt::Formatter::pad_integral (4 samples, 0.05%)</title><rect x="0.4909%" y="853" width="0.0545%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="4"/><text x="0.7409%" y="863.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="0.7363%" y="805" width="0.0136%" height="15" fill="rgb(241,131,45)" fg:x="54" fg:w="1"/><text x="0.9863%" y="815.50"></text></g><g><title>graphgen`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="0.7090%" y="837" width="0.0545%" height="15" fill="rgb(249,31,29)" fg:x="52" fg:w="4"/><text x="0.9590%" y="847.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="0.7227%" y="821" width="0.0409%" height="15" fill="rgb(225,111,53)" fg:x="53" fg:w="3"/><text x="0.9727%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="0.7499%" y="805" width="0.0136%" height="15" fill="rgb(238,160,17)" fg:x="55" fg:w="1"/><text x="0.9999%" y="815.50"></text></g><g><title>graphgen`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="0.7636%" y="837" width="0.0136%" height="15" fill="rgb(214,148,48)" fg:x="56" fg:w="1"/><text x="1.0136%" y="847.50"></text></g><g><title>graphgen`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (20 samples, 0.27%)</title><rect x="0.5454%" y="853" width="0.2727%" height="15" fill="rgb(232,36,49)" fg:x="40" fg:w="20"/><text x="0.7954%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="0.7772%" y="837" width="0.0409%" height="15" fill="rgb(209,103,24)" fg:x="57" fg:w="3"/><text x="1.0272%" y="847.50"></text></g><g><title>graphgen`alloc::fmt::format::format_inner (36 samples, 0.49%)</title><rect x="0.3545%" y="885" width="0.4909%" height="15" fill="rgb(229,88,8)" fg:x="26" fg:w="36"/><text x="0.6045%" y="895.50"></text></g><g><title>graphgen`core::fmt::write (35 samples, 0.48%)</title><rect x="0.3681%" y="869" width="0.4772%" height="15" fill="rgb(213,181,19)" fg:x="27" fg:w="35"/><text x="0.6181%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="0.8181%" y="853" width="0.0273%" height="15" fill="rgb(254,191,54)" fg:x="60" fg:w="2"/><text x="1.0681%" y="863.50"></text></g><g><title>graphgen`std::io::Write::write_all (311 samples, 4.24%)</title><rect x="0.8454%" y="885" width="4.2405%" height="15" fill="rgb(241,83,37)" fg:x="62" fg:w="311"/><text x="1.0954%" y="895.50">graph..</text></g><g><title>libsystem_kernel.dylib`write (311 samples, 4.24%)</title><rect x="0.8454%" y="869" width="4.2405%" height="15" fill="rgb(233,36,39)" fg:x="62" fg:w="311"/><text x="1.0954%" y="879.50">libsy..</text></g><g><title>graphgen`std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.01%)</title><rect x="5.0859%" y="885" width="0.0136%" height="15" fill="rgb(226,3,54)" fg:x="373" fg:w="1"/><text x="5.3359%" y="895.50"></text></g><g><title>graphgen`graphgen::scraper::WikipediaScraper::save_to_file (351 samples, 4.79%)</title><rect x="0.3272%" y="901" width="4.7859%" height="15" fill="rgb(245,192,40)" fg:x="24" fg:w="351"/><text x="0.5772%" y="911.50">graphg..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="5.0995%" y="885" width="0.0136%" height="15" fill="rgb(238,167,29)" fg:x="374" fg:w="1"/><text x="5.3495%" y="895.50"></text></g><g><title>graphgen`graphgen::scraper::WikipediaScraper::scrape (1 samples, 0.01%)</title><rect x="5.1132%" y="901" width="0.0136%" height="15" fill="rgb(232,182,51)" fg:x="375" fg:w="1"/><text x="5.3632%" y="911.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="5.1132%" y="885" width="0.0136%" height="15" fill="rgb(231,60,39)" fg:x="375" fg:w="1"/><text x="5.3632%" y="895.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="5.1132%" y="869" width="0.0136%" height="15" fill="rgb(208,69,12)" fg:x="375" fg:w="1"/><text x="5.3632%" y="879.50"></text></g><g><title>graphgen`std::thread::spawn (1 samples, 0.01%)</title><rect x="5.1132%" y="853" width="0.0136%" height="15" fill="rgb(235,93,37)" fg:x="375" fg:w="1"/><text x="5.3632%" y="863.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::new (1 samples, 0.01%)</title><rect x="5.1132%" y="837" width="0.0136%" height="15" fill="rgb(213,116,39)" fg:x="375" fg:w="1"/><text x="5.3632%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (1 samples, 0.01%)</title><rect x="5.1132%" y="821" width="0.0136%" height="15" fill="rgb(222,207,29)" fg:x="375" fg:w="1"/><text x="5.3632%" y="831.50"></text></g><g><title>dyld`start (377 samples, 5.14%)</title><rect x="0.0000%" y="997" width="5.1404%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="377"/><text x="0.2500%" y="1007.50">dyld`s..</text></g><g><title>graphgen`main (377 samples, 5.14%)</title><rect x="0.0000%" y="981" width="5.1404%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="377"/><text x="0.2500%" y="991.50">graphg..</text></g><g><title>graphgen`std::rt::lang_start_internal (377 samples, 5.14%)</title><rect x="0.0000%" y="965" width="5.1404%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="377"/><text x="0.2500%" y="975.50">graphg..</text></g><g><title>graphgen`std::rt::lang_start::_{{closure}} (377 samples, 5.14%)</title><rect x="0.0000%" y="949" width="5.1404%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="377"/><text x="0.2500%" y="959.50">graphg..</text></g><g><title>graphgen`std::sys_common::backtrace::__rust_begin_short_backtrace (377 samples, 5.14%)</title><rect x="0.0000%" y="933" width="5.1404%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="377"/><text x="0.2500%" y="943.50">graphg..</text></g><g><title>graphgen`graphgen::main (377 samples, 5.14%)</title><rect x="0.0000%" y="917" width="5.1404%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="377"/><text x="0.2500%" y="927.50">graphg..</text></g><g><title>graphgen`std::io::Write::write_all (1 samples, 0.01%)</title><rect x="5.1268%" y="901" width="0.0136%" height="15" fill="rgb(250,213,24)" fg:x="376" fg:w="1"/><text x="5.3768%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (9 samples, 0.12%)</title><rect x="5.1404%" y="997" width="0.1227%" height="15" fill="rgb(247,123,22)" fg:x="377" fg:w="9"/><text x="5.3904%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.01%)</title><rect x="5.2632%" y="997" width="0.0136%" height="15" fill="rgb(231,138,38)" fg:x="386" fg:w="1"/><text x="5.5132%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (18 samples, 0.25%)</title><rect x="5.2904%" y="981" width="0.2454%" height="15" fill="rgb(231,145,46)" fg:x="388" fg:w="18"/><text x="5.5404%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (2 samples, 0.03%)</title><rect x="5.5495%" y="949" width="0.0273%" height="15" fill="rgb(251,118,11)" fg:x="407" fg:w="2"/><text x="5.7995%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (2 samples, 0.03%)</title><rect x="5.5495%" y="933" width="0.0273%" height="15" fill="rgb(217,147,25)" fg:x="407" fg:w="2"/><text x="5.7995%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (2 samples, 0.03%)</title><rect x="5.5495%" y="917" width="0.0273%" height="15" fill="rgb(247,81,37)" fg:x="407" fg:w="2"/><text x="5.7995%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke (1 samples, 0.01%)</title><rect x="5.5768%" y="949" width="0.0136%" height="15" fill="rgb(209,12,38)" fg:x="409" fg:w="1"/><text x="5.8268%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (5 samples, 0.07%)</title><rect x="5.5359%" y="965" width="0.0682%" height="15" fill="rgb(227,1,9)" fg:x="406" fg:w="5"/><text x="5.7859%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="5.5904%" y="949" width="0.0136%" height="15" fill="rgb(248,47,43)" fg:x="410" fg:w="1"/><text x="5.8404%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (25 samples, 0.34%)</title><rect x="5.2768%" y="997" width="0.3409%" height="15" fill="rgb(221,10,30)" fg:x="387" fg:w="25"/><text x="5.5268%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (6 samples, 0.08%)</title><rect x="5.5359%" y="981" width="0.0818%" height="15" fill="rgb(210,229,1)" fg:x="406" fg:w="6"/><text x="5.7859%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.01%)</title><rect x="5.6040%" y="965" width="0.0136%" height="15" fill="rgb(222,148,37)" fg:x="411" fg:w="1"/><text x="5.8540%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1 samples, 0.01%)</title><rect x="5.6040%" y="949" width="0.0136%" height="15" fill="rgb(234,67,33)" fg:x="411" fg:w="1"/><text x="5.8540%" y="959.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::set_name (2 samples, 0.03%)</title><rect x="5.7131%" y="933" width="0.0273%" height="15" fill="rgb(247,98,35)" fg:x="419" fg:w="2"/><text x="5.9631%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (2 samples, 0.03%)</title><rect x="5.7131%" y="917" width="0.0273%" height="15" fill="rgb(247,138,52)" fg:x="419" fg:w="2"/><text x="5.9631%" y="927.50"></text></g><g><title>graphgen`__rdl_alloc (1 samples, 0.01%)</title><rect x="5.7540%" y="917" width="0.0136%" height="15" fill="rgb(213,79,30)" fg:x="422" fg:w="1"/><text x="6.0040%" y="927.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;tokio::util::slab::Page&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (1 samples, 0.01%)</title><rect x="5.7949%" y="885" width="0.0136%" height="15" fill="rgb(246,177,23)" fg:x="425" fg:w="1"/><text x="6.0449%" y="895.50"></text></g><g><title> 19]&gt; (1 samples, 0.01%)</title><rect x="5.7949%" y="869" width="0.0136%" height="15" fill="rgb(230,62,27)" fg:x="425" fg:w="1"/><text x="6.0449%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="5.7949%" y="853" width="0.0136%" height="15" fill="rgb(216,154,8)" fg:x="425" fg:w="1"/><text x="6.0449%" y="863.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio::runtime::driver::Handle&gt; (3 samples, 0.04%)</title><rect x="5.7949%" y="901" width="0.0409%" height="15" fill="rgb(244,35,45)" fg:x="425" fg:w="3"/><text x="6.0449%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 0.03%)</title><rect x="5.8086%" y="885" width="0.0273%" height="15" fill="rgb(251,115,12)" fg:x="426" fg:w="2"/><text x="6.0586%" y="895.50"></text></g><g><title>graphgen`tokio::runtime::park::wake_by_ref (2 samples, 0.03%)</title><rect x="5.8358%" y="901" width="0.0273%" height="15" fill="rgb(240,54,50)" fg:x="428" fg:w="2"/><text x="6.0858%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.03%)</title><rect x="5.8358%" y="885" width="0.0273%" height="15" fill="rgb(233,84,52)" fg:x="428" fg:w="2"/><text x="6.0858%" y="895.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.11%)</title><rect x="5.7677%" y="917" width="0.1091%" height="15" fill="rgb(207,117,47)" fg:x="423" fg:w="8"/><text x="6.0177%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="5.8631%" y="901" width="0.0136%" height="15" fill="rgb(249,43,39)" fg:x="430" fg:w="1"/><text x="6.1131%" y="911.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="5.8767%" y="901" width="0.0136%" height="15" fill="rgb(209,38,44)" fg:x="431" fg:w="1"/><text x="6.1267%" y="911.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;&amp;tokio::sync::batch_semaphore::Semaphore&gt; (1 samples, 0.01%)</title><rect x="5.8767%" y="885" width="0.0136%" height="15" fill="rgb(236,212,23)" fg:x="431" fg:w="1"/><text x="6.1267%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.05%)</title><rect x="5.8904%" y="853" width="0.0545%" height="15" fill="rgb(242,79,21)" fg:x="432" fg:w="4"/><text x="6.1404%" y="863.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::join (9 samples, 0.12%)</title><rect x="5.8904%" y="869" width="0.1227%" height="15" fill="rgb(211,96,35)" fg:x="432" fg:w="9"/><text x="6.1404%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (5 samples, 0.07%)</title><rect x="5.9449%" y="853" width="0.0682%" height="15" fill="rgb(253,215,40)" fg:x="436" fg:w="5"/><text x="6.1949%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_deallocate (4 samples, 0.05%)</title><rect x="5.9585%" y="837" width="0.0545%" height="15" fill="rgb(211,81,21)" fg:x="437" fg:w="4"/><text x="6.2085%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.05%)</title><rect x="5.9585%" y="821" width="0.0545%" height="15" fill="rgb(208,190,38)" fg:x="437" fg:w="4"/><text x="6.2085%" y="831.50"></text></g><g><title>graphgen`std::thread::JoinHandle&lt;T&gt;::join (10 samples, 0.14%)</title><rect x="5.8904%" y="885" width="0.1364%" height="15" fill="rgb(235,213,38)" fg:x="432" fg:w="10"/><text x="6.1404%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join (1 samples, 0.01%)</title><rect x="6.0131%" y="869" width="0.0136%" height="15" fill="rgb(237,122,38)" fg:x="441" fg:w="1"/><text x="6.2631%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::park::Inner::park (2 samples, 0.03%)</title><rect x="6.0267%" y="853" width="0.0273%" height="15" fill="rgb(244,218,35)" fg:x="442" fg:w="2"/><text x="6.2767%" y="863.50"></text></g><g><title>graphgen`std::sync::condvar::Condvar::wait (2 samples, 0.03%)</title><rect x="6.0267%" y="837" width="0.0273%" height="15" fill="rgb(240,68,47)" fg:x="442" fg:w="2"/><text x="6.2767%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.03%)</title><rect x="6.0267%" y="821" width="0.0273%" height="15" fill="rgb(210,16,53)" fg:x="442" fg:w="2"/><text x="6.2767%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::blocking::shutdown::Receiver::wait (3 samples, 0.04%)</title><rect x="6.0267%" y="885" width="0.0409%" height="15" fill="rgb(235,124,12)" fg:x="442" fg:w="3"/><text x="6.2767%" y="895.50"></text></g><g><title>graphgen`tokio::runtime::park::CachedParkThread::block_on (3 samples, 0.04%)</title><rect x="6.0267%" y="869" width="0.0409%" height="15" fill="rgb(224,169,11)" fg:x="442" fg:w="3"/><text x="6.2767%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::park::ParkThread::new (1 samples, 0.01%)</title><rect x="6.0540%" y="853" width="0.0136%" height="15" fill="rgb(250,166,2)" fg:x="444" fg:w="1"/><text x="6.3040%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::blocking::pool::BlockingPool::shutdown (16 samples, 0.22%)</title><rect x="5.8904%" y="901" width="0.2182%" height="15" fill="rgb(242,216,29)" fg:x="432" fg:w="16"/><text x="6.1404%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvbroad (3 samples, 0.04%)</title><rect x="6.0676%" y="885" width="0.0409%" height="15" fill="rgb(230,116,27)" fg:x="445" fg:w="3"/><text x="6.3176%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (18 samples, 0.25%)</title><rect x="5.8767%" y="917" width="0.2454%" height="15" fill="rgb(228,99,48)" fg:x="431" fg:w="18"/><text x="6.1267%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="6.1085%" y="901" width="0.0136%" height="15" fill="rgb(253,11,6)" fg:x="448" fg:w="1"/><text x="6.3585%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="6.1085%" y="885" width="0.0136%" height="15" fill="rgb(247,143,39)" fg:x="448" fg:w="1"/><text x="6.3585%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio::runtime::scheduler::current_thread::CoreGuard&gt; (1 samples, 0.01%)</title><rect x="6.1222%" y="869" width="0.0136%" height="15" fill="rgb(236,97,10)" fg:x="449" fg:w="1"/><text x="6.3722%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::io::Driver::shutdown (1 samples, 0.01%)</title><rect x="6.1358%" y="853" width="0.0136%" height="15" fill="rgb(233,208,19)" fg:x="450" fg:w="1"/><text x="6.3858%" y="863.50"></text></g><g><title>graphgen`tokio::util::slab::CachedPage&lt;T&gt;::refresh (1 samples, 0.01%)</title><rect x="6.1358%" y="837" width="0.0136%" height="15" fill="rgb(216,164,2)" fg:x="450" fg:w="1"/><text x="6.3858%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1 samples, 0.01%)</title><rect x="6.1494%" y="837" width="0.0136%" height="15" fill="rgb(220,129,5)" fg:x="451" fg:w="1"/><text x="6.3994%" y="847.50"></text></g><g><title>CoreFoundation`-[__NSCFType release] (1 samples, 0.01%)</title><rect x="6.1767%" y="693" width="0.0136%" height="15" fill="rgb(242,17,10)" fg:x="453" fg:w="1"/><text x="6.4267%" y="703.50"></text></g><g><title>CoreFoundation`CFRelease (2 samples, 0.03%)</title><rect x="6.2176%" y="581" width="0.0273%" height="15" fill="rgb(242,107,0)" fg:x="456" fg:w="2"/><text x="6.4676%" y="591.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="6.2449%" y="581" width="0.0136%" height="15" fill="rgb(251,28,31)" fg:x="458" fg:w="1"/><text x="6.4949%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="6.2449%" y="565" width="0.0136%" height="15" fill="rgb(233,223,10)" fg:x="458" fg:w="1"/><text x="6.4949%" y="575.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (5 samples, 0.07%)</title><rect x="6.2040%" y="629" width="0.0682%" height="15" fill="rgb(215,21,27)" fg:x="455" fg:w="5"/><text x="6.4540%" y="639.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.05%)</title><rect x="6.2176%" y="613" width="0.0545%" height="15" fill="rgb(232,23,21)" fg:x="456" fg:w="4"/><text x="6.4676%" y="623.50"></text></g><g><title>CoreFoundation`__CFURLDeallocate (4 samples, 0.05%)</title><rect x="6.2176%" y="597" width="0.0545%" height="15" fill="rgb(244,5,23)" fg:x="456" fg:w="4"/><text x="6.4676%" y="607.50"></text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 0.01%)</title><rect x="6.2585%" y="581" width="0.0136%" height="15" fill="rgb(226,81,46)" fg:x="459" fg:w="1"/><text x="6.5085%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (6 samples, 0.08%)</title><rect x="6.2040%" y="645" width="0.0818%" height="15" fill="rgb(247,70,30)" fg:x="455" fg:w="6"/><text x="6.4540%" y="655.50"></text></g><g><title>Foundation`DYLD-STUB$$_CFNonObjCRelease (1 samples, 0.01%)</title><rect x="6.2722%" y="629" width="0.0136%" height="15" fill="rgb(212,68,19)" fg:x="460" fg:w="1"/><text x="6.5222%" y="639.50"></text></g><g><title>CoreFoundation`CFRelease (1 samples, 0.01%)</title><rect x="6.2858%" y="645" width="0.0136%" height="15" fill="rgb(240,187,13)" fg:x="461" fg:w="1"/><text x="6.5358%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.01%)</title><rect x="6.2994%" y="629" width="0.0136%" height="15" fill="rgb(223,113,26)" fg:x="462" fg:w="1"/><text x="6.5494%" y="639.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="6.2994%" y="645" width="0.0273%" height="15" fill="rgb(206,192,2)" fg:x="462" fg:w="2"/><text x="6.5494%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="6.3131%" y="629" width="0.0136%" height="15" fill="rgb(241,108,4)" fg:x="463" fg:w="1"/><text x="6.5631%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="6.3131%" y="613" width="0.0136%" height="15" fill="rgb(247,173,49)" fg:x="463" fg:w="1"/><text x="6.5631%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.01%)</title><rect x="6.3267%" y="645" width="0.0136%" height="15" fill="rgb(224,114,35)" fg:x="464" fg:w="1"/><text x="6.5767%" y="655.50"></text></g><g><title>Security`SecCertificateDestroy (11 samples, 0.15%)</title><rect x="6.2040%" y="661" width="0.1500%" height="15" fill="rgb(245,159,27)" fg:x="455" fg:w="11"/><text x="6.4540%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="6.3403%" y="645" width="0.0136%" height="15" fill="rgb(245,172,44)" fg:x="465" fg:w="1"/><text x="6.5903%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="6.3403%" y="629" width="0.0136%" height="15" fill="rgb(236,23,11)" fg:x="465" fg:w="1"/><text x="6.5903%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="6.3540%" y="661" width="0.0136%" height="15" fill="rgb(205,117,38)" fg:x="466" fg:w="1"/><text x="6.6040%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (16 samples, 0.22%)</title><rect x="6.1767%" y="709" width="0.2182%" height="15" fill="rgb(237,72,25)" fg:x="453" fg:w="16"/><text x="6.4267%" y="719.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (15 samples, 0.20%)</title><rect x="6.1903%" y="693" width="0.2045%" height="15" fill="rgb(244,70,9)" fg:x="454" fg:w="15"/><text x="6.4403%" y="703.50"></text></g><g><title>CoreFoundation`_CFRelease (15 samples, 0.20%)</title><rect x="6.1903%" y="677" width="0.2045%" height="15" fill="rgb(217,125,39)" fg:x="454" fg:w="15"/><text x="6.4403%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="6.3676%" y="661" width="0.0273%" height="15" fill="rgb(235,36,10)" fg:x="467" fg:w="2"/><text x="6.6176%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="6.3812%" y="645" width="0.0136%" height="15" fill="rgb(251,123,47)" fg:x="468" fg:w="1"/><text x="6.6312%" y="655.50"></text></g><g><title>CoreFoundation`cow_cleanup (2 samples, 0.03%)</title><rect x="6.3949%" y="661" width="0.0273%" height="15" fill="rgb(221,13,13)" fg:x="469" fg:w="2"/><text x="6.6449%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.01%)</title><rect x="6.4085%" y="645" width="0.0136%" height="15" fill="rgb(238,131,9)" fg:x="470" fg:w="1"/><text x="6.6585%" y="655.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.01%)</title><rect x="6.4085%" y="629" width="0.0136%" height="15" fill="rgb(211,50,8)" fg:x="470" fg:w="1"/><text x="6.6585%" y="639.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (3 samples, 0.04%)</title><rect x="6.3949%" y="677" width="0.0409%" height="15" fill="rgb(245,182,24)" fg:x="469" fg:w="3"/><text x="6.6449%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="6.4221%" y="661" width="0.0136%" height="15" fill="rgb(242,14,37)" fg:x="471" fg:w="1"/><text x="6.6721%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (4 samples, 0.05%)</title><rect x="6.3949%" y="709" width="0.0545%" height="15" fill="rgb(246,228,12)" fg:x="469" fg:w="4"/><text x="6.6449%" y="719.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.05%)</title><rect x="6.3949%" y="693" width="0.0545%" height="15" fill="rgb(213,55,15)" fg:x="469" fg:w="4"/><text x="6.6449%" y="703.50"></text></g><g><title>CoreFoundation`__CFDataDeallocate (1 samples, 0.01%)</title><rect x="6.4358%" y="677" width="0.0136%" height="15" fill="rgb(209,9,3)" fg:x="472" fg:w="1"/><text x="6.6858%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="6.4494%" y="693" width="0.0136%" height="15" fill="rgb(230,59,30)" fg:x="473" fg:w="1"/><text x="6.6994%" y="703.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="6.4630%" y="677" width="0.0136%" height="15" fill="rgb(209,121,21)" fg:x="474" fg:w="1"/><text x="6.7130%" y="687.50"></text></g><g><title>Security`SecCFAllocatorDeallocate (1 samples, 0.01%)</title><rect x="6.4630%" y="661" width="0.0136%" height="15" fill="rgb(220,109,13)" fg:x="474" fg:w="1"/><text x="6.7130%" y="671.50"></text></g><g><title>libcorecrypto.dylib`DYLD-STUB$$memset_s (1 samples, 0.01%)</title><rect x="6.4630%" y="645" width="0.0136%" height="15" fill="rgb(232,18,1)" fg:x="474" fg:w="1"/><text x="6.7130%" y="655.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (2 samples, 0.03%)</title><rect x="6.4630%" y="693" width="0.0273%" height="15" fill="rgb(215,41,42)" fg:x="474" fg:w="2"/><text x="6.7130%" y="703.50"></text></g><g><title>CoreFoundation`__CFDictionaryDeallocate (1 samples, 0.01%)</title><rect x="6.4767%" y="677" width="0.0136%" height="15" fill="rgb(224,123,36)" fg:x="475" fg:w="1"/><text x="6.7267%" y="687.50"></text></g><g><title>CoreFoundation`CFRelease (1 samples, 0.01%)</title><rect x="6.5040%" y="677" width="0.0136%" height="15" fill="rgb(240,125,3)" fg:x="477" fg:w="1"/><text x="6.7540%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.08%)</title><rect x="6.4494%" y="709" width="0.0818%" height="15" fill="rgb(205,98,50)" fg:x="473" fg:w="6"/><text x="6.6994%" y="719.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (3 samples, 0.04%)</title><rect x="6.4903%" y="693" width="0.0409%" height="15" fill="rgb(205,185,37)" fg:x="476" fg:w="3"/><text x="6.7403%" y="703.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="6.5176%" y="677" width="0.0136%" height="15" fill="rgb(238,207,15)" fg:x="478" fg:w="1"/><text x="6.7676%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.01%)</title><rect x="6.5312%" y="709" width="0.0136%" height="15" fill="rgb(213,199,42)" fg:x="479" fg:w="1"/><text x="6.7812%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_class_dispose (1 samples, 0.01%)</title><rect x="6.5312%" y="693" width="0.0136%" height="15" fill="rgb(235,201,11)" fg:x="479" fg:w="1"/><text x="6.7812%" y="703.50"></text></g><g><title>Security`SecTrustDestroy (29 samples, 0.40%)</title><rect x="6.1631%" y="725" width="0.3954%" height="15" fill="rgb(207,46,11)" fg:x="452" fg:w="29"/><text x="6.4131%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.01%)</title><rect x="6.5449%" y="709" width="0.0136%" height="15" fill="rgb(241,35,35)" fg:x="480" fg:w="1"/><text x="6.7949%" y="719.50"></text></g><g><title>CoreFoundation`_CFRelease (30 samples, 0.41%)</title><rect x="6.1631%" y="741" width="0.4091%" height="15" fill="rgb(243,32,47)" fg:x="452" fg:w="30"/><text x="6.4131%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="6.5585%" y="725" width="0.0136%" height="15" fill="rgb(247,202,23)" fg:x="481" fg:w="1"/><text x="6.8085%" y="735.50"></text></g><g><title>libcoretls.dylib`HashSHA256Close (1 samples, 0.01%)</title><rect x="6.5721%" y="725" width="0.0136%" height="15" fill="rgb(219,102,11)" fg:x="482" fg:w="1"/><text x="6.8221%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="6.5858%" y="709" width="0.0136%" height="15" fill="rgb(243,110,44)" fg:x="483" fg:w="1"/><text x="6.8358%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="6.5858%" y="693" width="0.0136%" height="15" fill="rgb(222,74,54)" fg:x="483" fg:w="1"/><text x="6.8358%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="6.5858%" y="677" width="0.0136%" height="15" fill="rgb(216,99,12)" fg:x="483" fg:w="1"/><text x="6.8358%" y="687.50"></text></g><g><title>libcoretls.dylib`SSLFreeBuffer (2 samples, 0.03%)</title><rect x="6.5858%" y="725" width="0.0273%" height="15" fill="rgb(226,22,26)" fg:x="483" fg:w="2"/><text x="6.8358%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="6.5994%" y="709" width="0.0136%" height="15" fill="rgb(217,163,10)" fg:x="484" fg:w="1"/><text x="6.8494%" y="719.50"></text></g><g><title>libcoretls.dylib`sslFreePubKey (1 samples, 0.01%)</title><rect x="6.6130%" y="725" width="0.0136%" height="15" fill="rgb(213,25,53)" fg:x="485" fg:w="1"/><text x="6.8630%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="6.6130%" y="709" width="0.0136%" height="15" fill="rgb(252,105,26)" fg:x="485" fg:w="1"/><text x="6.8630%" y="719.50"></text></g><g><title>libcoretls.dylib`tls_free_buffer_list (1 samples, 0.01%)</title><rect x="6.6267%" y="725" width="0.0136%" height="15" fill="rgb(220,39,43)" fg:x="486" fg:w="1"/><text x="6.8767%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="6.6267%" y="709" width="0.0136%" height="15" fill="rgb(229,68,48)" fg:x="486" fg:w="1"/><text x="6.8767%" y="719.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.01%)</title><rect x="6.6403%" y="693" width="0.0136%" height="15" fill="rgb(252,8,32)" fg:x="487" fg:w="1"/><text x="6.8903%" y="703.50"></text></g><g><title>libcoretls.dylib`tls_metric_destroyed (2 samples, 0.03%)</title><rect x="6.6403%" y="725" width="0.0273%" height="15" fill="rgb(223,20,43)" fg:x="487" fg:w="2"/><text x="6.8903%" y="735.50"></text></g><g><title>libsystem_c.dylib`arc4random_uniform (2 samples, 0.03%)</title><rect x="6.6403%" y="709" width="0.0273%" height="15" fill="rgb(229,81,49)" fg:x="487" fg:w="2"/><text x="6.8903%" y="719.50"></text></g><g><title>libcorecrypto.dylib`ccrng_uniform (1 samples, 0.01%)</title><rect x="6.6539%" y="693" width="0.0136%" height="15" fill="rgb(236,28,36)" fg:x="488" fg:w="1"/><text x="6.9039%" y="703.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="6.6539%" y="677" width="0.0136%" height="15" fill="rgb(249,185,26)" fg:x="488" fg:w="1"/><text x="6.9039%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.01%)</title><rect x="6.6539%" y="661" width="0.0136%" height="15" fill="rgb(249,174,33)" fg:x="488" fg:w="1"/><text x="6.9039%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_read (1 samples, 0.01%)</title><rect x="6.6539%" y="645" width="0.0136%" height="15" fill="rgb(233,201,37)" fg:x="488" fg:w="1"/><text x="6.9039%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_tree_read (1 samples, 0.01%)</title><rect x="6.6539%" y="629" width="0.0136%" height="15" fill="rgb(221,78,26)" fg:x="488" fg:w="1"/><text x="6.9039%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_timer_read (1 samples, 0.01%)</title><rect x="6.6539%" y="613" width="0.0136%" height="15" fill="rgb(250,127,30)" fg:x="488" fg:w="1"/><text x="6.9039%" y="623.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="6.6539%" y="597" width="0.0136%" height="15" fill="rgb(230,49,44)" fg:x="488" fg:w="1"/><text x="6.9039%" y="607.50"></text></g><g><title>libsystem_c.dylib`_mach_boottime_usec (1 samples, 0.01%)</title><rect x="6.6539%" y="581" width="0.0136%" height="15" fill="rgb(229,67,23)" fg:x="488" fg:w="1"/><text x="6.9039%" y="591.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.01%)</title><rect x="6.6539%" y="565" width="0.0136%" height="15" fill="rgb(249,83,47)" fg:x="488" fg:w="1"/><text x="6.9039%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="6.6539%" y="549" width="0.0136%" height="15" fill="rgb(215,43,3)" fg:x="488" fg:w="1"/><text x="6.9039%" y="559.50"></text></g><g><title>libcoretls.dylib`tls_handshake_destroy (8 samples, 0.11%)</title><rect x="6.5721%" y="741" width="0.1091%" height="15" fill="rgb(238,154,13)" fg:x="482" fg:w="8"/><text x="6.8221%" y="751.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_done (1 samples, 0.01%)</title><rect x="6.6676%" y="725" width="0.0136%" height="15" fill="rgb(219,56,2)" fg:x="489" fg:w="1"/><text x="6.9176%" y="735.50"></text></g><g><title>libsystem_asl.dylib`asl_log (1 samples, 0.01%)</title><rect x="6.6676%" y="709" width="0.0136%" height="15" fill="rgb(233,0,4)" fg:x="489" fg:w="1"/><text x="6.9176%" y="719.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (1 samples, 0.01%)</title><rect x="6.6676%" y="693" width="0.0136%" height="15" fill="rgb(235,30,7)" fg:x="489" fg:w="1"/><text x="6.9176%" y="703.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (1 samples, 0.01%)</title><rect x="6.6676%" y="677" width="0.0136%" height="15" fill="rgb(250,79,13)" fg:x="489" fg:w="1"/><text x="6.9176%" y="687.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (1 samples, 0.01%)</title><rect x="6.6676%" y="661" width="0.0136%" height="15" fill="rgb(211,146,34)" fg:x="489" fg:w="1"/><text x="6.9176%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="6.6676%" y="645" width="0.0136%" height="15" fill="rgb(228,22,38)" fg:x="489" fg:w="1"/><text x="6.9176%" y="655.50"></text></g><g><title>Security`SSLContextDestroy (39 samples, 0.53%)</title><rect x="6.1631%" y="757" width="0.5318%" height="15" fill="rgb(235,168,5)" fg:x="452" fg:w="39"/><text x="6.4131%" y="767.50"></text></g><g><title>libcoretls.dylib`tls_record_destroy (1 samples, 0.01%)</title><rect x="6.6812%" y="741" width="0.0136%" height="15" fill="rgb(221,155,16)" fg:x="490" fg:w="1"/><text x="6.9312%" y="751.50"></text></g><g><title>CoreFoundation`_CFRelease (40 samples, 0.55%)</title><rect x="6.1631%" y="773" width="0.5454%" height="15" fill="rgb(215,215,53)" fg:x="452" fg:w="40"/><text x="6.4131%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="6.6948%" y="757" width="0.0136%" height="15" fill="rgb(223,4,10)" fg:x="491" fg:w="1"/><text x="6.9448%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="6.6948%" y="741" width="0.0136%" height="15" fill="rgb(234,103,6)" fg:x="491" fg:w="1"/><text x="6.9448%" y="751.50"></text></g><g><title>graphgen`&lt;tokio::util::slab::Ref&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.7085%" y="773" width="0.0136%" height="15" fill="rgb(227,97,0)" fg:x="492" fg:w="1"/><text x="6.9585%" y="783.50"></text></g><g><title>graphgen`&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.7221%" y="757" width="0.0136%" height="15" fill="rgb(234,150,53)" fg:x="493" fg:w="1"/><text x="6.9721%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="6.7221%" y="741" width="0.0136%" height="15" fill="rgb(228,201,54)" fg:x="493" fg:w="1"/><text x="6.9721%" y="751.50"></text></g><g><title>graphgen`tokio::runtime::io::registration::Registration::handle (1 samples, 0.01%)</title><rect x="6.7358%" y="757" width="0.0136%" height="15" fill="rgb(222,22,37)" fg:x="494" fg:w="1"/><text x="6.9858%" y="767.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (50 samples, 0.68%)</title><rect x="6.1631%" y="789" width="0.6818%" height="15" fill="rgb(237,53,32)" fg:x="452" fg:w="50"/><text x="6.4131%" y="799.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;security_framework::secure_transport::Connection&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (9 samples, 0.12%)</title><rect x="6.7221%" y="773" width="0.1227%" height="15" fill="rgb(233,25,53)" fg:x="493" fg:w="9"/><text x="6.9721%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`close (7 samples, 0.10%)</title><rect x="6.7494%" y="757" width="0.0954%" height="15" fill="rgb(210,40,34)" fg:x="495" fg:w="7"/><text x="6.9994%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="6.8448%" y="789" width="0.0136%" height="15" fill="rgb(241,220,44)" fg:x="502" fg:w="1"/><text x="7.0948%" y="799.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (52 samples, 0.71%)</title><rect x="6.1631%" y="821" width="0.7090%" height="15" fill="rgb(235,28,35)" fg:x="452" fg:w="52"/><text x="6.4131%" y="831.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (52 samples, 0.71%)</title><rect x="6.1631%" y="805" width="0.7090%" height="15" fill="rgb(210,56,17)" fg:x="452" fg:w="52"/><text x="6.4131%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="6.8585%" y="789" width="0.0136%" height="15" fill="rgb(224,130,29)" fg:x="503" fg:w="1"/><text x="7.1085%" y="799.50"></text></g><g><title>graphgen`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (54 samples, 0.74%)</title><rect x="6.1494%" y="853" width="0.7363%" height="15" fill="rgb(235,212,8)" fg:x="451" fg:w="54"/><text x="6.3994%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (53 samples, 0.72%)</title><rect x="6.1631%" y="837" width="0.7227%" height="15" fill="rgb(223,33,50)" fg:x="452" fg:w="53"/><text x="6.4131%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (1 samples, 0.01%)</title><rect x="6.8721%" y="821" width="0.0136%" height="15" fill="rgb(219,149,13)" fg:x="504" fg:w="1"/><text x="7.1221%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="6.8857%" y="853" width="0.0136%" height="15" fill="rgb(250,156,29)" fg:x="505" fg:w="1"/><text x="7.1357%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="6.8857%" y="837" width="0.0136%" height="15" fill="rgb(216,193,19)" fg:x="505" fg:w="1"/><text x="7.1357%" y="847.50"></text></g><g><title>graphgen`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (58 samples, 0.79%)</title><rect x="6.1222%" y="901" width="0.7908%" height="15" fill="rgb(216,135,14)" fg:x="449" fg:w="58"/><text x="6.3722%" y="911.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::CurrentThread::shutdown (58 samples, 0.79%)</title><rect x="6.1222%" y="885" width="0.7908%" height="15" fill="rgb(241,47,5)" fg:x="449" fg:w="58"/><text x="6.3722%" y="895.50"></text></g><g><title>graphgen`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (57 samples, 0.78%)</title><rect x="6.1358%" y="869" width="0.7772%" height="15" fill="rgb(233,42,35)" fg:x="450" fg:w="57"/><text x="6.3858%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (1 samples, 0.01%)</title><rect x="6.8994%" y="853" width="0.0136%" height="15" fill="rgb(231,13,6)" fg:x="506" fg:w="1"/><text x="7.1494%" y="863.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::driver::Driver&gt;&gt; (1 samples, 0.01%)</title><rect x="6.9130%" y="885" width="0.0136%" height="15" fill="rgb(207,181,40)" fg:x="507" fg:w="1"/><text x="7.1630%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio::util::slab::Slab&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (1 samples, 0.01%)</title><rect x="6.9130%" y="869" width="0.0136%" height="15" fill="rgb(254,173,49)" fg:x="507" fg:w="1"/><text x="7.1630%" y="879.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (60 samples, 0.82%)</title><rect x="6.1222%" y="917" width="0.8181%" height="15" fill="rgb(221,1,38)" fg:x="449" fg:w="60"/><text x="6.3722%" y="927.50"></text></g><g><title>graphgen`&lt;tokio::util::atomic_cell::AtomicCell&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="6.9130%" y="901" width="0.0273%" height="15" fill="rgb(206,124,46)" fg:x="507" fg:w="2"/><text x="7.1630%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 0.01%)</title><rect x="6.9266%" y="885" width="0.0136%" height="15" fill="rgb(249,21,11)" fg:x="508" fg:w="1"/><text x="7.1766%" y="895.50"></text></g><g><title>graphgen`core::str::pattern::TwoWaySearcher::next (1 samples, 0.01%)</title><rect x="6.9403%" y="917" width="0.0136%" height="15" fill="rgb(222,201,40)" fg:x="509" fg:w="1"/><text x="7.1903%" y="927.50"></text></g><g><title>graphgen`&lt;ego_tree::iter::Traverse&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="7.0903%" y="901" width="0.0682%" height="15" fill="rgb(235,61,29)" fg:x="520" fg:w="5"/><text x="7.3403%" y="911.50"></text></g><g><title>graphgen`&lt;reqwest::blocking::response::Response as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="7.1584%" y="901" width="0.0136%" height="15" fill="rgb(219,207,3)" fg:x="525" fg:w="1"/><text x="7.4084%" y="911.50"></text></g><g><title>graphgen`&lt;ego_tree::iter::Traverse&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.16%)</title><rect x="7.3084%" y="885" width="0.1636%" height="15" fill="rgb(222,56,46)" fg:x="536" fg:w="12"/><text x="7.5584%" y="895.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (1 samples, 0.01%)</title><rect x="7.4720%" y="885" width="0.0136%" height="15" fill="rgb(239,76,54)" fg:x="548" fg:w="1"/><text x="7.7220%" y="895.50"></text></g><g><title>graphgen`scraper::selector::Selector::matches_with_scope (10 samples, 0.14%)</title><rect x="7.4857%" y="885" width="0.1364%" height="15" fill="rgb(231,124,27)" fg:x="549" fg:w="10"/><text x="7.7357%" y="895.50"></text></g><g><title>graphgen`selectors::matching::matches_complex_selector_internal (4 samples, 0.05%)</title><rect x="7.5675%" y="869" width="0.0545%" height="15" fill="rgb(249,195,6)" fg:x="555" fg:w="4"/><text x="7.8175%" y="879.50"></text></g><g><title>graphgen`&lt;scraper::element_ref::Select as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.49%)</title><rect x="7.1721%" y="901" width="0.4909%" height="15" fill="rgb(237,174,47)" fg:x="526" fg:w="36"/><text x="7.4221%" y="911.50"></text></g><g><title>graphgen`selectors::matching::matches_complex_selector_internal (3 samples, 0.04%)</title><rect x="7.6220%" y="885" width="0.0409%" height="15" fill="rgb(206,201,31)" fg:x="559" fg:w="3"/><text x="7.8720%" y="895.50"></text></g><g><title>graphgen`&lt;scraper::html::Select as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="7.6629%" y="901" width="0.0409%" height="15" fill="rgb(231,57,52)" fg:x="562" fg:w="3"/><text x="7.9129%" y="911.50"></text></g><g><title>graphgen`scraper::selector::Selector::matches_with_scope (2 samples, 0.03%)</title><rect x="7.6766%" y="885" width="0.0273%" height="15" fill="rgb(248,177,22)" fg:x="563" fg:w="2"/><text x="7.9266%" y="895.50"></text></g><g><title>graphgen`selectors::matching::matches_complex_selector_internal (1 samples, 0.01%)</title><rect x="7.6902%" y="869" width="0.0136%" height="15" fill="rgb(215,211,37)" fg:x="564" fg:w="1"/><text x="7.9402%" y="879.50"></text></g><g><title>graphgen`&lt;seize::collector::Guard as flurry::reclaim::RetireShared&gt;::retire_shared (1 samples, 0.01%)</title><rect x="7.7038%" y="901" width="0.0136%" height="15" fill="rgb(241,128,51)" fg:x="565" fg:w="1"/><text x="7.9538%" y="911.50"></text></g><g><title>graphgen`DYLD-STUB$$free (2 samples, 0.03%)</title><rect x="7.7175%" y="901" width="0.0273%" height="15" fill="rgb(227,165,31)" fg:x="566" fg:w="2"/><text x="7.9675%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="7.7584%" y="853" width="0.0136%" height="15" fill="rgb(228,167,24)" fg:x="569" fg:w="1"/><text x="8.0084%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="7.7720%" y="837" width="0.0136%" height="15" fill="rgb(228,143,12)" fg:x="570" fg:w="1"/><text x="8.0220%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="7.7857%" y="837" width="0.0136%" height="15" fill="rgb(249,149,8)" fg:x="571" fg:w="1"/><text x="8.0357%" y="847.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.07%)</title><rect x="7.7448%" y="901" width="0.0682%" height="15" fill="rgb(243,35,44)" fg:x="568" fg:w="5"/><text x="7.9948%" y="911.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (5 samples, 0.07%)</title><rect x="7.7448%" y="885" width="0.0682%" height="15" fill="rgb(246,89,9)" fg:x="568" fg:w="5"/><text x="7.9948%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.07%)</title><rect x="7.7448%" y="869" width="0.0682%" height="15" fill="rgb(233,213,13)" fg:x="568" fg:w="5"/><text x="7.9948%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.04%)</title><rect x="7.7720%" y="853" width="0.0409%" height="15" fill="rgb(233,141,41)" fg:x="570" fg:w="3"/><text x="8.0220%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="7.7993%" y="837" width="0.0136%" height="15" fill="rgb(239,167,4)" fg:x="572" fg:w="1"/><text x="8.0493%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="7.7993%" y="821" width="0.0136%" height="15" fill="rgb(209,217,16)" fg:x="572" fg:w="1"/><text x="8.0493%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="7.7993%" y="805" width="0.0136%" height="15" fill="rgb(219,88,35)" fg:x="572" fg:w="1"/><text x="8.0493%" y="815.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="7.8129%" y="901" width="0.0136%" height="15" fill="rgb(220,193,23)" fg:x="573" fg:w="1"/><text x="8.0629%" y="911.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="7.8129%" y="885" width="0.0136%" height="15" fill="rgb(230,90,52)" fg:x="573" fg:w="1"/><text x="8.0629%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="7.8129%" y="869" width="0.0136%" height="15" fill="rgb(252,106,19)" fg:x="573" fg:w="1"/><text x="8.0629%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="7.8129%" y="853" width="0.0136%" height="15" fill="rgb(206,74,20)" fg:x="573" fg:w="1"/><text x="8.0629%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="7.8129%" y="837" width="0.0136%" height="15" fill="rgb(230,138,44)" fg:x="573" fg:w="1"/><text x="8.0629%" y="847.50"></text></g><g><title>graphgen`alloc::string::String::push (26 samples, 0.35%)</title><rect x="11.0308%" y="885" width="0.3545%" height="15" fill="rgb(235,182,43)" fg:x="809" fg:w="26"/><text x="11.2808%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="11.3853%" y="885" width="0.0136%" height="15" fill="rgb(242,16,51)" fg:x="835" fg:w="1"/><text x="11.6353%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (1 samples, 0.01%)</title><rect x="11.3853%" y="869" width="0.0136%" height="15" fill="rgb(248,9,4)" fg:x="835" fg:w="1"/><text x="11.6353%" y="879.50"></text></g><g><title>graphgen`alloc::str::_&lt;impl str&gt;::to_lowercase (263 samples, 3.59%)</title><rect x="7.8266%" y="901" width="3.5860%" height="15" fill="rgb(210,31,22)" fg:x="574" fg:w="263"/><text x="8.0766%" y="911.50">grap..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="11.3990%" y="885" width="0.0136%" height="15" fill="rgb(239,54,39)" fg:x="836" fg:w="1"/><text x="11.6490%" y="895.50"></text></g><g><title>graphgen`alloc::string::String::push (218 samples, 2.97%)</title><rect x="11.4126%" y="901" width="2.9725%" height="15" fill="rgb(230,99,41)" fg:x="837" fg:w="218"/><text x="11.6626%" y="911.50">gra..</text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.01%)</title><rect x="14.3851%" y="837" width="0.0136%" height="15" fill="rgb(253,106,12)" fg:x="1055" fg:w="1"/><text x="14.6351%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="14.3851%" y="821" width="0.0136%" height="15" fill="rgb(213,46,41)" fg:x="1055" fg:w="1"/><text x="14.6351%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="14.3851%" y="805" width="0.0136%" height="15" fill="rgb(215,133,35)" fg:x="1055" fg:w="1"/><text x="14.6351%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="14.3851%" y="789" width="0.0136%" height="15" fill="rgb(213,28,5)" fg:x="1055" fg:w="1"/><text x="14.6351%" y="799.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.03%)</title><rect x="14.3851%" y="853" width="0.0273%" height="15" fill="rgb(215,77,49)" fg:x="1055" fg:w="2"/><text x="14.6351%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="14.3987%" y="837" width="0.0136%" height="15" fill="rgb(248,100,22)" fg:x="1056" fg:w="1"/><text x="14.6487%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.01%)</title><rect x="14.4123%" y="837" width="0.0136%" height="15" fill="rgb(208,67,9)" fg:x="1057" fg:w="1"/><text x="14.6623%" y="847.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::join (7 samples, 0.10%)</title><rect x="14.4123%" y="853" width="0.0954%" height="15" fill="rgb(219,133,21)" fg:x="1057" fg:w="7"/><text x="14.6623%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (6 samples, 0.08%)</title><rect x="14.4260%" y="837" width="0.0818%" height="15" fill="rgb(246,46,29)" fg:x="1058" fg:w="6"/><text x="14.6760%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_deallocate (3 samples, 0.04%)</title><rect x="14.4669%" y="821" width="0.0409%" height="15" fill="rgb(246,185,52)" fg:x="1061" fg:w="3"/><text x="14.7169%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.04%)</title><rect x="14.4669%" y="805" width="0.0409%" height="15" fill="rgb(252,136,11)" fg:x="1061" fg:w="3"/><text x="14.7169%" y="815.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.14%)</title><rect x="14.3851%" y="901" width="0.1364%" height="15" fill="rgb(219,138,53)" fg:x="1055" fg:w="10"/><text x="14.6351%" y="911.50"></text></g><g><title>graphgen`&lt;reqwest::blocking::client::InnerClientHandle as core::ops::drop::Drop&gt;::drop (10 samples, 0.14%)</title><rect x="14.3851%" y="885" width="0.1364%" height="15" fill="rgb(211,51,23)" fg:x="1055" fg:w="10"/><text x="14.6351%" y="895.50"></text></g><g><title>graphgen`std::thread::JoinHandle&lt;T&gt;::join (10 samples, 0.14%)</title><rect x="14.3851%" y="869" width="0.1364%" height="15" fill="rgb(247,221,28)" fg:x="1055" fg:w="10"/><text x="14.6351%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (1 samples, 0.01%)</title><rect x="14.5078%" y="853" width="0.0136%" height="15" fill="rgb(251,222,45)" fg:x="1064" fg:w="1"/><text x="14.7578%" y="863.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;ego_tree::Node&lt;scraper::node::Node&gt;&gt; (1 samples, 0.01%)</title><rect x="14.5214%" y="901" width="0.0136%" height="15" fill="rgb(217,162,53)" fg:x="1065" fg:w="1"/><text x="14.7714%" y="911.50"></text></g><g><title>graphgen`tokio::runtime::task::waker::wake_by_val (1 samples, 0.01%)</title><rect x="14.5350%" y="837" width="0.0136%" height="15" fill="rgb(229,93,14)" fg:x="1066" fg:w="1"/><text x="14.7850%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (1 samples, 0.01%)</title><rect x="14.5350%" y="821" width="0.0136%" height="15" fill="rgb(209,67,49)" fg:x="1066" fg:w="1"/><text x="14.7850%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="14.5350%" y="805" width="0.0136%" height="15" fill="rgb(213,87,29)" fg:x="1066" fg:w="1"/><text x="14.7850%" y="815.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;futures_util::stream::try_stream::MapErr&lt;reqwest::async_impl::decoder::Decoder,reqwest::error::into_io&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="14.5350%" y="885" width="0.0273%" height="15" fill="rgb(205,151,52)" fg:x="1066" fg:w="2"/><text x="14.7850%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;reqwest::async_impl::body::ImplStream&gt; (2 samples, 0.03%)</title><rect x="14.5350%" y="869" width="0.0273%" height="15" fill="rgb(253,215,39)" fg:x="1066" fg:w="2"/><text x="14.7850%" y="879.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (2 samples, 0.03%)</title><rect x="14.5350%" y="853" width="0.0273%" height="15" fill="rgb(221,220,41)" fg:x="1066" fg:w="2"/><text x="14.7850%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="14.5487%" y="837" width="0.0136%" height="15" fill="rgb(218,133,21)" fg:x="1067" fg:w="1"/><text x="14.7987%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="14.5487%" y="821" width="0.0136%" height="15" fill="rgb(221,193,43)" fg:x="1067" fg:w="1"/><text x="14.7987%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="14.5487%" y="805" width="0.0136%" height="15" fill="rgb(240,128,52)" fg:x="1067" fg:w="1"/><text x="14.7987%" y="815.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;reqwest::blocking::response::Response&gt; (3 samples, 0.04%)</title><rect x="14.5350%" y="901" width="0.0409%" height="15" fill="rgb(253,114,12)" fg:x="1066" fg:w="3"/><text x="14.7850%" y="911.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper::client::connect::http::HttpInfo&gt; (1 samples, 0.01%)</title><rect x="14.5623%" y="885" width="0.0136%" height="15" fill="rgb(215,223,47)" fg:x="1068" fg:w="1"/><text x="14.8123%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="14.8214%" y="869" width="0.0818%" height="15" fill="rgb(248,225,23)" fg:x="1087" fg:w="6"/><text x="15.0714%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="14.9032%" y="869" width="0.0136%" height="15" fill="rgb(250,108,0)" fg:x="1093" fg:w="1"/><text x="15.1532%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="14.9168%" y="869" width="0.0136%" height="15" fill="rgb(228,208,7)" fg:x="1094" fg:w="1"/><text x="15.1668%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.01%)</title><rect x="14.9168%" y="853" width="0.0136%" height="15" fill="rgb(244,45,10)" fg:x="1094" fg:w="1"/><text x="15.1668%" y="863.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="14.9305%" y="869" width="0.0136%" height="15" fill="rgb(207,125,25)" fg:x="1095" fg:w="1"/><text x="15.1805%" y="879.50"></text></g><g><title>graphgen`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.50%)</title><rect x="14.5896%" y="885" width="0.5045%" height="15" fill="rgb(210,195,18)" fg:x="1070" fg:w="37"/><text x="14.8396%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.15%)</title><rect x="14.9441%" y="869" width="0.1500%" height="15" fill="rgb(249,80,12)" fg:x="1096" fg:w="11"/><text x="15.1941%" y="879.50"></text></g><g><title>graphgen`DYLD-STUB$$free (6 samples, 0.08%)</title><rect x="15.0941%" y="885" width="0.0818%" height="15" fill="rgb(221,65,9)" fg:x="1107" fg:w="6"/><text x="15.3441%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;string_cache::dynamic_set::Entry&gt; (2 samples, 0.03%)</title><rect x="15.3668%" y="837" width="0.0273%" height="15" fill="rgb(235,49,36)" fg:x="1127" fg:w="2"/><text x="15.6168%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="15.3804%" y="821" width="0.0136%" height="15" fill="rgb(225,32,20)" fg:x="1128" fg:w="1"/><text x="15.6304%" y="831.50"></text></g><g><title>graphgen`string_cache::dynamic_set::Set::remove (3 samples, 0.04%)</title><rect x="15.3668%" y="853" width="0.0409%" height="15" fill="rgb(215,141,46)" fg:x="1127" fg:w="3"/><text x="15.6168%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="15.3941%" y="837" width="0.0136%" height="15" fill="rgb(250,160,47)" fg:x="1129" fg:w="1"/><text x="15.6441%" y="847.50"></text></g><g><title>graphgen`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.11%)</title><rect x="15.3122%" y="869" width="0.1091%" height="15" fill="rgb(216,222,40)" fg:x="1123" fg:w="8"/><text x="15.5622%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="15.4077%" y="853" width="0.0136%" height="15" fill="rgb(234,217,39)" fg:x="1130" fg:w="1"/><text x="15.6577%" y="863.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;string_cache::dynamic_set::Entry&gt; (1 samples, 0.01%)</title><rect x="15.4759%" y="853" width="0.0136%" height="15" fill="rgb(207,178,40)" fg:x="1135" fg:w="1"/><text x="15.7259%" y="863.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="15.4759%" y="837" width="0.0136%" height="15" fill="rgb(221,136,13)" fg:x="1135" fg:w="1"/><text x="15.7259%" y="847.50"></text></g><g><title>graphgen`string_cache::dynamic_set::Set::remove (7 samples, 0.10%)</title><rect x="15.4213%" y="869" width="0.0954%" height="15" fill="rgb(249,199,10)" fg:x="1131" fg:w="7"/><text x="15.6713%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="15.4895%" y="853" width="0.0273%" height="15" fill="rgb(249,222,13)" fg:x="1136" fg:w="2"/><text x="15.7395%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="15.5168%" y="869" width="0.0273%" height="15" fill="rgb(244,185,38)" fg:x="1138" fg:w="2"/><text x="15.7668%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="15.5440%" y="869" width="0.0136%" height="15" fill="rgb(236,202,9)" fg:x="1140" fg:w="1"/><text x="15.7940%" y="879.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="15.5577%" y="869" width="0.0136%" height="15" fill="rgb(250,229,37)" fg:x="1141" fg:w="1"/><text x="15.8077%" y="879.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;ego_tree::Node&lt;scraper::node::Node&gt;&gt; (30 samples, 0.41%)</title><rect x="15.1759%" y="885" width="0.4091%" height="15" fill="rgb(206,174,23)" fg:x="1113" fg:w="30"/><text x="15.4259%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="15.5713%" y="869" width="0.0136%" height="15" fill="rgb(211,33,43)" fg:x="1142" fg:w="1"/><text x="15.8213%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.10%)</title><rect x="15.5849%" y="885" width="0.0954%" height="15" fill="rgb(245,58,50)" fg:x="1143" fg:w="7"/><text x="15.8349%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="15.6804%" y="885" width="0.0136%" height="15" fill="rgb(244,68,36)" fg:x="1150" fg:w="1"/><text x="15.9304%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.07%)</title><rect x="15.6940%" y="885" width="0.0682%" height="15" fill="rgb(232,229,15)" fg:x="1151" fg:w="5"/><text x="15.9440%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="15.7622%" y="885" width="0.0136%" height="15" fill="rgb(254,30,23)" fg:x="1156" fg:w="1"/><text x="16.0122%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="15.7622%" y="869" width="0.0136%" height="15" fill="rgb(235,160,14)" fg:x="1156" fg:w="1"/><text x="16.0122%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="15.7758%" y="885" width="0.0136%" height="15" fill="rgb(212,155,44)" fg:x="1157" fg:w="1"/><text x="16.0258%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (14 samples, 0.19%)</title><rect x="15.7895%" y="885" width="0.1909%" height="15" fill="rgb(226,2,50)" fg:x="1158" fg:w="14"/><text x="16.0395%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (14 samples, 0.19%)</title><rect x="15.7895%" y="869" width="0.1909%" height="15" fill="rgb(234,177,6)" fg:x="1158" fg:w="14"/><text x="16.0395%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.19%)</title><rect x="15.7895%" y="853" width="0.1909%" height="15" fill="rgb(217,24,9)" fg:x="1158" fg:w="14"/><text x="16.0395%" y="863.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.03%)</title><rect x="15.9804%" y="885" width="0.0273%" height="15" fill="rgb(220,13,46)" fg:x="1172" fg:w="2"/><text x="16.2304%" y="895.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;scraper::html::Html&gt; (110 samples, 1.50%)</title><rect x="14.5759%" y="901" width="1.4999%" height="15" fill="rgb(239,221,27)" fg:x="1069" fg:w="110"/><text x="14.8259%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.07%)</title><rect x="16.0076%" y="885" width="0.0682%" height="15" fill="rgb(222,198,25)" fg:x="1174" fg:w="5"/><text x="16.2576%" y="895.50"></text></g><g><title>graphgen`core::slice::memchr::memchr_aligned (8 samples, 0.11%)</title><rect x="16.0758%" y="901" width="0.1091%" height="15" fill="rgb(211,99,13)" fg:x="1179" fg:w="8"/><text x="16.3258%" y="911.50"></text></g><g><title>graphgen`core::str::converts::from_utf8 (27 samples, 0.37%)</title><rect x="16.1849%" y="901" width="0.3681%" height="15" fill="rgb(232,111,31)" fg:x="1187" fg:w="27"/><text x="16.4349%" y="911.50"></text></g><g><title>graphgen`core::str::pattern::StrSearcher::new (2 samples, 0.03%)</title><rect x="16.5530%" y="901" width="0.0273%" height="15" fill="rgb(245,82,37)" fg:x="1214" fg:w="2"/><text x="16.8030%" y="911.50"></text></g><g><title>graphgen`core::str::pattern::TwoWaySearcher::next (98 samples, 1.34%)</title><rect x="16.5803%" y="901" width="1.3362%" height="15" fill="rgb(227,149,46)" fg:x="1216" fg:w="98"/><text x="16.8303%" y="911.50"></text></g><g><title>graphgen`core::unicode::unicode_data::conversions::to_lower (146 samples, 1.99%)</title><rect x="17.9166%" y="901" width="1.9907%" height="15" fill="rgb(218,36,50)" fg:x="1314" fg:w="146"/><text x="18.1666%" y="911.50">g..</text></g><g><title>graphgen`ego_tree::NodeId::to_index (2 samples, 0.03%)</title><rect x="19.9073%" y="901" width="0.0273%" height="15" fill="rgb(226,80,48)" fg:x="1460" fg:w="2"/><text x="20.1573%" y="911.50"></text></g><g><title>graphgen`flurry::map::HashMap&lt;K,V,S&gt;::add_count (2 samples, 0.03%)</title><rect x="19.9346%" y="901" width="0.0273%" height="15" fill="rgb(238,224,15)" fg:x="1462" fg:w="2"/><text x="20.1846%" y="911.50"></text></g><g><title>graphgen`flurry::raw::Table&lt;K,V&gt;::find (10 samples, 0.14%)</title><rect x="20.0300%" y="885" width="0.1364%" height="15" fill="rgb(241,136,10)" fg:x="1469" fg:w="10"/><text x="20.2800%" y="895.50"></text></g><g><title>graphgen`seize::tls::thread_id::get (2 samples, 0.03%)</title><rect x="20.1936%" y="869" width="0.0273%" height="15" fill="rgb(208,32,45)" fg:x="1481" fg:w="2"/><text x="20.4436%" y="879.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::load (8 samples, 0.11%)</title><rect x="20.1663%" y="885" width="0.1091%" height="15" fill="rgb(207,135,9)" fg:x="1479" fg:w="8"/><text x="20.4163%" y="895.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.05%)</title><rect x="20.2209%" y="869" width="0.0545%" height="15" fill="rgb(206,86,44)" fg:x="1483" fg:w="4"/><text x="20.4709%" y="879.50"></text></g><g><title>graphgen`flurry::map::HashMap&lt;K,V,S&gt;::get_node (35 samples, 0.48%)</title><rect x="19.9618%" y="901" width="0.4772%" height="15" fill="rgb(245,177,15)" fg:x="1464" fg:w="35"/><text x="20.2118%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.16%)</title><rect x="20.2754%" y="885" width="0.1636%" height="15" fill="rgb(206,64,50)" fg:x="1487" fg:w="12"/><text x="20.5254%" y="895.50"></text></g><g><title>graphgen`seize::tls::thread_id::get (1 samples, 0.01%)</title><rect x="21.0526%" y="837" width="0.0136%" height="15" fill="rgb(234,36,40)" fg:x="1544" fg:w="1"/><text x="21.3026%" y="847.50"></text></g><g><title>graphgen`flurry::raw::Table&lt;K,V&gt;::get_moved (2 samples, 0.03%)</title><rect x="21.0526%" y="853" width="0.0273%" height="15" fill="rgb(213,64,8)" fg:x="1544" fg:w="2"/><text x="21.3026%" y="863.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="21.0663%" y="837" width="0.0136%" height="15" fill="rgb(210,75,36)" fg:x="1545" fg:w="1"/><text x="21.3163%" y="847.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::compare_exchange (1 samples, 0.01%)</title><rect x="21.0799%" y="853" width="0.0136%" height="15" fill="rgb(229,88,21)" fg:x="1546" fg:w="1"/><text x="21.3299%" y="863.50"></text></g><g><title>graphgen`seize::tls::thread_id::get (1 samples, 0.01%)</title><rect x="21.0935%" y="837" width="0.0136%" height="15" fill="rgb(252,204,47)" fg:x="1547" fg:w="1"/><text x="21.3435%" y="847.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::load (2 samples, 0.03%)</title><rect x="21.0935%" y="853" width="0.0273%" height="15" fill="rgb(208,77,27)" fg:x="1547" fg:w="2"/><text x="21.3435%" y="863.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="21.1072%" y="837" width="0.0136%" height="15" fill="rgb(221,76,26)" fg:x="1548" fg:w="1"/><text x="21.3572%" y="847.50"></text></g><g><title>graphgen`flurry::map::HashMap&lt;K,V,S&gt;::add_count (31 samples, 0.42%)</title><rect x="20.7118%" y="885" width="0.4227%" height="15" fill="rgb(225,139,18)" fg:x="1519" fg:w="31"/><text x="20.9618%" y="895.50"></text></g><g><title>graphgen`flurry::map::HashMap&lt;K,V,S&gt;::transfer (30 samples, 0.41%)</title><rect x="20.7254%" y="869" width="0.4091%" height="15" fill="rgb(230,137,11)" fg:x="1520" fg:w="30"/><text x="20.9754%" y="879.50"></text></g><g><title>graphgen`seize::raw::Collector::node (1 samples, 0.01%)</title><rect x="21.1208%" y="853" width="0.0136%" height="15" fill="rgb(212,28,1)" fg:x="1549" fg:w="1"/><text x="21.3708%" y="863.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::compare_exchange (1 samples, 0.01%)</title><rect x="21.1344%" y="885" width="0.0136%" height="15" fill="rgb(248,164,17)" fg:x="1550" fg:w="1"/><text x="21.3844%" y="895.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::load (6 samples, 0.08%)</title><rect x="21.1481%" y="885" width="0.0818%" height="15" fill="rgb(222,171,42)" fg:x="1551" fg:w="6"/><text x="21.3981%" y="895.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.05%)</title><rect x="21.1753%" y="869" width="0.0545%" height="15" fill="rgb(243,84,45)" fg:x="1553" fg:w="4"/><text x="21.4253%" y="879.50"></text></g><g><title>graphgen`seize::raw::Collector::node (1 samples, 0.01%)</title><rect x="21.2708%" y="869" width="0.0136%" height="15" fill="rgb(252,49,23)" fg:x="1560" fg:w="1"/><text x="21.5208%" y="879.50"></text></g><g><title>graphgen`seize::tls::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.01%)</title><rect x="21.2708%" y="853" width="0.0136%" height="15" fill="rgb(215,19,7)" fg:x="1560" fg:w="1"/><text x="21.5208%" y="863.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="21.2708%" y="837" width="0.0136%" height="15" fill="rgb(238,81,41)" fg:x="1560" fg:w="1"/><text x="21.5208%" y="847.50"></text></g><g><title>graphgen`seize::collector::Collector::link_boxed (7 samples, 0.10%)</title><rect x="21.2299%" y="885" width="0.0954%" height="15" fill="rgb(210,199,37)" fg:x="1557" fg:w="7"/><text x="21.4799%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.04%)</title><rect x="21.2844%" y="869" width="0.0409%" height="15" fill="rgb(244,192,49)" fg:x="1561" fg:w="3"/><text x="21.5344%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="21.3117%" y="853" width="0.0136%" height="15" fill="rgb(226,211,11)" fg:x="1563" fg:w="1"/><text x="21.5617%" y="863.50"></text></g><g><title>graphgen`seize::raw::Collector::node (1 samples, 0.01%)</title><rect x="21.3253%" y="885" width="0.0136%" height="15" fill="rgb(236,162,54)" fg:x="1564" fg:w="1"/><text x="21.5753%" y="895.50"></text></g><g><title>graphgen`seize::tls::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.01%)</title><rect x="21.3253%" y="869" width="0.0136%" height="15" fill="rgb(220,229,9)" fg:x="1564" fg:w="1"/><text x="21.5753%" y="879.50"></text></g><g><title>graphgen`seize::tls::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.01%)</title><rect x="21.3390%" y="885" width="0.0136%" height="15" fill="rgb(250,87,22)" fg:x="1565" fg:w="1"/><text x="21.5890%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="21.3526%" y="885" width="0.0136%" height="15" fill="rgb(239,43,17)" fg:x="1566" fg:w="1"/><text x="21.6026%" y="895.50"></text></g><g><title>graphgen`flurry::map::HashMap&lt;K,V,S&gt;::insert (70 samples, 0.95%)</title><rect x="20.4391%" y="901" width="0.9545%" height="15" fill="rgb(231,177,25)" fg:x="1499" fg:w="70"/><text x="20.6891%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="21.3662%" y="885" width="0.0273%" height="15" fill="rgb(219,179,1)" fg:x="1567" fg:w="2"/><text x="21.6162%" y="895.50"></text></g><g><title>graphgen`flurry::raw::Table&lt;K,V&gt;::find (2 samples, 0.03%)</title><rect x="21.3935%" y="901" width="0.0273%" height="15" fill="rgb(238,219,53)" fg:x="1569" fg:w="2"/><text x="21.6435%" y="911.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::compare_exchange (1 samples, 0.01%)</title><rect x="21.4208%" y="901" width="0.0136%" height="15" fill="rgb(232,167,36)" fg:x="1571" fg:w="1"/><text x="21.6708%" y="911.50"></text></g><g><title>graphgen`flurry::reclaim::Atomic&lt;T&gt;::load (6 samples, 0.08%)</title><rect x="21.4344%" y="901" width="0.0818%" height="15" fill="rgb(244,19,51)" fg:x="1572" fg:w="6"/><text x="21.6844%" y="911.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="21.5026%" y="885" width="0.0136%" height="15" fill="rgb(224,6,22)" fg:x="1577" fg:w="1"/><text x="21.7526%" y="895.50"></text></g><g><title>graphgen`&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 0.01%)</title><rect x="21.5162%" y="885" width="0.0136%" height="15" fill="rgb(224,145,5)" fg:x="1578" fg:w="1"/><text x="21.7662%" y="895.50"></text></g><g><title>graphgen`reqwest::blocking::client::Client::builder (1 samples, 0.01%)</title><rect x="21.5299%" y="885" width="0.0136%" height="15" fill="rgb(234,130,49)" fg:x="1579" fg:w="1"/><text x="21.7799%" y="895.50"></text></g><g><title>graphgen`reqwest::async_impl::client::ClientBuilder::new (1 samples, 0.01%)</title><rect x="21.5299%" y="869" width="0.0136%" height="15" fill="rgb(254,6,2)" fg:x="1579" fg:w="1"/><text x="21.7799%" y="879.50"></text></g><g><title>graphgen`url::host::Host::parse (1 samples, 0.01%)</title><rect x="21.5435%" y="805" width="0.0136%" height="15" fill="rgb(208,96,46)" fg:x="1580" fg:w="1"/><text x="21.7935%" y="815.50"></text></g><g><title>graphgen`idna::uts46::Config::to_ascii (1 samples, 0.01%)</title><rect x="21.5571%" y="773" width="0.0136%" height="15" fill="rgb(239,3,39)" fg:x="1581" fg:w="1"/><text x="21.8071%" y="783.50"></text></g><g><title>graphgen`idna::uts46::Idna::to_ascii (1 samples, 0.01%)</title><rect x="21.5571%" y="757" width="0.0136%" height="15" fill="rgb(233,210,1)" fg:x="1581" fg:w="1"/><text x="21.8071%" y="767.50"></text></g><g><title>graphgen`idna::uts46::is_simple (1 samples, 0.01%)</title><rect x="21.5571%" y="741" width="0.0136%" height="15" fill="rgb(244,137,37)" fg:x="1581" fg:w="1"/><text x="21.8071%" y="751.50"></text></g><g><title>graphgen`url::parser::Parser::parse_host (3 samples, 0.04%)</title><rect x="21.5571%" y="805" width="0.0409%" height="15" fill="rgb(240,136,2)" fg:x="1581" fg:w="3"/><text x="21.8071%" y="815.50"></text></g><g><title>graphgen`url::host::Host::parse (3 samples, 0.04%)</title><rect x="21.5571%" y="789" width="0.0409%" height="15" fill="rgb(239,18,37)" fg:x="1581" fg:w="3"/><text x="21.8071%" y="799.50"></text></g><g><title>graphgen`percent_encoding::PercentDecode::if_any (2 samples, 0.03%)</title><rect x="21.5708%" y="773" width="0.0273%" height="15" fill="rgb(218,185,22)" fg:x="1582" fg:w="2"/><text x="21.8208%" y="783.50"></text></g><g><title>graphgen`&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (6 samples, 0.08%)</title><rect x="21.5435%" y="869" width="0.0818%" height="15" fill="rgb(225,218,4)" fg:x="1580" fg:w="6"/><text x="21.7935%" y="879.50"></text></g><g><title>graphgen`url::ParseOptions::parse (6 samples, 0.08%)</title><rect x="21.5435%" y="853" width="0.0818%" height="15" fill="rgb(230,182,32)" fg:x="1580" fg:w="6"/><text x="21.7935%" y="863.50"></text></g><g><title>graphgen`url::parser::Parser::parse_url (6 samples, 0.08%)</title><rect x="21.5435%" y="837" width="0.0818%" height="15" fill="rgb(242,56,43)" fg:x="1580" fg:w="6"/><text x="21.7935%" y="847.50"></text></g><g><title>graphgen`url::parser::Parser::after_double_slash (6 samples, 0.08%)</title><rect x="21.5435%" y="821" width="0.0818%" height="15" fill="rgb(233,99,24)" fg:x="1580" fg:w="6"/><text x="21.7935%" y="831.50"></text></g><g><title>graphgen`url::parser::Parser::parse_path_start (2 samples, 0.03%)</title><rect x="21.5980%" y="805" width="0.0273%" height="15" fill="rgb(234,209,42)" fg:x="1584" fg:w="2"/><text x="21.8480%" y="815.50"></text></g><g><title>graphgen`url::parser::Parser::parse_path (2 samples, 0.03%)</title><rect x="21.5980%" y="789" width="0.0273%" height="15" fill="rgb(227,7,12)" fg:x="1584" fg:w="2"/><text x="21.8480%" y="799.50"></text></g><g><title>graphgen`&lt;percent_encoding::PercentEncode as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.6117%" y="773" width="0.0136%" height="15" fill="rgb(245,203,43)" fg:x="1585" fg:w="1"/><text x="21.8617%" y="783.50"></text></g><g><title>graphgen`reqwest::blocking::client::Client::get (7 samples, 0.10%)</title><rect x="21.5435%" y="885" width="0.0954%" height="15" fill="rgb(238,205,33)" fg:x="1580" fg:w="7"/><text x="21.7935%" y="895.50"></text></g><g><title>graphgen`reqwest::async_impl::request::extract_authority (1 samples, 0.01%)</title><rect x="21.6253%" y="869" width="0.0136%" height="15" fill="rgb(231,56,7)" fg:x="1586" fg:w="1"/><text x="21.8753%" y="879.50"></text></g><g><title>graphgen`std::thread::park (2 samples, 0.03%)</title><rect x="21.6389%" y="853" width="0.0273%" height="15" fill="rgb(244,186,29)" fg:x="1587" fg:w="2"/><text x="21.8889%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (2 samples, 0.03%)</title><rect x="21.6389%" y="837" width="0.0273%" height="15" fill="rgb(234,111,31)" fg:x="1587" fg:w="2"/><text x="21.8889%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (2 samples, 0.03%)</title><rect x="21.6389%" y="821" width="0.0273%" height="15" fill="rgb(241,149,10)" fg:x="1587" fg:w="2"/><text x="21.8889%" y="831.50"></text></g><g><title>graphgen`reqwest::blocking::wait::timeout (3 samples, 0.04%)</title><rect x="21.6389%" y="869" width="0.0409%" height="15" fill="rgb(249,206,44)" fg:x="1587" fg:w="3"/><text x="21.8889%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="21.6662%" y="853" width="0.0136%" height="15" fill="rgb(251,153,30)" fg:x="1589" fg:w="1"/><text x="21.9162%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (9 samples, 0.12%)</title><rect x="21.6798%" y="837" width="0.1227%" height="15" fill="rgb(239,152,38)" fg:x="1590" fg:w="9"/><text x="21.9298%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (3 samples, 0.04%)</title><rect x="21.8298%" y="821" width="0.0409%" height="15" fill="rgb(249,139,47)" fg:x="1601" fg:w="3"/><text x="22.0798%" y="831.50"></text></g><g><title>graphgen`reqwest::blocking::client::ClientBuilder::build (18 samples, 0.25%)</title><rect x="21.6389%" y="885" width="0.2454%" height="15" fill="rgb(244,64,35)" fg:x="1587" fg:w="18"/><text x="21.8889%" y="895.50"></text></g><g><title>graphgen`std::thread::Builder::spawn (15 samples, 0.20%)</title><rect x="21.6798%" y="869" width="0.2045%" height="15" fill="rgb(216,46,15)" fg:x="1590" fg:w="15"/><text x="21.9298%" y="879.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::new (15 samples, 0.20%)</title><rect x="21.6798%" y="853" width="0.2045%" height="15" fill="rgb(250,74,19)" fg:x="1590" fg:w="15"/><text x="21.9298%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (6 samples, 0.08%)</title><rect x="21.8026%" y="837" width="0.0818%" height="15" fill="rgb(249,42,33)" fg:x="1599" fg:w="6"/><text x="22.0526%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (1 samples, 0.01%)</title><rect x="21.8707%" y="821" width="0.0136%" height="15" fill="rgb(242,149,17)" fg:x="1604" fg:w="1"/><text x="22.1207%" y="831.50"></text></g><g><title>graphgen`&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="21.8844%" y="837" width="0.0136%" height="15" fill="rgb(244,29,21)" fg:x="1605" fg:w="1"/><text x="22.1344%" y="847.50"></text></g><g><title>graphgen`reqwest::blocking::wait::timeout (6 samples, 0.08%)</title><rect x="21.8844%" y="853" width="0.0818%" height="15" fill="rgb(220,130,37)" fg:x="1605" fg:w="6"/><text x="22.1344%" y="863.50"></text></g><g><title>graphgen`std::thread::park_timeout (5 samples, 0.07%)</title><rect x="21.8980%" y="837" width="0.0682%" height="15" fill="rgb(211,67,2)" fg:x="1606" fg:w="5"/><text x="22.1480%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (5 samples, 0.07%)</title><rect x="21.8980%" y="821" width="0.0682%" height="15" fill="rgb(235,68,52)" fg:x="1606" fg:w="5"/><text x="22.1480%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (5 samples, 0.07%)</title><rect x="21.8980%" y="805" width="0.0682%" height="15" fill="rgb(246,142,3)" fg:x="1606" fg:w="5"/><text x="22.1480%" y="815.50"></text></g><g><title>graphgen`reqwest::blocking::get (34 samples, 0.46%)</title><rect x="21.5162%" y="901" width="0.4636%" height="15" fill="rgb(241,25,7)" fg:x="1578" fg:w="34"/><text x="21.7662%" y="911.50"></text></g><g><title>graphgen`reqwest::blocking::request::RequestBuilder::send (7 samples, 0.10%)</title><rect x="21.8844%" y="885" width="0.0954%" height="15" fill="rgb(242,119,39)" fg:x="1605" fg:w="7"/><text x="22.1344%" y="895.50"></text></g><g><title>graphgen`reqwest::blocking::client::Client::execute (7 samples, 0.10%)</title><rect x="21.8844%" y="869" width="0.0954%" height="15" fill="rgb(241,98,45)" fg:x="1605" fg:w="7"/><text x="22.1344%" y="879.50"></text></g><g><title>graphgen`tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="21.9662%" y="853" width="0.0136%" height="15" fill="rgb(254,28,30)" fg:x="1611" fg:w="1"/><text x="22.2162%" y="863.50"></text></g><g><title>graphgen`&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (1 samples, 0.01%)</title><rect x="21.9662%" y="837" width="0.0136%" height="15" fill="rgb(241,142,54)" fg:x="1611" fg:w="1"/><text x="22.2162%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="21.9662%" y="821" width="0.0136%" height="15" fill="rgb(222,85,15)" fg:x="1611" fg:w="1"/><text x="22.2162%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::new (1 samples, 0.01%)</title><rect x="21.9798%" y="885" width="0.0136%" height="15" fill="rgb(210,85,47)" fg:x="1612" fg:w="1"/><text x="22.2298%" y="895.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::consume_char_ref (1 samples, 0.01%)</title><rect x="22.2253%" y="853" width="0.0136%" height="15" fill="rgb(224,206,25)" fg:x="1630" fg:w="1"/><text x="22.4753%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::create_tag (5 samples, 0.07%)</title><rect x="22.2389%" y="853" width="0.0682%" height="15" fill="rgb(243,201,19)" fg:x="1631" fg:w="5"/><text x="22.4889%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_char (1 samples, 0.01%)</title><rect x="22.3071%" y="853" width="0.0136%" height="15" fill="rgb(236,59,4)" fg:x="1636" fg:w="1"/><text x="22.5571%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_current_tag (1 samples, 0.01%)</title><rect x="22.3207%" y="853" width="0.0136%" height="15" fill="rgb(254,179,45)" fg:x="1637" fg:w="1"/><text x="22.5707%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_preprocessed_char (10 samples, 0.14%)</title><rect x="22.3343%" y="853" width="0.1364%" height="15" fill="rgb(226,14,10)" fg:x="1638" fg:w="10"/><text x="22.5843%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::pop_except_from (1 samples, 0.01%)</title><rect x="22.4707%" y="853" width="0.0136%" height="15" fill="rgb(244,27,41)" fg:x="1648" fg:w="1"/><text x="22.7207%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_char_ref (1 samples, 0.01%)</title><rect x="22.4843%" y="853" width="0.0136%" height="15" fill="rgb(235,35,32)" fg:x="1649" fg:w="1"/><text x="22.7343%" y="863.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="24.7614%" y="837" width="0.0136%" height="15" fill="rgb(218,68,31)" fg:x="1816" fg:w="1"/><text x="25.0114%" y="847.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (7 samples, 0.10%)</title><rect x="24.7750%" y="837" width="0.0954%" height="15" fill="rgb(207,120,37)" fg:x="1817" fg:w="7"/><text x="25.0250%" y="847.50"></text></g><g><title>graphgen`__rdl_alloc (1 samples, 0.01%)</title><rect x="24.8705%" y="837" width="0.0136%" height="15" fill="rgb(227,98,0)" fg:x="1824" fg:w="1"/><text x="25.1205%" y="847.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="24.8841%" y="837" width="0.0136%" height="15" fill="rgb(207,7,3)" fg:x="1825" fg:w="1"/><text x="25.1341%" y="847.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::consume_char_ref (2 samples, 0.03%)</title><rect x="24.8977%" y="837" width="0.0273%" height="15" fill="rgb(206,98,19)" fg:x="1826" fg:w="2"/><text x="25.1477%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="24.9114%" y="821" width="0.0136%" height="15" fill="rgb(217,5,26)" fg:x="1827" fg:w="1"/><text x="25.1614%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="24.9114%" y="805" width="0.0136%" height="15" fill="rgb(235,190,38)" fg:x="1827" fg:w="1"/><text x="25.1614%" y="815.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (7 samples, 0.10%)</title><rect x="24.9523%" y="821" width="0.0954%" height="15" fill="rgb(247,86,24)" fg:x="1830" fg:w="7"/><text x="25.2023%" y="831.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="25.0477%" y="821" width="0.0136%" height="15" fill="rgb(205,101,16)" fg:x="1837" fg:w="1"/><text x="25.2977%" y="831.50"></text></g><g><title>graphgen`&lt;markup5ever::LocalNameStaticSet as string_cache::static_sets::StaticAtomSet&gt;::get (1 samples, 0.01%)</title><rect x="25.1432%" y="805" width="0.0136%" height="15" fill="rgb(246,168,33)" fg:x="1844" fg:w="1"/><text x="25.3932%" y="815.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (10 samples, 0.14%)</title><rect x="25.1568%" y="805" width="0.1364%" height="15" fill="rgb(231,114,1)" fg:x="1845" fg:w="10"/><text x="25.4068%" y="815.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="25.3068%" y="789" width="0.0136%" height="15" fill="rgb(207,184,53)" fg:x="1856" fg:w="1"/><text x="25.5568%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="25.3477%" y="741" width="0.0136%" height="15" fill="rgb(224,95,51)" fg:x="1859" fg:w="1"/><text x="25.5977%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="25.3477%" y="725" width="0.0136%" height="15" fill="rgb(212,188,45)" fg:x="1859" fg:w="1"/><text x="25.5977%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="25.3477%" y="709" width="0.0136%" height="15" fill="rgb(223,154,38)" fg:x="1859" fg:w="1"/><text x="25.5977%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="25.3477%" y="693" width="0.0136%" height="15" fill="rgb(251,22,52)" fg:x="1859" fg:w="1"/><text x="25.5977%" y="703.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="25.3204%" y="789" width="0.0545%" height="15" fill="rgb(229,209,22)" fg:x="1857" fg:w="4"/><text x="25.5704%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="25.3477%" y="773" width="0.0273%" height="15" fill="rgb(234,138,34)" fg:x="1859" fg:w="2"/><text x="25.5977%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="25.3477%" y="757" width="0.0273%" height="15" fill="rgb(212,95,11)" fg:x="1859" fg:w="2"/><text x="25.5977%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="25.3613%" y="741" width="0.0136%" height="15" fill="rgb(240,179,47)" fg:x="1860" fg:w="1"/><text x="25.6113%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="25.3613%" y="725" width="0.0136%" height="15" fill="rgb(240,163,11)" fg:x="1860" fg:w="1"/><text x="25.6113%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="25.3613%" y="709" width="0.0136%" height="15" fill="rgb(236,37,12)" fg:x="1860" fg:w="1"/><text x="25.6113%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="25.3750%" y="789" width="0.0273%" height="15" fill="rgb(232,164,16)" fg:x="1861" fg:w="2"/><text x="25.6250%" y="799.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.14%)</title><rect x="25.2932%" y="805" width="0.1364%" height="15" fill="rgb(244,205,15)" fg:x="1855" fg:w="10"/><text x="25.5432%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="25.4022%" y="789" width="0.0273%" height="15" fill="rgb(223,117,47)" fg:x="1863" fg:w="2"/><text x="25.6522%" y="799.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::finish_attribute (30 samples, 0.41%)</title><rect x="25.0614%" y="821" width="0.4091%" height="15" fill="rgb(244,107,35)" fg:x="1838" fg:w="30"/><text x="25.3114%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.04%)</title><rect x="25.4295%" y="805" width="0.0409%" height="15" fill="rgb(205,140,8)" fg:x="1865" fg:w="3"/><text x="25.6795%" y="815.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (3 samples, 0.04%)</title><rect x="25.4704%" y="821" width="0.0409%" height="15" fill="rgb(228,84,46)" fg:x="1868" fg:w="3"/><text x="25.7204%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::create_attribute (47 samples, 0.64%)</title><rect x="24.9250%" y="837" width="0.6409%" height="15" fill="rgb(254,188,9)" fg:x="1828" fg:w="47"/><text x="25.1750%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="25.5113%" y="821" width="0.0545%" height="15" fill="rgb(206,112,54)" fg:x="1871" fg:w="4"/><text x="25.7613%" y="831.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (12 samples, 0.16%)</title><rect x="25.5659%" y="821" width="0.1636%" height="15" fill="rgb(216,84,49)" fg:x="1875" fg:w="12"/><text x="25.8159%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::discard_tag (4 samples, 0.05%)</title><rect x="25.7295%" y="821" width="0.0545%" height="15" fill="rgb(214,194,35)" fg:x="1887" fg:w="4"/><text x="25.9795%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (5 samples, 0.07%)</title><rect x="25.7840%" y="821" width="0.0682%" height="15" fill="rgb(249,28,3)" fg:x="1891" fg:w="5"/><text x="26.0340%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::create_tag (28 samples, 0.38%)</title><rect x="25.5659%" y="837" width="0.3818%" height="15" fill="rgb(222,56,52)" fg:x="1875" fg:w="28"/><text x="25.8159%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.10%)</title><rect x="25.8522%" y="821" width="0.0954%" height="15" fill="rgb(245,217,50)" fg:x="1896" fg:w="7"/><text x="26.1022%" y="831.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::next (5 samples, 0.07%)</title><rect x="25.9749%" y="821" width="0.0682%" height="15" fill="rgb(213,201,24)" fg:x="1905" fg:w="5"/><text x="26.2249%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (2 samples, 0.03%)</title><rect x="26.0158%" y="805" width="0.0273%" height="15" fill="rgb(248,116,28)" fg:x="1908" fg:w="2"/><text x="26.2658%" y="815.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::discard_char (10 samples, 0.14%)</title><rect x="25.9476%" y="837" width="0.1364%" height="15" fill="rgb(219,72,43)" fg:x="1903" fg:w="10"/><text x="26.1976%" y="847.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (3 samples, 0.04%)</title><rect x="26.0431%" y="821" width="0.0409%" height="15" fill="rgb(209,138,14)" fg:x="1910" fg:w="3"/><text x="26.2931%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::discard_tag (2 samples, 0.03%)</title><rect x="26.0840%" y="837" width="0.0273%" height="15" fill="rgb(222,18,33)" fg:x="1913" fg:w="2"/><text x="26.3340%" y="847.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::eat (1 samples, 0.01%)</title><rect x="26.1113%" y="837" width="0.0136%" height="15" fill="rgb(213,199,7)" fg:x="1915" fg:w="1"/><text x="26.3613%" y="847.50"></text></g><g><title>graphgen`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u8&gt;::eq (1 samples, 0.01%)</title><rect x="26.1113%" y="821" width="0.0136%" height="15" fill="rgb(250,110,10)" fg:x="1915" fg:w="1"/><text x="26.3613%" y="831.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="26.1385%" y="821" width="0.0136%" height="15" fill="rgb(248,123,6)" fg:x="1917" fg:w="1"/><text x="26.3885%" y="831.50"></text></g><g><title>graphgen`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.3294%" y="789" width="0.0136%" height="15" fill="rgb(206,91,31)" fg:x="1931" fg:w="1"/><text x="26.5794%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (2 samples, 0.03%)</title><rect x="26.3431%" y="789" width="0.0273%" height="15" fill="rgb(211,154,13)" fg:x="1932" fg:w="2"/><text x="26.5931%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="26.3976%" y="773" width="0.0136%" height="15" fill="rgb(225,148,7)" fg:x="1936" fg:w="1"/><text x="26.6476%" y="783.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="26.4249%" y="757" width="0.0136%" height="15" fill="rgb(220,160,43)" fg:x="1938" fg:w="1"/><text x="26.6749%" y="767.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (1 samples, 0.01%)</title><rect x="26.4385%" y="757" width="0.0136%" height="15" fill="rgb(213,52,39)" fg:x="1939" fg:w="1"/><text x="26.6885%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="26.4521%" y="757" width="0.0136%" height="15" fill="rgb(243,137,7)" fg:x="1940" fg:w="1"/><text x="26.7021%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeId::from_index (1 samples, 0.01%)</title><rect x="26.5067%" y="741" width="0.0136%" height="15" fill="rgb(230,79,13)" fg:x="1944" fg:w="1"/><text x="26.7567%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="26.5203%" y="741" width="0.0136%" height="15" fill="rgb(247,105,23)" fg:x="1945" fg:w="1"/><text x="26.7703%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::detach (1 samples, 0.01%)</title><rect x="26.5203%" y="725" width="0.0136%" height="15" fill="rgb(223,179,41)" fg:x="1945" fg:w="1"/><text x="26.7703%" y="735.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (5 samples, 0.07%)</title><rect x="26.5340%" y="741" width="0.0682%" height="15" fill="rgb(218,9,34)" fg:x="1946" fg:w="5"/><text x="26.7840%" y="751.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="26.5885%" y="725" width="0.0136%" height="15" fill="rgb(222,106,8)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="735.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="26.5885%" y="709" width="0.0136%" height="15" fill="rgb(211,220,0)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="26.5885%" y="693" width="0.0136%" height="15" fill="rgb(229,52,16)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="26.5885%" y="677" width="0.0136%" height="15" fill="rgb(212,155,18)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="26.5885%" y="661" width="0.0136%" height="15" fill="rgb(242,21,14)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="26.5885%" y="645" width="0.0136%" height="15" fill="rgb(222,19,48)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="26.5885%" y="629" width="0.0136%" height="15" fill="rgb(232,45,27)" fg:x="1950" fg:w="1"/><text x="26.8385%" y="639.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_tendril (1 samples, 0.01%)</title><rect x="26.6021%" y="741" width="0.0136%" height="15" fill="rgb(249,103,42)" fg:x="1951" fg:w="1"/><text x="26.8521%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (19 samples, 0.26%)</title><rect x="26.4112%" y="773" width="0.2591%" height="15" fill="rgb(246,81,33)" fg:x="1937" fg:w="19"/><text x="26.6612%" y="783.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (15 samples, 0.20%)</title><rect x="26.4658%" y="757" width="0.2045%" height="15" fill="rgb(252,33,42)" fg:x="1941" fg:w="15"/><text x="26.7158%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="26.6158%" y="741" width="0.0545%" height="15" fill="rgb(209,212,41)" fg:x="1952" fg:w="4"/><text x="26.8658%" y="751.50"></text></g><g><title>graphgen`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (42 samples, 0.57%)</title><rect x="26.1794%" y="805" width="0.5727%" height="15" fill="rgb(207,154,6)" fg:x="1920" fg:w="42"/><text x="26.4294%" y="815.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (28 samples, 0.38%)</title><rect x="26.3703%" y="789" width="0.3818%" height="15" fill="rgb(223,64,47)" fg:x="1934" fg:w="28"/><text x="26.6203%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (6 samples, 0.08%)</title><rect x="26.6703%" y="773" width="0.0818%" height="15" fill="rgb(211,161,38)" fg:x="1956" fg:w="6"/><text x="26.9203%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (5 samples, 0.07%)</title><rect x="26.6839%" y="757" width="0.0682%" height="15" fill="rgb(219,138,40)" fg:x="1957" fg:w="5"/><text x="26.9339%" y="767.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (3 samples, 0.04%)</title><rect x="26.7112%" y="741" width="0.0409%" height="15" fill="rgb(241,228,46)" fg:x="1959" fg:w="3"/><text x="26.9612%" y="751.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (2 samples, 0.03%)</title><rect x="26.7248%" y="725" width="0.0273%" height="15" fill="rgb(223,209,38)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="735.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="26.7248%" y="709" width="0.0273%" height="15" fill="rgb(236,164,45)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="719.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="26.7248%" y="693" width="0.0273%" height="15" fill="rgb(231,15,5)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="26.7248%" y="677" width="0.0273%" height="15" fill="rgb(252,35,15)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="26.7248%" y="661" width="0.0273%" height="15" fill="rgb(248,181,18)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="26.7248%" y="645" width="0.0273%" height="15" fill="rgb(233,39,42)" fg:x="1960" fg:w="2"/><text x="26.9748%" y="655.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (45 samples, 0.61%)</title><rect x="26.1522%" y="821" width="0.6136%" height="15" fill="rgb(238,110,33)" fg:x="1918" fg:w="45"/><text x="26.4022%" y="831.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (1 samples, 0.01%)</title><rect x="26.7521%" y="805" width="0.0136%" height="15" fill="rgb(233,195,10)" fg:x="1962" fg:w="1"/><text x="27.0021%" y="815.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (1 samples, 0.01%)</title><rect x="26.7657%" y="821" width="0.0136%" height="15" fill="rgb(254,105,3)" fg:x="1963" fg:w="1"/><text x="27.0157%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_char (50 samples, 0.68%)</title><rect x="26.1249%" y="837" width="0.6818%" height="15" fill="rgb(221,225,9)" fg:x="1916" fg:w="50"/><text x="26.3749%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="26.7794%" y="821" width="0.0273%" height="15" fill="rgb(224,227,45)" fg:x="1964" fg:w="2"/><text x="27.0294%" y="831.50"></text></g><g><title>graphgen`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (4 samples, 0.05%)</title><rect x="27.0248%" y="821" width="0.0545%" height="15" fill="rgb(229,198,43)" fg:x="1982" fg:w="4"/><text x="27.2748%" y="831.50"></text></g><g><title>graphgen`&lt;markup5ever::LocalNameStaticSet as string_cache::static_sets::StaticAtomSet&gt;::get (2 samples, 0.03%)</title><rect x="27.0794%" y="821" width="0.0273%" height="15" fill="rgb(206,209,35)" fg:x="1986" fg:w="2"/><text x="27.3294%" y="831.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (30 samples, 0.41%)</title><rect x="27.1066%" y="821" width="0.4091%" height="15" fill="rgb(245,195,53)" fg:x="1988" fg:w="30"/><text x="27.3566%" y="831.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (15 samples, 0.20%)</title><rect x="27.6657%" y="805" width="0.2045%" height="15" fill="rgb(240,92,26)" fg:x="2029" fg:w="15"/><text x="27.9157%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="27.8566%" y="789" width="0.0136%" height="15" fill="rgb(207,40,23)" fg:x="2043" fg:w="1"/><text x="28.1066%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="27.8838%" y="741" width="0.0136%" height="15" fill="rgb(223,111,35)" fg:x="2045" fg:w="1"/><text x="28.1338%" y="751.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="27.8702%" y="789" width="0.0409%" height="15" fill="rgb(229,147,28)" fg:x="2044" fg:w="3"/><text x="28.1202%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="27.8838%" y="773" width="0.0273%" height="15" fill="rgb(211,29,28)" fg:x="2045" fg:w="2"/><text x="28.1338%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="27.8838%" y="757" width="0.0273%" height="15" fill="rgb(228,72,33)" fg:x="2045" fg:w="2"/><text x="28.1338%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="27.8975%" y="741" width="0.0136%" height="15" fill="rgb(205,214,31)" fg:x="2046" fg:w="1"/><text x="28.1475%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="27.8975%" y="725" width="0.0136%" height="15" fill="rgb(224,111,15)" fg:x="2046" fg:w="1"/><text x="28.1475%" y="735.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="27.8702%" y="805" width="0.0545%" height="15" fill="rgb(253,21,26)" fg:x="2044" fg:w="4"/><text x="28.1202%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="27.9111%" y="789" width="0.0136%" height="15" fill="rgb(245,139,43)" fg:x="2047" fg:w="1"/><text x="28.1611%" y="799.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::finish_attribute (32 samples, 0.44%)</title><rect x="27.5157%" y="821" width="0.4363%" height="15" fill="rgb(252,170,7)" fg:x="2018" fg:w="32"/><text x="27.7657%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="27.9247%" y="805" width="0.0273%" height="15" fill="rgb(231,118,14)" fg:x="2048" fg:w="2"/><text x="28.1747%" y="815.50"></text></g><g><title>graphgen`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="27.9929%" y="805" width="0.0273%" height="15" fill="rgb(238,83,0)" fg:x="2053" fg:w="2"/><text x="28.2429%" y="815.50"></text></g><g><title>graphgen`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="29.4791%" y="789" width="0.0545%" height="15" fill="rgb(221,39,39)" fg:x="2162" fg:w="4"/><text x="29.7291%" y="799.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;markup5ever::interface::Attribute&gt;&gt; (1 samples, 0.01%)</title><rect x="29.5337%" y="789" width="0.0136%" height="15" fill="rgb(222,119,46)" fg:x="2166" fg:w="1"/><text x="29.7837%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::adoption_agency (1 samples, 0.01%)</title><rect x="29.5473%" y="789" width="0.0136%" height="15" fill="rgb(222,165,49)" fg:x="2167" fg:w="1"/><text x="29.7973%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::create_formatting_element_for (1 samples, 0.01%)</title><rect x="29.5609%" y="789" width="0.0136%" height="15" fill="rgb(219,113,52)" fg:x="2168" fg:w="1"/><text x="29.8109%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::generate_implied_end (1 samples, 0.01%)</title><rect x="29.5746%" y="789" width="0.0136%" height="15" fill="rgb(214,7,15)" fg:x="2169" fg:w="1"/><text x="29.8246%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (1 samples, 0.01%)</title><rect x="29.5882%" y="789" width="0.0136%" height="15" fill="rgb(235,32,4)" fg:x="2170" fg:w="1"/><text x="29.8382%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::reconstruct_formatting (1 samples, 0.01%)</title><rect x="29.6019%" y="789" width="0.0136%" height="15" fill="rgb(238,90,54)" fg:x="2171" fg:w="1"/><text x="29.8519%" y="799.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.9291%" y="773" width="0.0136%" height="15" fill="rgb(213,208,19)" fg:x="2195" fg:w="1"/><text x="30.1791%" y="783.50"></text></g><g><title>graphgen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.9427%" y="773" width="0.0136%" height="15" fill="rgb(233,156,4)" fg:x="2196" fg:w="1"/><text x="30.1927%" y="783.50"></text></g><g><title>graphgen`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="29.9564%" y="773" width="0.0136%" height="15" fill="rgb(207,194,5)" fg:x="2197" fg:w="1"/><text x="30.2064%" y="783.50"></text></g><g><title>graphgen`DYLD-STUB$$free (2 samples, 0.03%)</title><rect x="29.9700%" y="773" width="0.0273%" height="15" fill="rgb(206,111,30)" fg:x="2198" fg:w="2"/><text x="30.2200%" y="783.50"></text></g><g><title>graphgen`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="29.9973%" y="773" width="0.0136%" height="15" fill="rgb(243,70,54)" fg:x="2200" fg:w="1"/><text x="30.2473%" y="783.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;markup5ever::interface::Attribute&gt;&gt; (1 samples, 0.01%)</title><rect x="30.0109%" y="773" width="0.0136%" height="15" fill="rgb(242,28,8)" fg:x="2201" fg:w="1"/><text x="30.2609%" y="783.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.0109%" y="757" width="0.0136%" height="15" fill="rgb(219,106,18)" fg:x="2201" fg:w="1"/><text x="30.2609%" y="767.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;html5ever::tokenizer::interface::Tag&gt; (1 samples, 0.01%)</title><rect x="30.0245%" y="773" width="0.0136%" height="15" fill="rgb(244,222,10)" fg:x="2202" fg:w="1"/><text x="30.2745%" y="783.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (1 samples, 0.01%)</title><rect x="30.0382%" y="773" width="0.0136%" height="15" fill="rgb(236,179,52)" fg:x="2203" fg:w="1"/><text x="30.2882%" y="783.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="30.1064%" y="757" width="0.0136%" height="15" fill="rgb(213,23,39)" fg:x="2208" fg:w="1"/><text x="30.3564%" y="767.50"></text></g><g><title>graphgen`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="30.1200%" y="757" width="0.0136%" height="15" fill="rgb(238,48,10)" fg:x="2209" fg:w="1"/><text x="30.3700%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.1336%" y="741" width="0.0136%" height="15" fill="rgb(251,196,23)" fg:x="2210" fg:w="1"/><text x="30.3836%" y="751.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;markup5ever::interface::QualName&gt; (1 samples, 0.01%)</title><rect x="30.1336%" y="725" width="0.0136%" height="15" fill="rgb(250,152,24)" fg:x="2210" fg:w="1"/><text x="30.3836%" y="735.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;html5ever::tokenizer::interface::Tag&gt; (2 samples, 0.03%)</title><rect x="30.1336%" y="757" width="0.0273%" height="15" fill="rgb(209,150,17)" fg:x="2210" fg:w="2"/><text x="30.3836%" y="767.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;markup5ever::interface::QualName&gt; (1 samples, 0.01%)</title><rect x="30.1473%" y="741" width="0.0136%" height="15" fill="rgb(234,202,34)" fg:x="2211" fg:w="1"/><text x="30.3973%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::html_elem_named (1 samples, 0.01%)</title><rect x="30.1609%" y="757" width="0.0136%" height="15" fill="rgb(253,148,53)" fg:x="2212" fg:w="1"/><text x="30.4109%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="30.1745%" y="757" width="0.0273%" height="15" fill="rgb(218,129,16)" fg:x="2213" fg:w="2"/><text x="30.4245%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="30.2018%" y="757" width="0.0409%" height="15" fill="rgb(216,85,19)" fg:x="2215" fg:w="3"/><text x="30.4518%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="30.2427%" y="757" width="0.0136%" height="15" fill="rgb(235,228,7)" fg:x="2218" fg:w="1"/><text x="30.4927%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="30.2563%" y="757" width="0.0136%" height="15" fill="rgb(245,175,0)" fg:x="2219" fg:w="1"/><text x="30.5063%" y="767.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="30.2700%" y="757" width="0.0136%" height="15" fill="rgb(208,168,36)" fg:x="2220" fg:w="1"/><text x="30.5200%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::adoption_agency (19 samples, 0.26%)</title><rect x="30.0518%" y="773" width="0.2591%" height="15" fill="rgb(246,171,24)" fg:x="2204" fg:w="19"/><text x="30.3018%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="30.2836%" y="757" width="0.0273%" height="15" fill="rgb(215,142,24)" fg:x="2221" fg:w="2"/><text x="30.5336%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="30.3518%" y="757" width="0.0545%" height="15" fill="rgb(250,187,7)" fg:x="2226" fg:w="4"/><text x="30.6018%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (3 samples, 0.04%)</title><rect x="30.4063%" y="757" width="0.0409%" height="15" fill="rgb(228,66,33)" fg:x="2230" fg:w="3"/><text x="30.6563%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element::form_associatable (3 samples, 0.04%)</title><rect x="30.4472%" y="757" width="0.0409%" height="15" fill="rgb(234,215,21)" fg:x="2233" fg:w="3"/><text x="30.6972%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="30.4881%" y="741" width="0.0136%" height="15" fill="rgb(222,191,20)" fg:x="2236" fg:w="1"/><text x="30.7381%" y="751.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="30.5018%" y="741" width="0.0273%" height="15" fill="rgb(245,79,54)" fg:x="2237" fg:w="2"/><text x="30.7518%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="30.5290%" y="741" width="0.0136%" height="15" fill="rgb(240,10,37)" fg:x="2239" fg:w="1"/><text x="30.7790%" y="751.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::ExpandedName as core::cmp::PartialEq&lt;markup5ever::interface::ExpandedName&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="30.5427%" y="725" width="0.0136%" height="15" fill="rgb(214,192,32)" fg:x="2240" fg:w="1"/><text x="30.7927%" y="735.50"></text></g><g><title>graphgen`ego_tree::NodeId::from_index (1 samples, 0.01%)</title><rect x="30.6245%" y="709" width="0.0136%" height="15" fill="rgb(209,36,54)" fg:x="2246" fg:w="1"/><text x="30.8745%" y="719.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (10 samples, 0.14%)</title><rect x="30.6381%" y="709" width="0.1364%" height="15" fill="rgb(220,10,11)" fg:x="2247" fg:w="10"/><text x="30.8881%" y="719.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="30.7608%" y="693" width="0.0136%" height="15" fill="rgb(221,106,17)" fg:x="2256" fg:w="1"/><text x="31.0108%" y="703.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="30.7608%" y="677" width="0.0136%" height="15" fill="rgb(251,142,44)" fg:x="2256" fg:w="1"/><text x="31.0108%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="30.7608%" y="661" width="0.0136%" height="15" fill="rgb(238,13,15)" fg:x="2256" fg:w="1"/><text x="31.0108%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="30.7608%" y="645" width="0.0136%" height="15" fill="rgb(208,107,27)" fg:x="2256" fg:w="1"/><text x="31.0108%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="30.7608%" y="629" width="0.0136%" height="15" fill="rgb(205,136,37)" fg:x="2256" fg:w="1"/><text x="31.0108%" y="639.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="30.7745%" y="709" width="0.0136%" height="15" fill="rgb(250,205,27)" fg:x="2257" fg:w="1"/><text x="31.0245%" y="719.50"></text></g><g><title>graphgen`string_cache::dynamic_set::Set::insert (1 samples, 0.01%)</title><rect x="30.9108%" y="661" width="0.0136%" height="15" fill="rgb(210,80,43)" fg:x="2267" fg:w="1"/><text x="31.1608%" y="671.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (3 samples, 0.04%)</title><rect x="30.8972%" y="677" width="0.0409%" height="15" fill="rgb(247,160,36)" fg:x="2266" fg:w="3"/><text x="31.1472%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="30.9245%" y="661" width="0.0136%" height="15" fill="rgb(234,13,49)" fg:x="2268" fg:w="1"/><text x="31.1745%" y="671.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="30.9381%" y="661" width="0.0136%" height="15" fill="rgb(234,122,0)" fg:x="2269" fg:w="1"/><text x="31.1881%" y="671.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.11%)</title><rect x="30.8563%" y="693" width="0.1091%" height="15" fill="rgb(207,146,38)" fg:x="2263" fg:w="8"/><text x="31.1063%" y="703.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.03%)</title><rect x="30.9381%" y="677" width="0.0273%" height="15" fill="rgb(207,177,25)" fg:x="2269" fg:w="2"/><text x="31.1881%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="30.9517%" y="661" width="0.0136%" height="15" fill="rgb(211,178,42)" fg:x="2270" fg:w="1"/><text x="31.2017%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="30.9517%" y="645" width="0.0136%" height="15" fill="rgb(230,69,54)" fg:x="2270" fg:w="1"/><text x="31.2017%" y="655.50"></text></g><g><title>graphgen`__rdl_alloc (1 samples, 0.01%)</title><rect x="30.9654%" y="693" width="0.0136%" height="15" fill="rgb(214,135,41)" fg:x="2271" fg:w="1"/><text x="31.2154%" y="703.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::QualName as core::hash::Hash&gt;::hash (2 samples, 0.03%)</title><rect x="31.0608%" y="661" width="0.0273%" height="15" fill="rgb(237,67,25)" fg:x="2278" fg:w="2"/><text x="31.3108%" y="671.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (12 samples, 0.16%)</title><rect x="30.9926%" y="677" width="0.1636%" height="15" fill="rgb(222,189,50)" fg:x="2273" fg:w="12"/><text x="31.2426%" y="687.50"></text></g><g><title>graphgen`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.07%)</title><rect x="31.0881%" y="661" width="0.0682%" height="15" fill="rgb(245,148,34)" fg:x="2280" fg:w="5"/><text x="31.3381%" y="671.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.22%)</title><rect x="30.9790%" y="693" width="0.2182%" height="15" fill="rgb(222,29,6)" fg:x="2272" fg:w="16"/><text x="31.2290%" y="703.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.04%)</title><rect x="31.1563%" y="677" width="0.0409%" height="15" fill="rgb(221,189,43)" fg:x="2285" fg:w="3"/><text x="31.4063%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="31.1972%" y="693" width="0.0136%" height="15" fill="rgb(207,36,27)" fg:x="2288" fg:w="1"/><text x="31.4472%" y="703.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2 samples, 0.03%)</title><rect x="31.2108%" y="693" width="0.0273%" height="15" fill="rgb(217,90,24)" fg:x="2289" fg:w="2"/><text x="31.4608%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.03%)</title><rect x="31.2108%" y="677" width="0.0273%" height="15" fill="rgb(224,66,35)" fg:x="2289" fg:w="2"/><text x="31.4608%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="31.2244%" y="661" width="0.0136%" height="15" fill="rgb(221,13,50)" fg:x="2290" fg:w="1"/><text x="31.4744%" y="671.50"></text></g><g><title>graphgen`std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.01%)</title><rect x="31.2381%" y="693" width="0.0136%" height="15" fill="rgb(236,68,49)" fg:x="2291" fg:w="1"/><text x="31.4881%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="31.2517%" y="693" width="0.0409%" height="15" fill="rgb(229,146,28)" fg:x="2292" fg:w="3"/><text x="31.5017%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="31.2926%" y="693" width="0.0136%" height="15" fill="rgb(225,31,38)" fg:x="2295" fg:w="1"/><text x="31.5426%" y="703.50"></text></g><g><title>graphgen`scraper::node::Element::new (39 samples, 0.53%)</title><rect x="30.7881%" y="709" width="0.5318%" height="15" fill="rgb(250,208,3)" fg:x="2258" fg:w="39"/><text x="31.0381%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="31.3062%" y="693" width="0.0136%" height="15" fill="rgb(246,54,23)" fg:x="2296" fg:w="1"/><text x="31.5562%" y="703.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (59 samples, 0.80%)</title><rect x="30.5563%" y="725" width="0.8045%" height="15" fill="rgb(243,76,11)" fg:x="2241" fg:w="59"/><text x="30.8063%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.04%)</title><rect x="31.3199%" y="709" width="0.0409%" height="15" fill="rgb(245,21,50)" fg:x="2297" fg:w="3"/><text x="31.5699%" y="719.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (61 samples, 0.83%)</title><rect x="30.5427%" y="741" width="0.8317%" height="15" fill="rgb(228,9,43)" fg:x="2240" fg:w="61"/><text x="30.7927%" y="751.50"></text></g><g><title>graphgen`scraper::node::Element::new (1 samples, 0.01%)</title><rect x="31.3608%" y="725" width="0.0136%" height="15" fill="rgb(208,100,47)" fg:x="2300" fg:w="1"/><text x="31.6108%" y="735.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (4 samples, 0.05%)</title><rect x="31.3744%" y="741" width="0.0545%" height="15" fill="rgb(232,26,8)" fg:x="2301" fg:w="4"/><text x="31.6244%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (4 samples, 0.05%)</title><rect x="31.3744%" y="725" width="0.0545%" height="15" fill="rgb(216,166,38)" fg:x="2301" fg:w="4"/><text x="31.6244%" y="735.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (1 samples, 0.01%)</title><rect x="31.4290%" y="741" width="0.0136%" height="15" fill="rgb(251,202,51)" fg:x="2305" fg:w="1"/><text x="31.6790%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (72 samples, 0.98%)</title><rect x="30.4881%" y="757" width="0.9817%" height="15" fill="rgb(254,216,34)" fg:x="2236" fg:w="72"/><text x="30.7381%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="31.4426%" y="741" width="0.0273%" height="15" fill="rgb(251,32,27)" fg:x="2306" fg:w="2"/><text x="31.6926%" y="751.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (2 samples, 0.03%)</title><rect x="31.4699%" y="757" width="0.0273%" height="15" fill="rgb(208,127,28)" fg:x="2308" fg:w="2"/><text x="31.7199%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="31.4971%" y="757" width="0.0136%" height="15" fill="rgb(224,137,22)" fg:x="2310" fg:w="1"/><text x="31.7471%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::create_formatting_element_for (90 samples, 1.23%)</title><rect x="30.3109%" y="773" width="1.2272%" height="15" fill="rgb(254,70,32)" fg:x="2223" fg:w="90"/><text x="30.5609%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="31.5108%" y="757" width="0.0273%" height="15" fill="rgb(229,75,37)" fg:x="2311" fg:w="2"/><text x="31.7608%" y="767.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="31.5380%" y="709" width="0.0409%" height="15" fill="rgb(252,64,23)" fg:x="2313" fg:w="3"/><text x="31.7880%" y="719.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (2 samples, 0.03%)</title><rect x="31.5517%" y="693" width="0.0273%" height="15" fill="rgb(232,162,48)" fg:x="2314" fg:w="2"/><text x="31.8017%" y="703.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (4 samples, 0.05%)</title><rect x="31.5380%" y="741" width="0.0545%" height="15" fill="rgb(246,160,12)" fg:x="2313" fg:w="4"/><text x="31.7880%" y="751.50"></text></g><g><title>graphgen`scraper::node::Element::new (4 samples, 0.05%)</title><rect x="31.5380%" y="725" width="0.0545%" height="15" fill="rgb(247,166,0)" fg:x="2313" fg:w="4"/><text x="31.7880%" y="735.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="31.5789%" y="709" width="0.0136%" height="15" fill="rgb(249,219,21)" fg:x="2316" fg:w="1"/><text x="31.8289%" y="719.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::create_root (5 samples, 0.07%)</title><rect x="31.5380%" y="773" width="0.0682%" height="15" fill="rgb(205,209,3)" fg:x="2313" fg:w="5"/><text x="31.7880%" y="783.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (5 samples, 0.07%)</title><rect x="31.5380%" y="757" width="0.0682%" height="15" fill="rgb(243,44,1)" fg:x="2313" fg:w="5"/><text x="31.7880%" y="767.50"></text></g><g><title>graphgen`scraper::node::Element::new (1 samples, 0.01%)</title><rect x="31.5926%" y="741" width="0.0136%" height="15" fill="rgb(206,159,16)" fg:x="2317" fg:w="1"/><text x="31.8426%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::expect_to_close (2 samples, 0.03%)</title><rect x="31.6062%" y="773" width="0.0273%" height="15" fill="rgb(244,77,30)" fg:x="2318" fg:w="2"/><text x="31.8562%" y="783.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (1 samples, 0.01%)</title><rect x="31.6199%" y="757" width="0.0136%" height="15" fill="rgb(218,69,12)" fg:x="2319" fg:w="1"/><text x="31.8699%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::generate_implied_end_except (1 samples, 0.01%)</title><rect x="31.6335%" y="773" width="0.0136%" height="15" fill="rgb(212,87,7)" fg:x="2320" fg:w="1"/><text x="31.8835%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::html_elem_named (1 samples, 0.01%)</title><rect x="31.6471%" y="773" width="0.0136%" height="15" fill="rgb(245,114,25)" fg:x="2321" fg:w="1"/><text x="31.8971%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::in_scope_named (10 samples, 0.14%)</title><rect x="31.6608%" y="773" width="0.1364%" height="15" fill="rgb(210,61,42)" fg:x="2322" fg:w="10"/><text x="31.9108%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::html_elem_named (3 samples, 0.04%)</title><rect x="31.7562%" y="757" width="0.0409%" height="15" fill="rgb(211,52,33)" fg:x="2329" fg:w="3"/><text x="32.0062%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (2 samples, 0.03%)</title><rect x="31.7971%" y="741" width="0.0273%" height="15" fill="rgb(234,58,33)" fg:x="2332" fg:w="2"/><text x="32.0471%" y="751.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_tendril (1 samples, 0.01%)</title><rect x="31.8244%" y="741" width="0.0136%" height="15" fill="rgb(220,115,36)" fg:x="2334" fg:w="1"/><text x="32.0744%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (6 samples, 0.08%)</title><rect x="31.7971%" y="773" width="0.0818%" height="15" fill="rgb(243,153,54)" fg:x="2332" fg:w="6"/><text x="32.0471%" y="783.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (6 samples, 0.08%)</title><rect x="31.7971%" y="757" width="0.0818%" height="15" fill="rgb(251,47,18)" fg:x="2332" fg:w="6"/><text x="32.0471%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="31.8380%" y="741" width="0.0409%" height="15" fill="rgb(242,102,42)" fg:x="2335" fg:w="3"/><text x="32.0880%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (2 samples, 0.03%)</title><rect x="31.8789%" y="773" width="0.0273%" height="15" fill="rgb(234,31,38)" fg:x="2338" fg:w="2"/><text x="32.1289%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element::form_associatable (2 samples, 0.03%)</title><rect x="31.9062%" y="773" width="0.0273%" height="15" fill="rgb(221,117,51)" fg:x="2340" fg:w="2"/><text x="32.1562%" y="783.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.14%)</title><rect x="31.9335%" y="757" width="0.1364%" height="15" fill="rgb(212,20,18)" fg:x="2342" fg:w="10"/><text x="32.1835%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="32.0698%" y="757" width="0.0409%" height="15" fill="rgb(245,133,36)" fg:x="2352" fg:w="3"/><text x="32.3198%" y="767.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;markup5ever::interface::QualName&gt; (1 samples, 0.01%)</title><rect x="32.0971%" y="741" width="0.0136%" height="15" fill="rgb(212,6,19)" fg:x="2354" fg:w="1"/><text x="32.3471%" y="751.50"></text></g><g><title>graphgen`__rdl_alloc (1 samples, 0.01%)</title><rect x="32.1107%" y="757" width="0.0136%" height="15" fill="rgb(218,1,36)" fg:x="2355" fg:w="1"/><text x="32.3607%" y="767.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="32.1244%" y="757" width="0.0136%" height="15" fill="rgb(246,84,54)" fg:x="2356" fg:w="1"/><text x="32.3744%" y="767.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="32.1244%" y="741" width="0.0136%" height="15" fill="rgb(242,110,6)" fg:x="2356" fg:w="1"/><text x="32.3744%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="32.1244%" y="725" width="0.0136%" height="15" fill="rgb(214,47,5)" fg:x="2356" fg:w="1"/><text x="32.3744%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (4 samples, 0.05%)</title><rect x="32.1380%" y="757" width="0.0545%" height="15" fill="rgb(218,159,25)" fg:x="2357" fg:w="4"/><text x="32.3880%" y="767.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::ExpandedName as core::cmp::PartialEq&lt;markup5ever::interface::ExpandedName&gt;&gt;::eq (4 samples, 0.05%)</title><rect x="32.2334%" y="741" width="0.0545%" height="15" fill="rgb(215,211,28)" fg:x="2364" fg:w="4"/><text x="32.4834%" y="751.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (1 samples, 0.01%)</title><rect x="32.2880%" y="741" width="0.0136%" height="15" fill="rgb(238,59,32)" fg:x="2368" fg:w="1"/><text x="32.5380%" y="751.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="32.4107%" y="725" width="0.0136%" height="15" fill="rgb(226,82,3)" fg:x="2377" fg:w="1"/><text x="32.6607%" y="735.50"></text></g><g><title>graphgen`&lt;markup5ever::LocalNameStaticSet as string_cache::static_sets::StaticAtomSet&gt;::get (1 samples, 0.01%)</title><rect x="32.4243%" y="725" width="0.0136%" height="15" fill="rgb(240,164,32)" fg:x="2378" fg:w="1"/><text x="32.6743%" y="735.50"></text></g><g><title>graphgen`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="32.4380%" y="725" width="0.0136%" height="15" fill="rgb(232,46,7)" fg:x="2379" fg:w="1"/><text x="32.6880%" y="735.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (11 samples, 0.15%)</title><rect x="32.4516%" y="725" width="0.1500%" height="15" fill="rgb(229,129,53)" fg:x="2380" fg:w="11"/><text x="32.7016%" y="735.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="32.5743%" y="709" width="0.0273%" height="15" fill="rgb(234,188,29)" fg:x="2389" fg:w="2"/><text x="32.8243%" y="719.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="32.5743%" y="693" width="0.0273%" height="15" fill="rgb(246,141,4)" fg:x="2389" fg:w="2"/><text x="32.8243%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="32.5743%" y="677" width="0.0273%" height="15" fill="rgb(229,23,39)" fg:x="2389" fg:w="2"/><text x="32.8243%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="32.5743%" y="661" width="0.0273%" height="15" fill="rgb(206,12,3)" fg:x="2389" fg:w="2"/><text x="32.8243%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="32.5743%" y="645" width="0.0273%" height="15" fill="rgb(252,226,20)" fg:x="2389" fg:w="2"/><text x="32.8243%" y="655.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="32.6016%" y="725" width="0.0136%" height="15" fill="rgb(216,123,35)" fg:x="2391" fg:w="1"/><text x="32.8516%" y="735.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="32.6152%" y="725" width="0.0136%" height="15" fill="rgb(212,68,40)" fg:x="2392" fg:w="1"/><text x="32.8652%" y="735.50"></text></g><g><title>graphgen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.8197%" y="709" width="0.0136%" height="15" fill="rgb(254,125,32)" fg:x="2407" fg:w="1"/><text x="33.0697%" y="719.50"></text></g><g><title>graphgen`&lt;markup5ever::LocalNameStaticSet as string_cache::static_sets::StaticAtomSet&gt;::get (1 samples, 0.01%)</title><rect x="33.0379%" y="693" width="0.0136%" height="15" fill="rgb(253,97,22)" fg:x="2423" fg:w="1"/><text x="33.2879%" y="703.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="33.1334%" y="677" width="0.0136%" height="15" fill="rgb(241,101,14)" fg:x="2430" fg:w="1"/><text x="33.3834%" y="687.50"></text></g><g><title>graphgen`DYLD-STUB$$memcmp (1 samples, 0.01%)</title><rect x="33.1470%" y="677" width="0.0136%" height="15" fill="rgb(238,103,29)" fg:x="2431" fg:w="1"/><text x="33.3970%" y="687.50"></text></g><g><title>graphgen`string_cache::dynamic_set::Set::insert (3 samples, 0.04%)</title><rect x="33.1606%" y="677" width="0.0409%" height="15" fill="rgb(233,195,47)" fg:x="2432" fg:w="3"/><text x="33.4106%" y="687.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (12 samples, 0.16%)</title><rect x="33.0515%" y="693" width="0.1636%" height="15" fill="rgb(246,218,30)" fg:x="2424" fg:w="12"/><text x="33.3015%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="33.2015%" y="677" width="0.0136%" height="15" fill="rgb(219,145,47)" fg:x="2435" fg:w="1"/><text x="33.4515%" y="687.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="33.2152%" y="677" width="0.0136%" height="15" fill="rgb(243,12,26)" fg:x="2436" fg:w="1"/><text x="33.4652%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.07%)</title><rect x="33.2561%" y="661" width="0.0682%" height="15" fill="rgb(214,87,16)" fg:x="2439" fg:w="5"/><text x="33.5061%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.03%)</title><rect x="33.2970%" y="645" width="0.0273%" height="15" fill="rgb(208,99,42)" fg:x="2442" fg:w="2"/><text x="33.5470%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="33.2970%" y="629" width="0.0273%" height="15" fill="rgb(253,99,2)" fg:x="2442" fg:w="2"/><text x="33.5470%" y="639.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.50%)</title><rect x="32.8334%" y="709" width="0.5045%" height="15" fill="rgb(220,168,23)" fg:x="2408" fg:w="37"/><text x="33.0834%" y="719.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.12%)</title><rect x="33.2152%" y="693" width="0.1227%" height="15" fill="rgb(242,38,24)" fg:x="2436" fg:w="9"/><text x="33.4652%" y="703.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.11%)</title><rect x="33.2288%" y="677" width="0.1091%" height="15" fill="rgb(225,182,9)" fg:x="2437" fg:w="8"/><text x="33.4788%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="33.3242%" y="661" width="0.0136%" height="15" fill="rgb(243,178,37)" fg:x="2444" fg:w="1"/><text x="33.5742%" y="671.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="33.4061%" y="693" width="0.0136%" height="15" fill="rgb(232,139,19)" fg:x="2450" fg:w="1"/><text x="33.6561%" y="703.50"></text></g><g><title>graphgen`string_cache::dynamic_set::Set::insert (4 samples, 0.05%)</title><rect x="33.4197%" y="693" width="0.0545%" height="15" fill="rgb(225,201,24)" fg:x="2451" fg:w="4"/><text x="33.6697%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="33.4606%" y="677" width="0.0136%" height="15" fill="rgb(221,47,46)" fg:x="2454" fg:w="1"/><text x="33.7106%" y="687.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (11 samples, 0.15%)</title><rect x="33.3379%" y="709" width="0.1500%" height="15" fill="rgb(249,23,13)" fg:x="2445" fg:w="11"/><text x="33.5879%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="33.4742%" y="693" width="0.0136%" height="15" fill="rgb(219,9,5)" fg:x="2455" fg:w="1"/><text x="33.7242%" y="703.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="33.4879%" y="709" width="0.0136%" height="15" fill="rgb(254,171,16)" fg:x="2456" fg:w="1"/><text x="33.7379%" y="719.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::QualName as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="33.5151%" y="693" width="0.0409%" height="15" fill="rgb(230,171,20)" fg:x="2458" fg:w="3"/><text x="33.7651%" y="703.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::QualName as core::hash::Hash&gt;::hash (5 samples, 0.07%)</title><rect x="33.5969%" y="677" width="0.0682%" height="15" fill="rgb(210,71,41)" fg:x="2464" fg:w="5"/><text x="33.8469%" y="687.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (14 samples, 0.19%)</title><rect x="33.5560%" y="693" width="0.1909%" height="15" fill="rgb(206,173,20)" fg:x="2461" fg:w="14"/><text x="33.8060%" y="703.50"></text></g><g><title>graphgen`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.08%)</title><rect x="33.6651%" y="677" width="0.0818%" height="15" fill="rgb(233,88,34)" fg:x="2469" fg:w="6"/><text x="33.9151%" y="687.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.26%)</title><rect x="33.5015%" y="709" width="0.2591%" height="15" fill="rgb(223,209,46)" fg:x="2457" fg:w="19"/><text x="33.7515%" y="719.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="33.7469%" y="693" width="0.0136%" height="15" fill="rgb(250,43,18)" fg:x="2475" fg:w="1"/><text x="33.9969%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.07%)</title><rect x="33.7606%" y="693" width="0.0682%" height="15" fill="rgb(208,13,10)" fg:x="2476" fg:w="5"/><text x="34.0106%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="33.8287%" y="677" width="0.0136%" height="15" fill="rgb(212,200,36)" fg:x="2481" fg:w="1"/><text x="34.0787%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.03%)</title><rect x="33.8424%" y="661" width="0.0273%" height="15" fill="rgb(225,90,30)" fg:x="2482" fg:w="2"/><text x="34.0924%" y="671.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (9 samples, 0.12%)</title><rect x="33.7606%" y="709" width="0.1227%" height="15" fill="rgb(236,182,39)" fg:x="2476" fg:w="9"/><text x="34.0106%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.05%)</title><rect x="33.8287%" y="693" width="0.0545%" height="15" fill="rgb(212,144,35)" fg:x="2481" fg:w="4"/><text x="34.0787%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.04%)</title><rect x="33.8424%" y="677" width="0.0409%" height="15" fill="rgb(228,63,44)" fg:x="2482" fg:w="3"/><text x="34.0924%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="33.8696%" y="661" width="0.0136%" height="15" fill="rgb(228,109,6)" fg:x="2484" fg:w="1"/><text x="34.1196%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="33.8833%" y="709" width="0.0273%" height="15" fill="rgb(238,117,24)" fg:x="2485" fg:w="2"/><text x="34.1333%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="33.9106%" y="709" width="0.0136%" height="15" fill="rgb(242,26,26)" fg:x="2487" fg:w="1"/><text x="34.1606%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="33.9242%" y="709" width="0.0409%" height="15" fill="rgb(221,92,48)" fg:x="2488" fg:w="3"/><text x="34.1742%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="33.9651%" y="709" width="0.0136%" height="15" fill="rgb(209,209,32)" fg:x="2491" fg:w="1"/><text x="34.2151%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="33.9651%" y="693" width="0.0136%" height="15" fill="rgb(221,70,22)" fg:x="2491" fg:w="1"/><text x="34.2151%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="33.9651%" y="677" width="0.0136%" height="15" fill="rgb(248,145,5)" fg:x="2491" fg:w="1"/><text x="34.2151%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="33.9787%" y="709" width="0.0273%" height="15" fill="rgb(226,116,26)" fg:x="2492" fg:w="2"/><text x="34.2287%" y="719.50"></text></g><g><title>graphgen`scraper::node::Element::new (104 samples, 1.42%)</title><rect x="32.6289%" y="725" width="1.4181%" height="15" fill="rgb(244,5,17)" fg:x="2393" fg:w="104"/><text x="32.8789%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.04%)</title><rect x="34.0060%" y="709" width="0.0409%" height="15" fill="rgb(252,159,33)" fg:x="2494" fg:w="3"/><text x="34.2560%" y="719.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="34.0469%" y="725" width="0.0273%" height="15" fill="rgb(206,71,0)" fg:x="2497" fg:w="2"/><text x="34.2969%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="34.0742%" y="725" width="0.0136%" height="15" fill="rgb(233,118,54)" fg:x="2499" fg:w="1"/><text x="34.3242%" y="735.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (132 samples, 1.80%)</title><rect x="32.3016%" y="741" width="1.7998%" height="15" fill="rgb(234,83,48)" fg:x="2369" fg:w="132"/><text x="32.5516%" y="751.50">g..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="34.0878%" y="725" width="0.0136%" height="15" fill="rgb(228,3,54)" fg:x="2500" fg:w="1"/><text x="34.3378%" y="735.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (141 samples, 1.92%)</title><rect x="32.1925%" y="757" width="1.9226%" height="15" fill="rgb(226,155,13)" fg:x="2361" fg:w="141"/><text x="32.4425%" y="767.50">g..</text></g><g><title>graphgen`scraper::node::Element::new (1 samples, 0.01%)</title><rect x="34.1014%" y="741" width="0.0136%" height="15" fill="rgb(241,28,37)" fg:x="2501" fg:w="1"/><text x="34.3514%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (3 samples, 0.04%)</title><rect x="34.1151%" y="741" width="0.0409%" height="15" fill="rgb(233,93,10)" fg:x="2502" fg:w="3"/><text x="34.3651%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::detach (2 samples, 0.03%)</title><rect x="34.1287%" y="725" width="0.0273%" height="15" fill="rgb(225,113,19)" fg:x="2503" fg:w="2"/><text x="34.3787%" y="735.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (4 samples, 0.05%)</title><rect x="34.1151%" y="757" width="0.0545%" height="15" fill="rgb(241,2,18)" fg:x="2502" fg:w="4"/><text x="34.3651%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::detach (1 samples, 0.01%)</title><rect x="34.1560%" y="741" width="0.0136%" height="15" fill="rgb(228,207,21)" fg:x="2505" fg:w="1"/><text x="34.4060%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="34.1696%" y="757" width="0.0136%" height="15" fill="rgb(213,211,35)" fg:x="2506" fg:w="1"/><text x="34.4196%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="34.1833%" y="757" width="0.0136%" height="15" fill="rgb(209,83,10)" fg:x="2507" fg:w="1"/><text x="34.4333%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (167 samples, 2.28%)</title><rect x="31.9335%" y="773" width="2.2771%" height="15" fill="rgb(209,164,1)" fg:x="2342" fg:w="167"/><text x="32.1835%" y="783.50">g..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="34.1969%" y="757" width="0.0136%" height="15" fill="rgb(213,184,43)" fg:x="2508" fg:w="1"/><text x="34.4469%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::pop_until_current (2 samples, 0.03%)</title><rect x="34.2105%" y="773" width="0.0273%" height="15" fill="rgb(231,61,34)" fg:x="2509" fg:w="2"/><text x="34.4605%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::process_end_tag_in_body (2 samples, 0.03%)</title><rect x="34.2378%" y="773" width="0.0273%" height="15" fill="rgb(235,75,3)" fg:x="2511" fg:w="2"/><text x="34.4878%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::generate_implied_end_except (1 samples, 0.01%)</title><rect x="34.2514%" y="757" width="0.0136%" height="15" fill="rgb(220,106,47)" fg:x="2512" fg:w="1"/><text x="34.5014%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::reset_insertion_mode (2 samples, 0.03%)</title><rect x="34.2651%" y="773" width="0.0273%" height="15" fill="rgb(210,196,33)" fg:x="2513" fg:w="2"/><text x="34.5151%" y="783.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="34.4014%" y="741" width="0.0136%" height="15" fill="rgb(229,154,42)" fg:x="2523" fg:w="1"/><text x="34.6514%" y="751.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.4151%" y="741" width="0.0136%" height="15" fill="rgb(228,114,26)" fg:x="2524" fg:w="1"/><text x="34.6651%" y="751.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;html5ever::tokenizer::interface::Tag&gt; (3 samples, 0.04%)</title><rect x="34.4287%" y="741" width="0.0409%" height="15" fill="rgb(208,144,1)" fg:x="2525" fg:w="3"/><text x="34.6787%" y="751.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="34.4287%" y="725" width="0.0409%" height="15" fill="rgb(239,112,37)" fg:x="2525" fg:w="3"/><text x="34.6787%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::adoption_agency (11 samples, 0.15%)</title><rect x="34.3332%" y="757" width="0.1500%" height="15" fill="rgb(210,96,50)" fg:x="2518" fg:w="11"/><text x="34.5832%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="34.4696%" y="741" width="0.0136%" height="15" fill="rgb(222,178,2)" fg:x="2528" fg:w="1"/><text x="34.7196%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="34.4832%" y="757" width="0.0136%" height="15" fill="rgb(226,74,18)" fg:x="2529" fg:w="1"/><text x="34.7332%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="34.4969%" y="741" width="0.0409%" height="15" fill="rgb(225,67,54)" fg:x="2530" fg:w="3"/><text x="34.7469%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="34.5241%" y="725" width="0.0136%" height="15" fill="rgb(251,92,32)" fg:x="2532" fg:w="1"/><text x="34.7741%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="34.5241%" y="709" width="0.0136%" height="15" fill="rgb(228,149,22)" fg:x="2532" fg:w="1"/><text x="34.7741%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="34.5241%" y="693" width="0.0136%" height="15" fill="rgb(243,54,13)" fg:x="2532" fg:w="1"/><text x="34.7741%" y="703.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element::form_associatable (1 samples, 0.01%)</title><rect x="34.5378%" y="741" width="0.0136%" height="15" fill="rgb(243,180,28)" fg:x="2533" fg:w="1"/><text x="34.7878%" y="751.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="34.5514%" y="725" width="0.0273%" height="15" fill="rgb(208,167,24)" fg:x="2534" fg:w="2"/><text x="34.8014%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="34.5650%" y="709" width="0.0136%" height="15" fill="rgb(245,73,45)" fg:x="2535" fg:w="1"/><text x="34.8150%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="34.5650%" y="693" width="0.0136%" height="15" fill="rgb(237,203,48)" fg:x="2535" fg:w="1"/><text x="34.8150%" y="703.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="34.5787%" y="725" width="0.0409%" height="15" fill="rgb(211,197,16)" fg:x="2536" fg:w="3"/><text x="34.8287%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (2 samples, 0.03%)</title><rect x="34.6196%" y="725" width="0.0273%" height="15" fill="rgb(243,99,51)" fg:x="2539" fg:w="2"/><text x="34.8696%" y="735.50"></text></g><g><title>graphgen`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="34.6878%" y="693" width="0.0136%" height="15" fill="rgb(215,123,29)" fg:x="2544" fg:w="1"/><text x="34.9378%" y="703.50"></text></g><g><title>graphgen`ego_tree::NodeId::from_index (1 samples, 0.01%)</title><rect x="34.7014%" y="693" width="0.0136%" height="15" fill="rgb(239,186,37)" fg:x="2545" fg:w="1"/><text x="34.9514%" y="703.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (4 samples, 0.05%)</title><rect x="34.7150%" y="693" width="0.0545%" height="15" fill="rgb(252,136,39)" fg:x="2546" fg:w="4"/><text x="34.9650%" y="703.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="34.7832%" y="677" width="0.0273%" height="15" fill="rgb(223,213,32)" fg:x="2551" fg:w="2"/><text x="35.0332%" y="687.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (2 samples, 0.03%)</title><rect x="34.7832%" y="661" width="0.0273%" height="15" fill="rgb(233,115,5)" fg:x="2551" fg:w="2"/><text x="35.0332%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="34.7968%" y="645" width="0.0136%" height="15" fill="rgb(207,226,44)" fg:x="2552" fg:w="1"/><text x="35.0468%" y="655.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="34.8105%" y="677" width="0.0136%" height="15" fill="rgb(208,126,0)" fg:x="2553" fg:w="1"/><text x="35.0605%" y="687.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="34.8650%" y="661" width="0.0409%" height="15" fill="rgb(244,66,21)" fg:x="2557" fg:w="3"/><text x="35.1150%" y="671.50"></text></g><g><title>graphgen`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="34.8786%" y="645" width="0.0273%" height="15" fill="rgb(222,97,12)" fg:x="2558" fg:w="2"/><text x="35.1286%" y="655.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.11%)</title><rect x="34.8241%" y="677" width="0.1091%" height="15" fill="rgb(219,213,19)" fg:x="2554" fg:w="8"/><text x="35.0741%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.03%)</title><rect x="34.9059%" y="661" width="0.0273%" height="15" fill="rgb(252,169,30)" fg:x="2560" fg:w="2"/><text x="35.1559%" y="671.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="34.9332%" y="677" width="0.0136%" height="15" fill="rgb(206,32,51)" fg:x="2562" fg:w="1"/><text x="35.1832%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="34.9468%" y="677" width="0.0136%" height="15" fill="rgb(250,172,42)" fg:x="2563" fg:w="1"/><text x="35.1968%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="34.9468%" y="661" width="0.0136%" height="15" fill="rgb(209,34,43)" fg:x="2563" fg:w="1"/><text x="35.1968%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="34.9605%" y="677" width="0.0136%" height="15" fill="rgb(223,11,35)" fg:x="2564" fg:w="1"/><text x="35.2105%" y="687.50"></text></g><g><title>graphgen`scraper::node::Element::new (16 samples, 0.22%)</title><rect x="34.7696%" y="693" width="0.2182%" height="15" fill="rgb(251,219,26)" fg:x="2550" fg:w="16"/><text x="35.0196%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="34.9741%" y="677" width="0.0136%" height="15" fill="rgb(231,119,3)" fg:x="2565" fg:w="1"/><text x="35.2241%" y="687.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (26 samples, 0.35%)</title><rect x="34.6469%" y="725" width="0.3545%" height="15" fill="rgb(216,97,11)" fg:x="2541" fg:w="26"/><text x="34.8969%" y="735.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (25 samples, 0.34%)</title><rect x="34.6605%" y="709" width="0.3409%" height="15" fill="rgb(223,59,9)" fg:x="2542" fg:w="25"/><text x="34.9105%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="34.9877%" y="693" width="0.0136%" height="15" fill="rgb(233,93,31)" fg:x="2566" fg:w="1"/><text x="35.2377%" y="703.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (1 samples, 0.01%)</title><rect x="35.0014%" y="725" width="0.0136%" height="15" fill="rgb(239,81,33)" fg:x="2567" fg:w="1"/><text x="35.2514%" y="735.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="35.0014%" y="709" width="0.0136%" height="15" fill="rgb(213,120,34)" fg:x="2567" fg:w="1"/><text x="35.2514%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="35.0150%" y="725" width="0.0136%" height="15" fill="rgb(243,49,53)" fg:x="2568" fg:w="1"/><text x="35.2650%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="35.0286%" y="725" width="0.0136%" height="15" fill="rgb(247,216,33)" fg:x="2569" fg:w="1"/><text x="35.2786%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="35.0423%" y="725" width="0.0136%" height="15" fill="rgb(226,26,14)" fg:x="2570" fg:w="1"/><text x="35.2923%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (38 samples, 0.52%)</title><rect x="34.5514%" y="741" width="0.5181%" height="15" fill="rgb(215,49,53)" fg:x="2534" fg:w="38"/><text x="34.8014%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="35.0559%" y="725" width="0.0136%" height="15" fill="rgb(245,162,40)" fg:x="2571" fg:w="1"/><text x="35.3059%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::create_formatting_element_for (43 samples, 0.59%)</title><rect x="34.4969%" y="757" width="0.5863%" height="15" fill="rgb(229,68,17)" fg:x="2530" fg:w="43"/><text x="34.7469%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="35.0695%" y="741" width="0.0136%" height="15" fill="rgb(213,182,10)" fg:x="2572" fg:w="1"/><text x="35.3195%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::expect_to_close (1 samples, 0.01%)</title><rect x="35.0832%" y="757" width="0.0136%" height="15" fill="rgb(245,125,30)" fg:x="2573" fg:w="1"/><text x="35.3332%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::pop_until_named (1 samples, 0.01%)</title><rect x="35.0832%" y="741" width="0.0136%" height="15" fill="rgb(232,202,2)" fg:x="2573" fg:w="1"/><text x="35.3332%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::generate_implied_end_except (1 samples, 0.01%)</title><rect x="35.0968%" y="757" width="0.0136%" height="15" fill="rgb(237,140,51)" fg:x="2574" fg:w="1"/><text x="35.3468%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::handle_misnested_a_tags (1 samples, 0.01%)</title><rect x="35.1104%" y="757" width="0.0136%" height="15" fill="rgb(236,157,25)" fg:x="2575" fg:w="1"/><text x="35.3604%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::in_scope_named (5 samples, 0.07%)</title><rect x="35.1241%" y="757" width="0.0682%" height="15" fill="rgb(219,209,0)" fg:x="2576" fg:w="5"/><text x="35.3741%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::html_elem_named (1 samples, 0.01%)</title><rect x="35.1786%" y="741" width="0.0136%" height="15" fill="rgb(240,116,54)" fg:x="2580" fg:w="1"/><text x="35.4286%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (1 samples, 0.01%)</title><rect x="35.1923%" y="757" width="0.0136%" height="15" fill="rgb(216,10,36)" fg:x="2581" fg:w="1"/><text x="35.4423%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element::form_associatable (1 samples, 0.01%)</title><rect x="35.2059%" y="757" width="0.0136%" height="15" fill="rgb(222,72,44)" fg:x="2582" fg:w="1"/><text x="35.4559%" y="767.50"></text></g><g><title>graphgen`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.2195%" y="741" width="0.0136%" height="15" fill="rgb(232,159,9)" fg:x="2583" fg:w="1"/><text x="35.4695%" y="751.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;markup5ever::interface::QualName&gt; (1 samples, 0.01%)</title><rect x="35.2332%" y="741" width="0.0136%" height="15" fill="rgb(210,39,32)" fg:x="2584" fg:w="1"/><text x="35.4832%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="35.2468%" y="741" width="0.0136%" height="15" fill="rgb(216,194,45)" fg:x="2585" fg:w="1"/><text x="35.4968%" y="751.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (6 samples, 0.08%)</title><rect x="35.2741%" y="709" width="0.0818%" height="15" fill="rgb(218,18,35)" fg:x="2587" fg:w="6"/><text x="35.5241%" y="719.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="35.3968%" y="693" width="0.0136%" height="15" fill="rgb(207,83,51)" fg:x="2596" fg:w="1"/><text x="35.6468%" y="703.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="35.3968%" y="677" width="0.0136%" height="15" fill="rgb(225,63,43)" fg:x="2596" fg:w="1"/><text x="35.6468%" y="687.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="35.3968%" y="661" width="0.0136%" height="15" fill="rgb(207,57,36)" fg:x="2596" fg:w="1"/><text x="35.6468%" y="671.50"></text></g><g><title>graphgen`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="35.4104%" y="693" width="0.0136%" height="15" fill="rgb(216,99,33)" fg:x="2597" fg:w="1"/><text x="35.6604%" y="703.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="35.4241%" y="677" width="0.0409%" height="15" fill="rgb(225,42,16)" fg:x="2598" fg:w="3"/><text x="35.6741%" y="687.50"></text></g><g><title>graphgen`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="35.4377%" y="661" width="0.0273%" height="15" fill="rgb(220,201,45)" fg:x="2599" fg:w="2"/><text x="35.6877%" y="671.50"></text></g><g><title>graphgen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.07%)</title><rect x="35.4241%" y="693" width="0.0682%" height="15" fill="rgb(225,33,4)" fg:x="2598" fg:w="5"/><text x="35.6741%" y="703.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.03%)</title><rect x="35.4650%" y="677" width="0.0273%" height="15" fill="rgb(224,33,50)" fg:x="2601" fg:w="2"/><text x="35.7150%" y="687.50"></text></g><g><title>graphgen`hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="35.4922%" y="693" width="0.0136%" height="15" fill="rgb(246,198,51)" fg:x="2603" fg:w="1"/><text x="35.7422%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="35.4922%" y="677" width="0.0136%" height="15" fill="rgb(205,22,4)" fg:x="2603" fg:w="1"/><text x="35.7422%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="35.5059%" y="693" width="0.0136%" height="15" fill="rgb(206,3,8)" fg:x="2604" fg:w="1"/><text x="35.7559%" y="703.50"></text></g><g><title>graphgen`scraper::node::Element::new (13 samples, 0.18%)</title><rect x="35.3559%" y="709" width="0.1773%" height="15" fill="rgb(251,23,15)" fg:x="2593" fg:w="13"/><text x="35.6059%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="35.5195%" y="693" width="0.0136%" height="15" fill="rgb(252,88,28)" fg:x="2605" fg:w="1"/><text x="35.7695%" y="703.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (22 samples, 0.30%)</title><rect x="35.2604%" y="741" width="0.3000%" height="15" fill="rgb(212,127,14)" fg:x="2586" fg:w="22"/><text x="35.5104%" y="751.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (22 samples, 0.30%)</title><rect x="35.2604%" y="725" width="0.3000%" height="15" fill="rgb(247,145,37)" fg:x="2586" fg:w="22"/><text x="35.5104%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="35.5331%" y="709" width="0.0273%" height="15" fill="rgb(209,117,53)" fg:x="2606" fg:w="2"/><text x="35.7831%" y="719.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (1 samples, 0.01%)</title><rect x="35.5604%" y="741" width="0.0136%" height="15" fill="rgb(212,90,42)" fg:x="2608" fg:w="1"/><text x="35.8104%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="35.5604%" y="725" width="0.0136%" height="15" fill="rgb(218,164,37)" fg:x="2608" fg:w="1"/><text x="35.8104%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_element (27 samples, 0.37%)</title><rect x="35.2195%" y="757" width="0.3681%" height="15" fill="rgb(246,65,34)" fg:x="2583" fg:w="27"/><text x="35.4695%" y="767.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (1 samples, 0.01%)</title><rect x="35.5740%" y="741" width="0.0136%" height="15" fill="rgb(231,100,33)" fg:x="2609" fg:w="1"/><text x="35.8240%" y="751.50"></text></g><g><title>graphgen`markup5ever::interface::tree_builder::create_element (1 samples, 0.01%)</title><rect x="35.5877%" y="757" width="0.0136%" height="15" fill="rgb(228,126,14)" fg:x="2610" fg:w="1"/><text x="35.8377%" y="767.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::create_element (1 samples, 0.01%)</title><rect x="35.5877%" y="741" width="0.0136%" height="15" fill="rgb(215,173,21)" fg:x="2610" fg:w="1"/><text x="35.8377%" y="751.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (1 samples, 0.01%)</title><rect x="35.5877%" y="725" width="0.0136%" height="15" fill="rgb(210,6,40)" fg:x="2610" fg:w="1"/><text x="35.8377%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (101 samples, 1.38%)</title><rect x="34.2923%" y="773" width="1.3771%" height="15" fill="rgb(212,48,18)" fg:x="2515" fg:w="101"/><text x="34.5423%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.07%)</title><rect x="35.6013%" y="757" width="0.0682%" height="15" fill="rgb(230,214,11)" fg:x="2611" fg:w="5"/><text x="35.8513%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::tag_sets::button_scope (1 samples, 0.01%)</title><rect x="35.6695%" y="773" width="0.0136%" height="15" fill="rgb(254,105,39)" fg:x="2616" fg:w="1"/><text x="35.9195%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::tag_sets::mathml_text_integration_point (1 samples, 0.01%)</title><rect x="35.6831%" y="773" width="0.0136%" height="15" fill="rgb(245,158,5)" fg:x="2617" fg:w="1"/><text x="35.9331%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::tag_sets::table_body_context (1 samples, 0.01%)</title><rect x="35.6968%" y="773" width="0.0136%" height="15" fill="rgb(249,208,11)" fg:x="2618" fg:w="1"/><text x="35.9468%" y="783.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (1 samples, 0.01%)</title><rect x="35.7104%" y="773" width="0.0136%" height="15" fill="rgb(210,39,28)" fg:x="2619" fg:w="1"/><text x="35.9604%" y="783.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::elem_name (1 samples, 0.01%)</title><rect x="35.7240%" y="773" width="0.0136%" height="15" fill="rgb(211,56,53)" fg:x="2620" fg:w="1"/><text x="35.9740%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="35.7377%" y="773" width="0.0136%" height="15" fill="rgb(226,201,30)" fg:x="2621" fg:w="1"/><text x="35.9877%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (451 samples, 6.15%)</title><rect x="29.6155%" y="789" width="6.1494%" height="15" fill="rgb(239,101,34)" fg:x="2172" fg:w="451"/><text x="29.8655%" y="799.50">graphgen..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="35.7513%" y="773" width="0.0136%" height="15" fill="rgb(226,209,5)" fg:x="2622" fg:w="1"/><text x="36.0013%" y="783.50"></text></g><g><title>graphgen`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (569 samples, 7.76%)</title><rect x="28.0202%" y="805" width="7.7584%" height="15" fill="rgb(250,105,47)" fg:x="2055" fg:w="569"/><text x="28.2702%" y="815.50">graphgen`&lt;h..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="35.7649%" y="789" width="0.0136%" height="15" fill="rgb(230,72,3)" fg:x="2623" fg:w="1"/><text x="36.0149%" y="799.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (577 samples, 7.87%)</title><rect x="27.9520%" y="821" width="7.8675%" height="15" fill="rgb(232,218,39)" fg:x="2050" fg:w="577"/><text x="28.2020%" y="831.50">graphgen`ht..</text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (3 samples, 0.04%)</title><rect x="35.7786%" y="805" width="0.0409%" height="15" fill="rgb(248,166,6)" fg:x="2624" fg:w="3"/><text x="36.0286%" y="815.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_current_tag (664 samples, 9.05%)</title><rect x="26.8067%" y="837" width="9.0537%" height="15" fill="rgb(247,89,20)" fg:x="1966" fg:w="664"/><text x="27.0567%" y="847.50">graphgen`html..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.04%)</title><rect x="35.8195%" y="821" width="0.0409%" height="15" fill="rgb(248,130,54)" fg:x="2627" fg:w="3"/><text x="36.0695%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::finish_attribute (3 samples, 0.04%)</title><rect x="35.8604%" y="837" width="0.0409%" height="15" fill="rgb(234,196,4)" fg:x="2630" fg:w="3"/><text x="36.1104%" y="847.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::next (26 samples, 0.35%)</title><rect x="35.9422%" y="821" width="0.3545%" height="15" fill="rgb(250,143,31)" fg:x="2636" fg:w="26"/><text x="36.1922%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (17 samples, 0.23%)</title><rect x="36.0649%" y="805" width="0.2318%" height="15" fill="rgb(211,110,34)" fg:x="2645" fg:w="17"/><text x="36.3149%" y="815.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_char (53 samples, 0.72%)</title><rect x="35.9013%" y="837" width="0.7227%" height="15" fill="rgb(215,124,48)" fg:x="2633" fg:w="53"/><text x="36.1513%" y="847.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (24 samples, 0.33%)</title><rect x="36.2967%" y="821" width="0.3272%" height="15" fill="rgb(216,46,13)" fg:x="2662" fg:w="24"/><text x="36.5467%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_preprocessed_char (33 samples, 0.45%)</title><rect x="36.6239%" y="837" width="0.4500%" height="15" fill="rgb(205,184,25)" fg:x="2686" fg:w="33"/><text x="36.8739%" y="847.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="37.5102%" y="821" width="0.0136%" height="15" fill="rgb(228,1,10)" fg:x="2751" fg:w="1"/><text x="37.7602%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_preprocessed_char (10 samples, 0.14%)</title><rect x="37.5239%" y="821" width="0.1364%" height="15" fill="rgb(213,116,27)" fg:x="2752" fg:w="10"/><text x="37.7739%" y="831.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::pop_except_from (173 samples, 2.36%)</title><rect x="37.6602%" y="821" width="2.3589%" height="15" fill="rgb(241,95,50)" fg:x="2762" fg:w="173"/><text x="37.9102%" y="831.50">g..</text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (14 samples, 0.19%)</title><rect x="39.8282%" y="805" width="0.1909%" height="15" fill="rgb(238,48,32)" fg:x="2921" fg:w="14"/><text x="40.0782%" y="815.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (7 samples, 0.10%)</title><rect x="40.0191%" y="821" width="0.0954%" height="15" fill="rgb(235,113,49)" fg:x="2935" fg:w="7"/><text x="40.2691%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::pop_except_from (227 samples, 3.10%)</title><rect x="37.0739%" y="837" width="3.0952%" height="15" fill="rgb(205,127,43)" fg:x="2719" fg:w="227"/><text x="37.3239%" y="847.50">gra..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="40.1145%" y="821" width="0.0545%" height="15" fill="rgb(250,162,2)" fg:x="2942" fg:w="4"/><text x="40.3645%" y="831.50"></text></g><g><title>graphgen`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.2236%" y="789" width="0.0136%" height="15" fill="rgb(220,13,41)" fg:x="2950" fg:w="1"/><text x="40.4736%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="40.2509%" y="757" width="0.0136%" height="15" fill="rgb(249,221,25)" fg:x="2952" fg:w="1"/><text x="40.5009%" y="767.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (2 samples, 0.03%)</title><rect x="40.2645%" y="725" width="0.0273%" height="15" fill="rgb(215,208,19)" fg:x="2953" fg:w="2"/><text x="40.5145%" y="735.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_tendril (1 samples, 0.01%)</title><rect x="40.2918%" y="725" width="0.0136%" height="15" fill="rgb(236,175,2)" fg:x="2955" fg:w="1"/><text x="40.5418%" y="735.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (4 samples, 0.05%)</title><rect x="40.2645%" y="757" width="0.0545%" height="15" fill="rgb(241,52,2)" fg:x="2953" fg:w="4"/><text x="40.5145%" y="767.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (4 samples, 0.05%)</title><rect x="40.2645%" y="741" width="0.0545%" height="15" fill="rgb(248,140,14)" fg:x="2953" fg:w="4"/><text x="40.5145%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="40.3054%" y="725" width="0.0136%" height="15" fill="rgb(253,22,42)" fg:x="2956" fg:w="1"/><text x="40.5554%" y="735.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::emit_char (9 samples, 0.12%)</title><rect x="40.2100%" y="821" width="0.1227%" height="15" fill="rgb(234,61,47)" fg:x="2949" fg:w="9"/><text x="40.4600%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (8 samples, 0.11%)</title><rect x="40.2236%" y="805" width="0.1091%" height="15" fill="rgb(208,226,15)" fg:x="2950" fg:w="8"/><text x="40.4736%" y="815.50"></text></g><g><title>graphgen`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (7 samples, 0.10%)</title><rect x="40.2373%" y="789" width="0.0954%" height="15" fill="rgb(217,221,4)" fg:x="2951" fg:w="7"/><text x="40.4873%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (7 samples, 0.10%)</title><rect x="40.2373%" y="773" width="0.0954%" height="15" fill="rgb(212,174,34)" fg:x="2951" fg:w="7"/><text x="40.4873%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::reconstruct_formatting (1 samples, 0.01%)</title><rect x="40.3191%" y="757" width="0.0136%" height="15" fill="rgb(253,83,4)" fg:x="2957" fg:w="1"/><text x="40.5691%" y="767.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_char_ref (13 samples, 0.18%)</title><rect x="40.1691%" y="837" width="0.1773%" height="15" fill="rgb(250,195,49)" fg:x="2946" fg:w="13"/><text x="40.4191%" y="847.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (1 samples, 0.01%)</title><rect x="40.3327%" y="821" width="0.0136%" height="15" fill="rgb(241,192,25)" fg:x="2958" fg:w="1"/><text x="40.5827%" y="831.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (1 samples, 0.01%)</title><rect x="40.5509%" y="805" width="0.0136%" height="15" fill="rgb(208,124,10)" fg:x="2974" fg:w="1"/><text x="40.8009%" y="815.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="40.6190%" y="789" width="0.0136%" height="15" fill="rgb(222,33,0)" fg:x="2979" fg:w="1"/><text x="40.8690%" y="799.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (1 samples, 0.01%)</title><rect x="40.6327%" y="773" width="0.0136%" height="15" fill="rgb(234,209,28)" fg:x="2980" fg:w="1"/><text x="40.8827%" y="783.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (1 samples, 0.01%)</title><rect x="40.6463%" y="773" width="0.0136%" height="15" fill="rgb(224,11,23)" fg:x="2981" fg:w="1"/><text x="40.8963%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (2 samples, 0.03%)</title><rect x="40.6599%" y="773" width="0.0273%" height="15" fill="rgb(232,99,1)" fg:x="2982" fg:w="2"/><text x="40.9099%" y="783.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="40.7418%" y="757" width="0.0136%" height="15" fill="rgb(237,95,45)" fg:x="2988" fg:w="1"/><text x="40.9918%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (2 samples, 0.03%)</title><rect x="40.7554%" y="757" width="0.0273%" height="15" fill="rgb(208,109,11)" fg:x="2989" fg:w="2"/><text x="41.0054%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (1 samples, 0.01%)</title><rect x="40.8236%" y="741" width="0.0136%" height="15" fill="rgb(216,190,48)" fg:x="2994" fg:w="1"/><text x="41.0736%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::append_id (5 samples, 0.07%)</title><rect x="40.7827%" y="757" width="0.0682%" height="15" fill="rgb(251,171,36)" fg:x="2991" fg:w="5"/><text x="41.0327%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::detach (1 samples, 0.01%)</title><rect x="40.8372%" y="741" width="0.0136%" height="15" fill="rgb(230,62,22)" fg:x="2995" fg:w="1"/><text x="41.0872%" y="751.50"></text></g><g><title>graphgen`ego_tree::NodeMut&lt;T&gt;::detach (1 samples, 0.01%)</title><rect x="40.8508%" y="757" width="0.0136%" height="15" fill="rgb(225,114,35)" fg:x="2996" fg:w="1"/><text x="41.1008%" y="767.50"></text></g><g><title>graphgen`ego_tree::Tree&lt;T&gt;::orphan (6 samples, 0.08%)</title><rect x="40.8645%" y="757" width="0.0818%" height="15" fill="rgb(215,118,42)" fg:x="2997" fg:w="6"/><text x="41.1145%" y="767.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="40.9054%" y="741" width="0.0409%" height="15" fill="rgb(243,119,21)" fg:x="3000" fg:w="3"/><text x="41.1554%" y="751.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="40.9054%" y="725" width="0.0409%" height="15" fill="rgb(252,177,53)" fg:x="3000" fg:w="3"/><text x="41.1554%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="40.9054%" y="709" width="0.0409%" height="15" fill="rgb(237,209,29)" fg:x="3000" fg:w="3"/><text x="41.1554%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.04%)</title><rect x="40.9054%" y="693" width="0.0409%" height="15" fill="rgb(212,65,23)" fg:x="3000" fg:w="3"/><text x="41.1554%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="40.9054%" y="677" width="0.0409%" height="15" fill="rgb(230,222,46)" fg:x="3000" fg:w="3"/><text x="41.1554%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="40.9872%" y="693" width="0.0136%" height="15" fill="rgb(215,135,32)" fg:x="3006" fg:w="1"/><text x="41.2372%" y="703.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_tendril (5 samples, 0.07%)</title><rect x="40.9463%" y="757" width="0.0682%" height="15" fill="rgb(246,101,22)" fg:x="3003" fg:w="5"/><text x="41.1963%" y="767.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="40.9872%" y="741" width="0.0273%" height="15" fill="rgb(206,107,13)" fg:x="3006" fg:w="2"/><text x="41.2372%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="40.9872%" y="725" width="0.0273%" height="15" fill="rgb(250,100,44)" fg:x="3006" fg:w="2"/><text x="41.2372%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="40.9872%" y="709" width="0.0273%" height="15" fill="rgb(231,147,38)" fg:x="3006" fg:w="2"/><text x="41.2372%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="41.0008%" y="693" width="0.0136%" height="15" fill="rgb(229,8,40)" fg:x="3007" fg:w="1"/><text x="41.2508%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="41.0008%" y="677" width="0.0136%" height="15" fill="rgb(221,135,30)" fg:x="3007" fg:w="1"/><text x="41.2508%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="41.0145%" y="757" width="0.0136%" height="15" fill="rgb(249,193,18)" fg:x="3008" fg:w="1"/><text x="41.2645%" y="767.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (28 samples, 0.38%)</title><rect x="40.6872%" y="773" width="0.3818%" height="15" fill="rgb(209,133,39)" fg:x="2984" fg:w="28"/><text x="40.9372%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="41.0281%" y="757" width="0.0409%" height="15" fill="rgb(232,100,14)" fg:x="3009" fg:w="3"/><text x="41.2781%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (33 samples, 0.45%)</title><rect x="40.6327%" y="789" width="0.4500%" height="15" fill="rgb(224,185,1)" fg:x="2980" fg:w="33"/><text x="40.8827%" y="799.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_tendril (1 samples, 0.01%)</title><rect x="41.0690%" y="773" width="0.0136%" height="15" fill="rgb(223,139,8)" fg:x="3012" fg:w="1"/><text x="41.3190%" y="783.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::reconstruct_formatting (2 samples, 0.03%)</title><rect x="41.0826%" y="789" width="0.0273%" height="15" fill="rgb(232,213,38)" fg:x="3013" fg:w="2"/><text x="41.3326%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::appropriate_place_for_insertion (1 samples, 0.01%)</title><rect x="41.1235%" y="757" width="0.0136%" height="15" fill="rgb(207,94,22)" fg:x="3016" fg:w="1"/><text x="41.3735%" y="767.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (3 samples, 0.04%)</title><rect x="41.1099%" y="789" width="0.0409%" height="15" fill="rgb(219,183,54)" fg:x="3015" fg:w="3"/><text x="41.3599%" y="799.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::insert_appropriately (3 samples, 0.04%)</title><rect x="41.1099%" y="773" width="0.0409%" height="15" fill="rgb(216,185,54)" fg:x="3015" fg:w="3"/><text x="41.3599%" y="783.50"></text></g><g><title>graphgen`scraper::html::tree_sink::_&lt;impl markup5ever::interface::tree_builder::TreeSink for scraper::html::Html&gt;::append (1 samples, 0.01%)</title><rect x="41.1372%" y="757" width="0.0136%" height="15" fill="rgb(254,217,39)" fg:x="3017" fg:w="1"/><text x="41.3872%" y="767.50"></text></g><g><title>graphgen`ego_tree::NodeId::to_index (1 samples, 0.01%)</title><rect x="41.1372%" y="741" width="0.0136%" height="15" fill="rgb(240,178,23)" fg:x="3017" fg:w="1"/><text x="41.3872%" y="751.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (45 samples, 0.61%)</title><rect x="40.5645%" y="805" width="0.6136%" height="15" fill="rgb(218,11,47)" fg:x="2975" fg:w="45"/><text x="40.8145%" y="815.50"></text></g><g><title>graphgen`html5ever::tree_builder::any_not_whitespace (2 samples, 0.03%)</title><rect x="41.1508%" y="789" width="0.0273%" height="15" fill="rgb(218,51,51)" fg:x="3018" fg:w="2"/><text x="41.4008%" y="799.50"></text></g><g><title>graphgen`&lt;html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt; as html5ever::tokenizer::interface::TokenSink&gt;::process_token (63 samples, 0.86%)</title><rect x="40.4145%" y="821" width="0.8590%" height="15" fill="rgb(238,126,27)" fg:x="2964" fg:w="63"/><text x="40.6645%" y="831.50"></text></g><g><title>graphgen`html5ever::tree_builder::any_not_whitespace (7 samples, 0.10%)</title><rect x="41.1781%" y="805" width="0.0954%" height="15" fill="rgb(249,202,22)" fg:x="3020" fg:w="7"/><text x="41.4281%" y="815.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::process_token (69 samples, 0.94%)</title><rect x="40.3463%" y="837" width="0.9408%" height="15" fill="rgb(254,195,49)" fg:x="2959" fg:w="69"/><text x="40.5963%" y="847.50"></text></g><g><title>graphgen`html5ever::tree_builder::TreeBuilder&lt;Handle,Sink&gt;::step (1 samples, 0.01%)</title><rect x="41.2735%" y="821" width="0.0136%" height="15" fill="rgb(208,123,14)" fg:x="3027" fg:w="1"/><text x="41.5235%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::char_ref::CharRefTokenizer::finish_named (1 samples, 0.01%)</title><rect x="41.2872%" y="837" width="0.0136%" height="15" fill="rgb(224,200,8)" fg:x="3028" fg:w="1"/><text x="41.5372%" y="847.50"></text></g><g><title>graphgen`html5ever::tokenizer::char_ref::CharRefTokenizer::new (1 samples, 0.01%)</title><rect x="41.3008%" y="837" width="0.0136%" height="15" fill="rgb(217,61,36)" fg:x="3029" fg:w="1"/><text x="41.5508%" y="847.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (3 samples, 0.04%)</title><rect x="41.3826%" y="821" width="0.0409%" height="15" fill="rgb(206,35,45)" fg:x="3035" fg:w="3"/><text x="41.6326%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::discard_char (1 samples, 0.01%)</title><rect x="41.4235%" y="821" width="0.0136%" height="15" fill="rgb(217,65,33)" fg:x="3038" fg:w="1"/><text x="41.6735%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::get_preprocessed_char (3 samples, 0.04%)</title><rect x="41.4371%" y="821" width="0.0409%" height="15" fill="rgb(222,158,48)" fg:x="3039" fg:w="3"/><text x="41.6871%" y="831.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::next (4 samples, 0.05%)</title><rect x="41.4780%" y="821" width="0.0545%" height="15" fill="rgb(254,2,54)" fg:x="3042" fg:w="4"/><text x="41.7280%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (3 samples, 0.04%)</title><rect x="41.4917%" y="805" width="0.0409%" height="15" fill="rgb(250,143,38)" fg:x="3043" fg:w="3"/><text x="41.7417%" y="815.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::peek (1 samples, 0.01%)</title><rect x="41.5326%" y="821" width="0.0136%" height="15" fill="rgb(248,25,0)" fg:x="3046" fg:w="1"/><text x="41.7826%" y="831.50"></text></g><g><title>graphgen`phf::map::Map&lt;K,V&gt;::get (10 samples, 0.14%)</title><rect x="41.5462%" y="821" width="0.1364%" height="15" fill="rgb(206,152,27)" fg:x="3047" fg:w="10"/><text x="41.7962%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (3 samples, 0.04%)</title><rect x="41.6826%" y="821" width="0.0409%" height="15" fill="rgb(240,77,30)" fg:x="3057" fg:w="3"/><text x="41.9326%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;tendril::fmt::UTF8,A&gt;::push_char (7 samples, 0.10%)</title><rect x="41.7235%" y="821" width="0.0954%" height="15" fill="rgb(231,5,3)" fg:x="3060" fg:w="7"/><text x="41.9735%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="41.8189%" y="821" width="0.0273%" height="15" fill="rgb(207,226,32)" fg:x="3067" fg:w="2"/><text x="42.0689%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::char_ref::CharRefTokenizer::step (49 samples, 0.67%)</title><rect x="41.3144%" y="837" width="0.6681%" height="15" fill="rgb(222,207,47)" fg:x="3030" fg:w="49"/><text x="41.5644%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.14%)</title><rect x="41.8462%" y="821" width="0.1364%" height="15" fill="rgb(229,115,45)" fg:x="3069" fg:w="10"/><text x="42.0962%" y="831.50"></text></g><g><title>graphgen`html5ever::tokenizer::option_push (1 samples, 0.01%)</title><rect x="41.9825%" y="837" width="0.0136%" height="15" fill="rgb(224,191,6)" fg:x="3079" fg:w="1"/><text x="42.2325%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="41.9825%" y="821" width="0.0136%" height="15" fill="rgb(230,227,24)" fg:x="3079" fg:w="1"/><text x="42.2325%" y="831.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::next (76 samples, 1.04%)</title><rect x="41.9962%" y="837" width="1.0363%" height="15" fill="rgb(228,80,19)" fg:x="3080" fg:w="76"/><text x="42.2462%" y="847.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (44 samples, 0.60%)</title><rect x="42.4325%" y="821" width="0.5999%" height="15" fill="rgb(247,229,0)" fg:x="3112" fg:w="44"/><text x="42.6825%" y="831.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::peek (6 samples, 0.08%)</title><rect x="43.0325%" y="837" width="0.0818%" height="15" fill="rgb(237,194,15)" fg:x="3156" fg:w="6"/><text x="43.2825%" y="847.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::pop_except_from (4 samples, 0.05%)</title><rect x="43.1143%" y="837" width="0.0545%" height="15" fill="rgb(219,203,20)" fg:x="3162" fg:w="4"/><text x="43.3643%" y="847.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::pop_front_char (73 samples, 1.00%)</title><rect x="43.1688%" y="837" width="0.9954%" height="15" fill="rgb(234,128,8)" fg:x="3166" fg:w="73"/><text x="43.4188%" y="847.50"></text></g><g><title>graphgen`__rdl_realloc (1 samples, 0.01%)</title><rect x="44.6959%" y="821" width="0.0136%" height="15" fill="rgb(248,202,8)" fg:x="3278" fg:w="1"/><text x="44.9459%" y="831.50"></text></g><g><title>graphgen`__rdl_realloc (1 samples, 0.01%)</title><rect x="44.7505%" y="805" width="0.0136%" height="15" fill="rgb(206,104,37)" fg:x="3282" fg:w="1"/><text x="45.0005%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="44.7641%" y="805" width="0.0136%" height="15" fill="rgb(223,8,27)" fg:x="3283" fg:w="1"/><text x="45.0141%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.05%)</title><rect x="44.7777%" y="805" width="0.0545%" height="15" fill="rgb(216,217,28)" fg:x="3284" fg:w="4"/><text x="45.0277%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="44.8732%" y="789" width="0.0136%" height="15" fill="rgb(249,199,1)" fg:x="3291" fg:w="1"/><text x="45.1232%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="44.9005%" y="773" width="0.0273%" height="15" fill="rgb(240,85,17)" fg:x="3293" fg:w="2"/><text x="45.1505%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.10%)</title><rect x="44.9277%" y="773" width="0.0954%" height="15" fill="rgb(206,108,45)" fg:x="3295" fg:w="7"/><text x="45.1777%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.10%)</title><rect x="45.0232%" y="773" width="0.0954%" height="15" fill="rgb(245,210,41)" fg:x="3302" fg:w="7"/><text x="45.2732%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.08%)</title><rect x="45.1323%" y="757" width="0.0818%" height="15" fill="rgb(206,13,37)" fg:x="3310" fg:w="6"/><text x="45.3823%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="45.2141%" y="757" width="0.0136%" height="15" fill="rgb(250,61,18)" fg:x="3316" fg:w="1"/><text x="45.4641%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="45.2141%" y="741" width="0.0136%" height="15" fill="rgb(235,172,48)" fg:x="3316" fg:w="1"/><text x="45.4641%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (10 samples, 0.14%)</title><rect x="45.1186%" y="773" width="0.1364%" height="15" fill="rgb(249,201,17)" fg:x="3309" fg:w="10"/><text x="45.3686%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="45.2277%" y="757" width="0.0273%" height="15" fill="rgb(219,208,6)" fg:x="3317" fg:w="2"/><text x="45.4777%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="45.2277%" y="741" width="0.0273%" height="15" fill="rgb(248,31,23)" fg:x="3317" fg:w="2"/><text x="45.4777%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.03%)</title><rect x="45.2277%" y="725" width="0.0273%" height="15" fill="rgb(245,15,42)" fg:x="3317" fg:w="2"/><text x="45.4777%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (28 samples, 0.38%)</title><rect x="44.8868%" y="789" width="0.3818%" height="15" fill="rgb(222,217,39)" fg:x="3292" fg:w="28"/><text x="45.1368%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="45.2550%" y="773" width="0.0136%" height="15" fill="rgb(210,219,27)" fg:x="3319" fg:w="1"/><text x="45.5050%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="45.2550%" y="757" width="0.0136%" height="15" fill="rgb(252,166,36)" fg:x="3319" fg:w="1"/><text x="45.5050%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="45.2550%" y="741" width="0.0136%" height="15" fill="rgb(245,132,34)" fg:x="3319" fg:w="1"/><text x="45.5050%" y="751.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (42 samples, 0.57%)</title><rect x="44.7096%" y="821" width="0.5727%" height="15" fill="rgb(236,54,3)" fg:x="3279" fg:w="42"/><text x="44.9596%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`realloc (33 samples, 0.45%)</title><rect x="44.8323%" y="805" width="0.4500%" height="15" fill="rgb(241,173,43)" fg:x="3288" fg:w="33"/><text x="45.0823%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="45.2686%" y="789" width="0.0136%" height="15" fill="rgb(215,190,9)" fg:x="3320" fg:w="1"/><text x="45.5186%" y="799.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (85 samples, 1.16%)</title><rect x="44.1642%" y="837" width="1.1590%" height="15" fill="rgb(242,101,16)" fg:x="3239" fg:w="85"/><text x="44.4142%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.04%)</title><rect x="45.2822%" y="821" width="0.0409%" height="15" fill="rgb(223,190,21)" fg:x="3321" fg:w="3"/><text x="45.5322%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="45.2959%" y="805" width="0.0273%" height="15" fill="rgb(215,228,25)" fg:x="3322" fg:w="2"/><text x="45.5459%" y="815.50"></text></g><g><title>graphgen`DYLD-STUB$$memcpy (14 samples, 0.19%)</title><rect x="45.4050%" y="821" width="0.1909%" height="15" fill="rgb(225,36,22)" fg:x="3330" fg:w="14"/><text x="45.6550%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (23 samples, 0.31%)</title><rect x="45.5959%" y="821" width="0.3136%" height="15" fill="rgb(251,106,46)" fg:x="3344" fg:w="23"/><text x="45.8459%" y="831.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;tendril::fmt::UTF8,A&gt;::push_char (81 samples, 1.10%)</title><rect x="45.3232%" y="837" width="1.1044%" height="15" fill="rgb(208,90,1)" fg:x="3324" fg:w="81"/><text x="45.5732%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.52%)</title><rect x="45.9095%" y="821" width="0.5181%" height="15" fill="rgb(243,10,4)" fg:x="3367" fg:w="38"/><text x="46.1595%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="46.4276%" y="837" width="0.0409%" height="15" fill="rgb(212,137,27)" fg:x="3405" fg:w="3"/><text x="46.6776%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="46.4685%" y="837" width="0.0136%" height="15" fill="rgb(231,220,49)" fg:x="3408" fg:w="1"/><text x="46.7185%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.11%)</title><rect x="46.4821%" y="837" width="0.1091%" height="15" fill="rgb(237,96,20)" fg:x="3409" fg:w="8"/><text x="46.7321%" y="847.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::step (1,796 samples, 24.49%)</title><rect x="22.4980%" y="853" width="24.4887%" height="15" fill="rgb(239,229,30)" fg:x="1650" fg:w="1796"/><text x="22.7480%" y="863.50">graphgen`html5ever::tokenizer::Tokenize..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.40%)</title><rect x="46.5912%" y="837" width="0.3954%" height="15" fill="rgb(219,65,33)" fg:x="3417" fg:w="29"/><text x="46.8412%" y="847.50"></text></g><g><title>graphgen`html5ever::tokenizer::char_ref::CharRefTokenizer::get_result (1 samples, 0.01%)</title><rect x="46.9866%" y="853" width="0.0136%" height="15" fill="rgb(243,134,7)" fg:x="3446" fg:w="1"/><text x="47.2366%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::char_ref::CharRefTokenizer::step (1 samples, 0.01%)</title><rect x="47.0003%" y="853" width="0.0136%" height="15" fill="rgb(216,177,54)" fg:x="3447" fg:w="1"/><text x="47.2503%" y="863.50"></text></g><g><title>graphgen`html5ever::util::str::lower_ascii_letter (10 samples, 0.14%)</title><rect x="47.0139%" y="853" width="0.1364%" height="15" fill="rgb(211,160,20)" fg:x="3448" fg:w="10"/><text x="47.2639%" y="863.50"></text></g><g><title>graphgen`markup5ever::util::buffer_queue::BufferQueue::next (9 samples, 0.12%)</title><rect x="47.1503%" y="853" width="0.1227%" height="15" fill="rgb(239,85,39)" fg:x="3458" fg:w="9"/><text x="47.4003%" y="863.50"></text></g><g><title>graphgen`tendril::tendril::Tendril&lt;F,A&gt;::push_bytes_without_validating (7 samples, 0.10%)</title><rect x="47.2730%" y="853" width="0.0954%" height="15" fill="rgb(232,125,22)" fg:x="3467" fg:w="7"/><text x="47.5230%" y="863.50"></text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::run (1,862 samples, 25.39%)</title><rect x="22.0071%" y="869" width="25.3886%" height="15" fill="rgb(244,57,34)" fg:x="1614" fg:w="1862"/><text x="22.2571%" y="879.50">graphgen`html5ever::tokenizer::Tokenizer&lt;..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="47.3684%" y="853" width="0.0273%" height="15" fill="rgb(214,203,32)" fg:x="3474" fg:w="2"/><text x="47.6184%" y="863.50"></text></g><g><title>graphgen`tendril::stream::TendrilSink::one (1,883 samples, 25.67%)</title><rect x="21.9935%" y="885" width="25.6749%" height="15" fill="rgb(207,58,43)" fg:x="1613" fg:w="1883"/><text x="22.2435%" y="895.50">graphgen`tendril::stream::TendrilSink::one</text></g><g><title>graphgen`html5ever::tokenizer::Tokenizer&lt;Sink&gt;::step (20 samples, 0.27%)</title><rect x="47.3957%" y="869" width="0.2727%" height="15" fill="rgb(215,193,15)" fg:x="3476" fg:w="20"/><text x="47.6457%" y="879.50"></text></g><g><title>graphgen`scraper::html::Html::parse_document (1,891 samples, 25.78%)</title><rect x="21.9798%" y="901" width="25.7840%" height="15" fill="rgb(232,15,44)" fg:x="1612" fg:w="1891"/><text x="22.2298%" y="911.50">graphgen`scraper::html::Html::parse_docum..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.10%)</title><rect x="47.6684%" y="885" width="0.0954%" height="15" fill="rgb(212,3,48)" fg:x="3496" fg:w="7"/><text x="47.9184%" y="895.50"></text></g><g><title>graphgen`&lt;string_cache::atom::Atom&lt;Static&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (4 samples, 0.05%)</title><rect x="47.8047%" y="885" width="0.0545%" height="15" fill="rgb(218,128,7)" fg:x="3506" fg:w="4"/><text x="48.0547%" y="895.50"></text></g><g><title>graphgen`DYLD-STUB$$memcmp (1 samples, 0.01%)</title><rect x="47.8593%" y="885" width="0.0136%" height="15" fill="rgb(226,216,39)" fg:x="3510" fg:w="1"/><text x="48.1093%" y="895.50"></text></g><g><title>graphgen`&lt;markup5ever::NamespaceStaticSet as string_cache::static_sets::StaticAtomSet&gt;::get (1 samples, 0.01%)</title><rect x="47.9002%" y="869" width="0.0136%" height="15" fill="rgb(243,47,51)" fg:x="3513" fg:w="1"/><text x="48.1502%" y="879.50"></text></g><g><title>graphgen`&lt;markup5ever::interface::QualName as core::hash::Hash&gt;::hash (5 samples, 0.07%)</title><rect x="47.9138%" y="869" width="0.0682%" height="15" fill="rgb(241,183,40)" fg:x="3514" fg:w="5"/><text x="48.1638%" y="879.50"></text></g><g><title>graphgen`core::hash::BuildHasher::hash_one (9 samples, 0.12%)</title><rect x="47.8729%" y="885" width="0.1227%" height="15" fill="rgb(231,217,32)" fg:x="3511" fg:w="9"/><text x="48.1229%" y="895.50"></text></g><g><title>graphgen`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="47.9820%" y="869" width="0.0136%" height="15" fill="rgb(229,61,38)" fg:x="3519" fg:w="1"/><text x="48.2320%" y="879.50"></text></g><g><title>graphgen`scraper::node::Element::attr (18 samples, 0.25%)</title><rect x="47.7638%" y="901" width="0.2454%" height="15" fill="rgb(225,210,5)" fg:x="3503" fg:w="18"/><text x="48.0138%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="47.9956%" y="885" width="0.0136%" height="15" fill="rgb(231,79,45)" fg:x="3520" fg:w="1"/><text x="48.2456%" y="895.50"></text></g><g><title>graphgen`scraper::selector::Selector::parse (1 samples, 0.01%)</title><rect x="48.0093%" y="901" width="0.0136%" height="15" fill="rgb(224,100,7)" fg:x="3521" fg:w="1"/><text x="48.2593%" y="911.50"></text></g><g><title>graphgen`selectors::parser::SelectorList&lt;Impl&gt;::parse_with_state (1 samples, 0.01%)</title><rect x="48.0093%" y="885" width="0.0136%" height="15" fill="rgb(241,198,18)" fg:x="3521" fg:w="1"/><text x="48.2593%" y="895.50"></text></g><g><title>graphgen`cssparser::parser::parse_until_before (1 samples, 0.01%)</title><rect x="48.0093%" y="869" width="0.0136%" height="15" fill="rgb(252,97,53)" fg:x="3521" fg:w="1"/><text x="48.2593%" y="879.50"></text></g><g><title>graphgen`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.01%)</title><rect x="48.0093%" y="853" width="0.0136%" height="15" fill="rgb(220,88,7)" fg:x="3521" fg:w="1"/><text x="48.2593%" y="863.50"></text></g><g><title>graphgen`seize::collector::Collector::enter (1 samples, 0.01%)</title><rect x="48.0229%" y="901" width="0.0136%" height="15" fill="rgb(213,176,14)" fg:x="3522" fg:w="1"/><text x="48.2729%" y="911.50"></text></g><g><title>graphgen`seize::tls::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.01%)</title><rect x="48.0229%" y="885" width="0.0136%" height="15" fill="rgb(246,73,7)" fg:x="3522" fg:w="1"/><text x="48.2729%" y="895.50"></text></g><g><title>graphgen`seize::raw::Collector::node (1 samples, 0.01%)</title><rect x="48.0365%" y="901" width="0.0136%" height="15" fill="rgb(245,64,36)" fg:x="3523" fg:w="1"/><text x="48.2865%" y="911.50"></text></g><g><title>graphgen`seize::reclaim::boxed (1 samples, 0.01%)</title><rect x="48.0502%" y="885" width="0.0136%" height="15" fill="rgb(245,80,10)" fg:x="3524" fg:w="1"/><text x="48.3002%" y="895.50"></text></g><g><title>graphgen`&lt;flurry::raw::Table&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="48.0502%" y="869" width="0.0136%" height="15" fill="rgb(232,107,50)" fg:x="3524" fg:w="1"/><text x="48.3002%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="48.0502%" y="853" width="0.0136%" height="15" fill="rgb(253,3,0)" fg:x="3524" fg:w="1"/><text x="48.3002%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="48.0502%" y="837" width="0.0136%" height="15" fill="rgb(212,99,53)" fg:x="3524" fg:w="1"/><text x="48.3002%" y="847.50"></text></g><g><title>graphgen`seize::raw::Collector::retire (2 samples, 0.03%)</title><rect x="48.0502%" y="901" width="0.0273%" height="15" fill="rgb(249,111,54)" fg:x="3524" fg:w="2"/><text x="48.3002%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="48.0638%" y="885" width="0.0136%" height="15" fill="rgb(249,55,30)" fg:x="3525" fg:w="1"/><text x="48.3138%" y="895.50"></text></g><g><title>graphgen`&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.01%)</title><rect x="48.0774%" y="869" width="0.0136%" height="15" fill="rgb(237,47,42)" fg:x="3526" fg:w="1"/><text x="48.3274%" y="879.50"></text></g><g><title>graphgen`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.01%)</title><rect x="48.1320%" y="789" width="0.0136%" height="15" fill="rgb(211,20,18)" fg:x="3530" fg:w="1"/><text x="48.3820%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="48.1729%" y="725" width="0.0136%" height="15" fill="rgb(231,203,46)" fg:x="3533" fg:w="1"/><text x="48.4229%" y="735.50"></text></g><g><title>graphgen`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (5 samples, 0.07%)</title><rect x="48.1456%" y="741" width="0.0682%" height="15" fill="rgb(237,142,3)" fg:x="3531" fg:w="5"/><text x="48.3956%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="48.1865%" y="725" width="0.0273%" height="15" fill="rgb(241,107,1)" fg:x="3534" fg:w="2"/><text x="48.4365%" y="735.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (1 samples, 0.01%)</title><rect x="48.2138%" y="741" width="0.0136%" height="15" fill="rgb(229,83,13)" fg:x="3536" fg:w="1"/><text x="48.4638%" y="751.50"></text></g><g><title>graphgen`tokio::runtime::task::raw::schedule (1 samples, 0.01%)</title><rect x="48.2274%" y="741" width="0.0136%" height="15" fill="rgb(241,91,40)" fg:x="3537" fg:w="1"/><text x="48.4774%" y="751.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="48.2411%" y="725" width="0.0136%" height="15" fill="rgb(225,3,45)" fg:x="3538" fg:w="1"/><text x="48.4911%" y="735.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (52 samples, 0.71%)</title><rect x="48.2547%" y="725" width="0.7090%" height="15" fill="rgb(244,223,14)" fg:x="3539" fg:w="52"/><text x="48.5047%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`kevent (52 samples, 0.71%)</title><rect x="48.2547%" y="709" width="0.7090%" height="15" fill="rgb(224,124,37)" fg:x="3539" fg:w="52"/><text x="48.5047%" y="719.50"></text></g><g><title>graphgen`tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.01%)</title><rect x="48.9637%" y="725" width="0.0136%" height="15" fill="rgb(251,171,30)" fg:x="3591" fg:w="1"/><text x="49.2137%" y="735.50"></text></g><g><title>graphgen`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (62 samples, 0.85%)</title><rect x="48.1456%" y="757" width="0.8454%" height="15" fill="rgb(236,46,54)" fg:x="3531" fg:w="62"/><text x="48.3956%" y="767.50"></text></g><g><title>graphgen`tokio::runtime::task::waker::wake_by_val (55 samples, 0.75%)</title><rect x="48.2411%" y="741" width="0.7499%" height="15" fill="rgb(245,213,5)" fg:x="3538" fg:w="55"/><text x="48.4911%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="48.9774%" y="725" width="0.0136%" height="15" fill="rgb(230,144,27)" fg:x="3592" fg:w="1"/><text x="49.2274%" y="735.50"></text></g><g><title>graphgen`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (64 samples, 0.87%)</title><rect x="48.1320%" y="805" width="0.8726%" height="15" fill="rgb(220,86,6)" fg:x="3530" fg:w="64"/><text x="48.3820%" y="815.50"></text></g><g><title>graphgen`hyper::body::body::Body::poll_inner (63 samples, 0.86%)</title><rect x="48.1456%" y="789" width="0.8590%" height="15" fill="rgb(240,20,13)" fg:x="3531" fg:w="63"/><text x="48.3956%" y="799.50"></text></g><g><title>graphgen`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.86%)</title><rect x="48.1456%" y="773" width="0.8590%" height="15" fill="rgb(217,89,34)" fg:x="3531" fg:w="63"/><text x="48.3956%" y="783.50"></text></g><g><title>graphgen`futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.01%)</title><rect x="48.9910%" y="757" width="0.0136%" height="15" fill="rgb(229,13,5)" fg:x="3593" fg:w="1"/><text x="49.2410%" y="767.50"></text></g><g><title>graphgen`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (65 samples, 0.89%)</title><rect x="48.1320%" y="837" width="0.8863%" height="15" fill="rgb(244,67,35)" fg:x="3530" fg:w="65"/><text x="48.3820%" y="847.50"></text></g><g><title>graphgen`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (65 samples, 0.89%)</title><rect x="48.1320%" y="821" width="0.8863%" height="15" fill="rgb(221,40,2)" fg:x="3530" fg:w="65"/><text x="48.3820%" y="831.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::body::body::DelayEof&gt;&gt; (1 samples, 0.01%)</title><rect x="49.0046%" y="805" width="0.0136%" height="15" fill="rgb(237,157,21)" fg:x="3594" fg:w="1"/><text x="49.2546%" y="815.50"></text></g><g><title>graphgen`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (1 samples, 0.01%)</title><rect x="49.0183%" y="837" width="0.0136%" height="15" fill="rgb(222,94,11)" fg:x="3595" fg:w="1"/><text x="49.2683%" y="847.50"></text></g><g><title>graphgen`&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (67 samples, 0.91%)</title><rect x="48.1320%" y="853" width="0.9136%" height="15" fill="rgb(249,113,6)" fg:x="3530" fg:w="67"/><text x="48.3820%" y="863.50"></text></g><g><title>graphgen`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="49.0319%" y="837" width="0.0136%" height="15" fill="rgb(238,137,36)" fg:x="3596" fg:w="1"/><text x="49.2819%" y="847.50"></text></g><g><title>graphgen`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (2 samples, 0.03%)</title><rect x="49.0455%" y="853" width="0.0273%" height="15" fill="rgb(210,102,26)" fg:x="3597" fg:w="2"/><text x="49.2955%" y="863.50"></text></g><g><title>graphgen`futures_task::waker::drop_arc_raw (1 samples, 0.01%)</title><rect x="49.0728%" y="853" width="0.0136%" height="15" fill="rgb(218,30,30)" fg:x="3599" fg:w="1"/><text x="49.3228%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="49.0728%" y="837" width="0.0136%" height="15" fill="rgb(214,67,26)" fg:x="3599" fg:w="1"/><text x="49.3228%" y="847.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.03%)</title><rect x="49.0864%" y="837" width="0.0273%" height="15" fill="rgb(251,9,53)" fg:x="3600" fg:w="2"/><text x="49.3364%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.03%)</title><rect x="49.0864%" y="821" width="0.0273%" height="15" fill="rgb(228,204,25)" fg:x="3600" fg:w="2"/><text x="49.3364%" y="831.50"></text></g><g><title>graphgen`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.04%)</title><rect x="49.0864%" y="853" width="0.0409%" height="15" fill="rgb(207,153,8)" fg:x="3600" fg:w="3"/><text x="49.3364%" y="863.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="49.1137%" y="837" width="0.0136%" height="15" fill="rgb(242,9,16)" fg:x="3602" fg:w="1"/><text x="49.3637%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_timedwait (1 samples, 0.01%)</title><rect x="49.1819%" y="821" width="0.0136%" height="15" fill="rgb(217,211,10)" fg:x="3607" fg:w="1"/><text x="49.4319%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="49.1819%" y="805" width="0.0136%" height="15" fill="rgb(219,228,52)" fg:x="3607" fg:w="1"/><text x="49.4319%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_timeout (1 samples, 0.01%)</title><rect x="49.1955%" y="821" width="0.0136%" height="15" fill="rgb(231,92,29)" fg:x="3608" fg:w="1"/><text x="49.4455%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (69 samples, 0.94%)</title><rect x="49.1410%" y="837" width="0.9408%" height="15" fill="rgb(232,8,23)" fg:x="3604" fg:w="69"/><text x="49.3910%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (64 samples, 0.87%)</title><rect x="49.2092%" y="821" width="0.8726%" height="15" fill="rgb(216,211,34)" fg:x="3609" fg:w="64"/><text x="49.4592%" y="831.50"></text></g><g><title>graphgen`std::thread::park_timeout (71 samples, 0.97%)</title><rect x="49.1274%" y="853" width="0.9681%" height="15" fill="rgb(236,151,0)" fg:x="3603" fg:w="71"/><text x="49.3774%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="50.0818%" y="837" width="0.0136%" height="15" fill="rgb(209,168,3)" fg:x="3673" fg:w="1"/><text x="50.3318%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="50.0954%" y="853" width="0.0136%" height="15" fill="rgb(208,129,28)" fg:x="3674" fg:w="1"/><text x="50.3454%" y="863.50"></text></g><g><title>graphgen`reqwest::blocking::wait::timeout (165 samples, 2.25%)</title><rect x="48.0911%" y="869" width="2.2498%" height="15" fill="rgb(229,78,22)" fg:x="3527" fg:w="165"/><text x="48.3411%" y="879.50">g..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.23%)</title><rect x="50.1091%" y="853" width="0.2318%" height="15" fill="rgb(228,187,13)" fg:x="3675" fg:w="17"/><text x="50.3591%" y="863.50"></text></g><g><title>graphgen`&lt;reqwest::blocking::response::Response as std::io::Read&gt;::read (167 samples, 2.28%)</title><rect x="48.0774%" y="885" width="2.2771%" height="15" fill="rgb(240,119,24)" fg:x="3526" fg:w="167"/><text x="48.3274%" y="895.50">g..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="50.3409%" y="869" width="0.0136%" height="15" fill="rgb(209,194,42)" fg:x="3692" fg:w="1"/><text x="50.5909%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.07%)</title><rect x="50.3954%" y="789" width="0.0682%" height="15" fill="rgb(247,200,46)" fg:x="3696" fg:w="5"/><text x="50.6454%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (7 samples, 0.10%)</title><rect x="50.3818%" y="805" width="0.0954%" height="15" fill="rgb(218,76,16)" fg:x="3695" fg:w="7"/><text x="50.6318%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="50.4636%" y="789" width="0.0136%" height="15" fill="rgb(225,21,48)" fg:x="3701" fg:w="1"/><text x="50.7136%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="50.4772%" y="805" width="0.0136%" height="15" fill="rgb(239,223,50)" fg:x="3702" fg:w="1"/><text x="50.7272%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="50.4772%" y="789" width="0.0136%" height="15" fill="rgb(244,45,21)" fg:x="3702" fg:w="1"/><text x="50.7272%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.4909%" y="789" width="0.0136%" height="15" fill="rgb(232,33,43)" fg:x="3703" fg:w="1"/><text x="50.7409%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="50.4909%" y="773" width="0.0136%" height="15" fill="rgb(209,8,3)" fg:x="3703" fg:w="1"/><text x="50.7409%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="50.4909%" y="757" width="0.0136%" height="15" fill="rgb(214,25,53)" fg:x="3703" fg:w="1"/><text x="50.7409%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.16%)</title><rect x="50.3681%" y="821" width="0.1636%" height="15" fill="rgb(254,186,54)" fg:x="3694" fg:w="12"/><text x="50.6181%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="50.4909%" y="805" width="0.0409%" height="15" fill="rgb(208,174,49)" fg:x="3703" fg:w="3"/><text x="50.7409%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="50.5045%" y="789" width="0.0273%" height="15" fill="rgb(233,191,51)" fg:x="3704" fg:w="2"/><text x="50.7545%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="50.5045%" y="773" width="0.0273%" height="15" fill="rgb(222,134,10)" fg:x="3704" fg:w="2"/><text x="50.7545%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (31 samples, 0.42%)</title><rect x="50.3681%" y="837" width="0.4227%" height="15" fill="rgb(230,226,20)" fg:x="3694" fg:w="31"/><text x="50.6181%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.26%)</title><rect x="50.5318%" y="821" width="0.2591%" height="15" fill="rgb(251,111,25)" fg:x="3706" fg:w="19"/><text x="50.7818%" y="831.50"></text></g><g><title>graphgen`std::io::default_read_to_string (200 samples, 2.73%)</title><rect x="48.0774%" y="901" width="2.7270%" height="15" fill="rgb(224,40,46)" fg:x="3526" fg:w="200"/><text x="48.3274%" y="911.50">gr..</text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.45%)</title><rect x="50.3545%" y="885" width="0.4500%" height="15" fill="rgb(236,108,47)" fg:x="3693" fg:w="33"/><text x="50.6045%" y="895.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (33 samples, 0.45%)</title><rect x="50.3545%" y="869" width="0.4500%" height="15" fill="rgb(234,93,0)" fg:x="3693" fg:w="33"/><text x="50.6045%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`realloc (33 samples, 0.45%)</title><rect x="50.3545%" y="853" width="0.4500%" height="15" fill="rgb(224,213,32)" fg:x="3693" fg:w="33"/><text x="50.6045%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="50.7908%" y="837" width="0.0136%" height="15" fill="rgb(251,11,48)" fg:x="3725" fg:w="1"/><text x="51.0408%" y="847.50"></text></g><g><title>graphgen`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.01%)</title><rect x="50.8045%" y="821" width="0.0136%" height="15" fill="rgb(236,173,5)" fg:x="3726" fg:w="1"/><text x="51.0545%" y="831.50"></text></g><g><title>graphgen`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.12%)</title><rect x="50.8045%" y="853" width="0.1227%" height="15" fill="rgb(230,95,12)" fg:x="3726" fg:w="9"/><text x="51.0545%" y="863.50"></text></g><g><title>graphgen`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 0.12%)</title><rect x="50.8045%" y="837" width="0.1227%" height="15" fill="rgb(232,209,1)" fg:x="3726" fg:w="9"/><text x="51.0545%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.11%)</title><rect x="50.8181%" y="821" width="0.1091%" height="15" fill="rgb(232,6,1)" fg:x="3727" fg:w="8"/><text x="51.0681%" y="831.50"></text></g><g><title>graphgen`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (10 samples, 0.14%)</title><rect x="50.8045%" y="885" width="0.1364%" height="15" fill="rgb(210,224,50)" fg:x="3726" fg:w="10"/><text x="51.0545%" y="895.50"></text></g><g><title>graphgen`core::fmt::write (10 samples, 0.14%)</title><rect x="50.8045%" y="869" width="0.1364%" height="15" fill="rgb(228,127,35)" fg:x="3726" fg:w="10"/><text x="51.0545%" y="879.50"></text></g><g><title>graphgen`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="50.9272%" y="853" width="0.0136%" height="15" fill="rgb(245,102,45)" fg:x="3735" fg:w="1"/><text x="51.1772%" y="863.50"></text></g><g><title>graphgen`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="50.9272%" y="837" width="0.0136%" height="15" fill="rgb(214,1,49)" fg:x="3735" fg:w="1"/><text x="51.1772%" y="847.50"></text></g><g><title>graphgen`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="50.9272%" y="821" width="0.0136%" height="15" fill="rgb(226,163,40)" fg:x="3735" fg:w="1"/><text x="51.1772%" y="831.50"></text></g><g><title>graphgen`core::slice::memchr::memrchr (1 samples, 0.01%)</title><rect x="50.9272%" y="805" width="0.0136%" height="15" fill="rgb(239,212,28)" fg:x="3735" fg:w="1"/><text x="51.1772%" y="815.50"></text></g><g><title>graphgen`std::io::stdio::_print (11 samples, 0.15%)</title><rect x="50.8045%" y="901" width="0.1500%" height="15" fill="rgb(220,20,13)" fg:x="3726" fg:w="11"/><text x="51.0545%" y="911.50"></text></g><g><title>graphgen`std::io::stdio::print_to_buffer_if_capture_used (1 samples, 0.01%)</title><rect x="50.9408%" y="885" width="0.0136%" height="15" fill="rgb(210,164,35)" fg:x="3736" fg:w="1"/><text x="51.1908%" y="895.50"></text></g><g><title>libsystem_c.dylib`nanosleep (1 samples, 0.01%)</title><rect x="50.9545%" y="885" width="0.0136%" height="15" fill="rgb(248,109,41)" fg:x="3737" fg:w="1"/><text x="51.2045%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (1 samples, 0.01%)</title><rect x="50.9545%" y="869" width="0.0136%" height="15" fill="rgb(238,23,50)" fg:x="3737" fg:w="1"/><text x="51.2045%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mig_get_reply_port (1 samples, 0.01%)</title><rect x="50.9545%" y="853" width="0.0136%" height="15" fill="rgb(211,48,49)" fg:x="3737" fg:w="1"/><text x="51.2045%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_construct_trap (1 samples, 0.01%)</title><rect x="50.9545%" y="837" width="0.0136%" height="15" fill="rgb(223,36,21)" fg:x="3737" fg:w="1"/><text x="51.2045%" y="847.50"></text></g><g><title>graphgen`std::thread::sleep (2 samples, 0.03%)</title><rect x="50.9545%" y="901" width="0.0273%" height="15" fill="rgb(207,123,46)" fg:x="3737" fg:w="2"/><text x="51.2045%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (1 samples, 0.01%)</title><rect x="50.9681%" y="885" width="0.0136%" height="15" fill="rgb(240,218,32)" fg:x="3738" fg:w="1"/><text x="51.2181%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.11%)</title><rect x="50.9817%" y="901" width="0.1091%" height="15" fill="rgb(252,5,43)" fg:x="3739" fg:w="8"/><text x="51.2317%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.07%)</title><rect x="51.0908%" y="901" width="0.0682%" height="15" fill="rgb(252,84,19)" fg:x="3747" fg:w="5"/><text x="51.3408%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (44 samples, 0.60%)</title><rect x="51.1590%" y="901" width="0.5999%" height="15" fill="rgb(243,152,39)" fg:x="3752" fg:w="44"/><text x="51.4090%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`madvise (44 samples, 0.60%)</title><rect x="51.1590%" y="885" width="0.5999%" height="15" fill="rgb(234,160,15)" fg:x="3752" fg:w="44"/><text x="51.4090%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="51.7589%" y="901" width="0.0136%" height="15" fill="rgb(237,34,20)" fg:x="3796" fg:w="1"/><text x="52.0089%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="51.7589%" y="885" width="0.0136%" height="15" fill="rgb(229,97,13)" fg:x="3796" fg:w="1"/><text x="52.0089%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="51.7589%" y="869" width="0.0136%" height="15" fill="rgb(234,71,50)" fg:x="3796" fg:w="1"/><text x="52.0089%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="51.7726%" y="901" width="0.0136%" height="15" fill="rgb(253,155,4)" fg:x="3797" fg:w="1"/><text x="52.0226%" y="911.50"></text></g><g><title>libsystem_platform.dylib`__bzero (10 samples, 0.14%)</title><rect x="51.7862%" y="901" width="0.1364%" height="15" fill="rgb(222,185,37)" fg:x="3798" fg:w="10"/><text x="52.0362%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="51.9226%" y="901" width="0.0136%" height="15" fill="rgb(251,177,13)" fg:x="3808" fg:w="1"/><text x="52.1726%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="51.9362%" y="901" width="0.0136%" height="15" fill="rgb(250,179,40)" fg:x="3809" fg:w="1"/><text x="52.1862%" y="911.50"></text></g><g><title>graphgen`graphgen::worker::Worker::scrape (3,302 samples, 45.02%)</title><rect x="6.9539%" y="917" width="45.0232%" height="15" fill="rgb(242,44,2)" fg:x="510" fg:w="3302"/><text x="7.2039%" y="927.50">graphgen`graphgen::worker::Worker::scrape</text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="51.9498%" y="901" width="0.0273%" height="15" fill="rgb(216,177,13)" fg:x="3810" fg:w="2"/><text x="52.1998%" y="911.50"></text></g><g><title>graphgen`std::io::stdio::_print (1 samples, 0.01%)</title><rect x="51.9771%" y="917" width="0.0136%" height="15" fill="rgb(216,106,43)" fg:x="3812" fg:w="1"/><text x="52.2271%" y="927.50"></text></g><g><title>graphgen`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="51.9907%" y="917" width="0.0136%" height="15" fill="rgb(216,183,2)" fg:x="3813" fg:w="1"/><text x="52.2407%" y="927.50"></text></g><g><title>graphgen`tokio::loom::std::rand::seed (1 samples, 0.01%)</title><rect x="51.9907%" y="901" width="0.0136%" height="15" fill="rgb(249,75,3)" fg:x="3813" fg:w="1"/><text x="52.2407%" y="911.50"></text></g><g><title>graphgen`std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.01%)</title><rect x="51.9907%" y="885" width="0.0136%" height="15" fill="rgb(219,67,39)" fg:x="3813" fg:w="1"/><text x="52.2407%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (1 samples, 0.01%)</title><rect x="51.9907%" y="869" width="0.0136%" height="15" fill="rgb(253,228,2)" fg:x="3813" fg:w="1"/><text x="52.2407%" y="879.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="52.0044%" y="869" width="0.0136%" height="15" fill="rgb(235,138,27)" fg:x="3814" fg:w="1"/><text x="52.2544%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.01%)</title><rect x="52.0044%" y="853" width="0.0136%" height="15" fill="rgb(236,97,51)" fg:x="3814" fg:w="1"/><text x="52.2544%" y="863.50"></text></g><g><title>graphgen`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.03%)</title><rect x="52.0044%" y="885" width="0.0273%" height="15" fill="rgb(240,80,30)" fg:x="3814" fg:w="2"/><text x="52.2544%" y="895.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="52.0180%" y="869" width="0.0136%" height="15" fill="rgb(230,178,19)" fg:x="3815" fg:w="1"/><text x="52.2680%" y="879.50"></text></g><g><title>graphgen`std::sys::unix::locks::pthread_condvar::Condvar::wait_timeout (5 samples, 0.07%)</title><rect x="52.0044%" y="901" width="0.0682%" height="15" fill="rgb(210,190,27)" fg:x="3814" fg:w="5"/><text x="52.2544%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.04%)</title><rect x="52.0316%" y="885" width="0.0409%" height="15" fill="rgb(222,107,31)" fg:x="3816" fg:w="3"/><text x="52.2816%" y="895.50"></text></g><g><title>Network`-[NWConcrete_nw_parameters dealloc] (1 samples, 0.01%)</title><rect x="52.0725%" y="677" width="0.0136%" height="15" fill="rgb(216,127,34)" fg:x="3819" fg:w="1"/><text x="52.3225%" y="687.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.01%)</title><rect x="52.0725%" y="661" width="0.0136%" height="15" fill="rgb(234,116,52)" fg:x="3819" fg:w="1"/><text x="52.3225%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.01%)</title><rect x="52.0725%" y="645" width="0.0136%" height="15" fill="rgb(222,124,15)" fg:x="3819" fg:w="1"/><text x="52.3225%" y="655.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.01%)</title><rect x="52.0725%" y="629" width="0.0136%" height="15" fill="rgb(231,179,28)" fg:x="3819" fg:w="1"/><text x="52.3225%" y="639.50"></text></g><g><title>Network`-[NWConcrete_nw_protocol_stack dealloc] (1 samples, 0.01%)</title><rect x="52.0725%" y="613" width="0.0136%" height="15" fill="rgb(226,93,45)" fg:x="3819" fg:w="1"/><text x="52.3225%" y="623.50"></text></g><g><title>Network`-[NWConcrete_nw_endpoint dealloc] (1 samples, 0.01%)</title><rect x="52.0862%" y="533" width="0.0136%" height="15" fill="rgb(215,8,51)" fg:x="3820" fg:w="1"/><text x="52.3362%" y="543.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.01%)</title><rect x="52.0862%" y="517" width="0.0136%" height="15" fill="rgb(223,106,5)" fg:x="3820" fg:w="1"/><text x="52.3362%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.01%)</title><rect x="52.0862%" y="501" width="0.0136%" height="15" fill="rgb(250,191,5)" fg:x="3820" fg:w="1"/><text x="52.3362%" y="511.50"></text></g><g><title>Network`-[NWOSAddressEndpoint .cxx_destruct] (1 samples, 0.01%)</title><rect x="52.0862%" y="485" width="0.0136%" height="15" fill="rgb(242,132,44)" fg:x="3820" fg:w="1"/><text x="52.3362%" y="495.50"></text></g><g><title>Network`nw_endpoint_clear_alternatives (1 samples, 0.01%)</title><rect x="52.0998%" y="533" width="0.0136%" height="15" fill="rgb(251,152,29)" fg:x="3821" fg:w="1"/><text x="52.3498%" y="543.50"></text></g><g><title>Network`-[OS_nw_array dealloc] (3 samples, 0.04%)</title><rect x="52.0862%" y="581" width="0.0409%" height="15" fill="rgb(218,179,5)" fg:x="3820" fg:w="3"/><text x="52.3362%" y="591.50"></text></g><g><title>Network`nw_array_dispose (3 samples, 0.04%)</title><rect x="52.0862%" y="565" width="0.0409%" height="15" fill="rgb(227,67,19)" fg:x="3820" fg:w="3"/><text x="52.3362%" y="575.50"></text></g><g><title>Network`-[NWOSAddressEndpoint dealloc] (3 samples, 0.04%)</title><rect x="52.0862%" y="549" width="0.0409%" height="15" fill="rgb(233,119,31)" fg:x="3820" fg:w="3"/><text x="52.3362%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (1 samples, 0.01%)</title><rect x="52.1134%" y="533" width="0.0136%" height="15" fill="rgb(241,120,22)" fg:x="3822" fg:w="1"/><text x="52.3634%" y="543.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.01%)</title><rect x="52.1271%" y="517" width="0.0136%" height="15" fill="rgb(224,102,30)" fg:x="3823" fg:w="1"/><text x="52.3771%" y="527.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.01%)</title><rect x="52.1271%" y="501" width="0.0136%" height="15" fill="rgb(210,164,37)" fg:x="3823" fg:w="1"/><text x="52.3771%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="52.1271%" y="485" width="0.0136%" height="15" fill="rgb(226,191,16)" fg:x="3823" fg:w="1"/><text x="52.3771%" y="495.50"></text></g><g><title>Network`-[NWConcrete_nw_path_evaluator dealloc] (6 samples, 0.08%)</title><rect x="52.0725%" y="741" width="0.0818%" height="15" fill="rgb(214,40,45)" fg:x="3819" fg:w="6"/><text x="52.3225%" y="751.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (6 samples, 0.08%)</title><rect x="52.0725%" y="725" width="0.0818%" height="15" fill="rgb(244,29,26)" fg:x="3819" fg:w="6"/><text x="52.3225%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (6 samples, 0.08%)</title><rect x="52.0725%" y="709" width="0.0818%" height="15" fill="rgb(216,16,5)" fg:x="3819" fg:w="6"/><text x="52.3225%" y="719.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (6 samples, 0.08%)</title><rect x="52.0725%" y="693" width="0.0818%" height="15" fill="rgb(249,76,35)" fg:x="3819" fg:w="6"/><text x="52.3225%" y="703.50"></text></g><g><title>Network`-[NWConcrete_nw_path_evaluator .cxx_destruct] (5 samples, 0.07%)</title><rect x="52.0862%" y="677" width="0.0682%" height="15" fill="rgb(207,11,44)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="687.50"></text></g><g><title>Network`-[NWConcrete_nw_path dealloc] (5 samples, 0.07%)</title><rect x="52.0862%" y="661" width="0.0682%" height="15" fill="rgb(228,190,49)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="671.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (5 samples, 0.07%)</title><rect x="52.0862%" y="645" width="0.0682%" height="15" fill="rgb(214,173,12)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (5 samples, 0.07%)</title><rect x="52.0862%" y="629" width="0.0682%" height="15" fill="rgb(218,26,35)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="639.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (5 samples, 0.07%)</title><rect x="52.0862%" y="613" width="0.0682%" height="15" fill="rgb(220,200,19)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="623.50"></text></g><g><title>Network`-[NWConcrete_nw_path .cxx_destruct] (5 samples, 0.07%)</title><rect x="52.0862%" y="597" width="0.0682%" height="15" fill="rgb(239,95,49)" fg:x="3820" fg:w="5"/><text x="52.3362%" y="607.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.03%)</title><rect x="52.1271%" y="581" width="0.0273%" height="15" fill="rgb(235,85,53)" fg:x="3823" fg:w="2"/><text x="52.3771%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (2 samples, 0.03%)</title><rect x="52.1271%" y="565" width="0.0273%" height="15" fill="rgb(233,133,31)" fg:x="3823" fg:w="2"/><text x="52.3771%" y="575.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.03%)</title><rect x="52.1271%" y="549" width="0.0273%" height="15" fill="rgb(218,25,20)" fg:x="3823" fg:w="2"/><text x="52.3771%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (2 samples, 0.03%)</title><rect x="52.1271%" y="533" width="0.0273%" height="15" fill="rgb(252,210,38)" fg:x="3823" fg:w="2"/><text x="52.3771%" y="543.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.01%)</title><rect x="52.1407%" y="517" width="0.0136%" height="15" fill="rgb(242,134,21)" fg:x="3824" fg:w="1"/><text x="52.3907%" y="527.50"></text></g><g><title>Network`-[NWConcrete_nw_path_evaluator init] (1 samples, 0.01%)</title><rect x="52.1543%" y="725" width="0.0136%" height="15" fill="rgb(213,28,48)" fg:x="3825" fg:w="1"/><text x="52.4043%" y="735.50"></text></g><g><title>Network`networkd_settings_init (2 samples, 0.03%)</title><rect x="52.1680%" y="693" width="0.0273%" height="15" fill="rgb(250,196,2)" fg:x="3826" fg:w="2"/><text x="52.4180%" y="703.50"></text></g><g><title>Network`networkd_settings_read_from_file() (1 samples, 0.01%)</title><rect x="52.1816%" y="677" width="0.0136%" height="15" fill="rgb(227,5,17)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.01%)</title><rect x="52.1816%" y="661" width="0.0136%" height="15" fill="rgb(221,226,24)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.01%)</title><rect x="52.1816%" y="645" width="0.0136%" height="15" fill="rgb(211,5,48)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.01%)</title><rect x="52.1816%" y="629" width="0.0136%" height="15" fill="rgb(219,150,6)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="639.50"></text></g><g><title>Network`nwlog_legacy_init_once() (1 samples, 0.01%)</title><rect x="52.1816%" y="613" width="0.0136%" height="15" fill="rgb(251,46,16)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="623.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.01%)</title><rect x="52.1816%" y="597" width="0.0136%" height="15" fill="rgb(220,204,40)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="607.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preferences_refresh (1 samples, 0.01%)</title><rect x="52.1816%" y="581" width="0.0136%" height="15" fill="rgb(211,85,2)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="591.50"></text></g><g><title>libsystem_trace.dylib`_os_log_preference_load_cache (1 samples, 0.01%)</title><rect x="52.1816%" y="565" width="0.0136%" height="15" fill="rgb(229,17,7)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="575.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_get_logging_prefs (1 samples, 0.01%)</title><rect x="52.1816%" y="549" width="0.0136%" height="15" fill="rgb(239,72,28)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="559.50"></text></g><g><title>libdispatch.dylib`firehose_send_get_logging_prefs (1 samples, 0.01%)</title><rect x="52.1816%" y="533" width="0.0136%" height="15" fill="rgb(230,47,54)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.01%)</title><rect x="52.1816%" y="517" width="0.0136%" height="15" fill="rgb(214,50,8)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (1 samples, 0.01%)</title><rect x="52.1816%" y="501" width="0.0136%" height="15" fill="rgb(216,198,43)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="52.1816%" y="485" width="0.0136%" height="15" fill="rgb(234,20,35)" fg:x="3827" fg:w="1"/><text x="52.4316%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__proc_info (3 samples, 0.04%)</title><rect x="52.1953%" y="693" width="0.0409%" height="15" fill="rgb(254,45,19)" fg:x="3828" fg:w="3"/><text x="52.4453%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.01%)</title><rect x="52.2362%" y="693" width="0.0136%" height="15" fill="rgb(219,14,44)" fg:x="3831" fg:w="1"/><text x="52.4862%" y="703.50"></text></g><g><title>Network`-[NWConcrete_nw_parameters initWithStack:] (7 samples, 0.10%)</title><rect x="52.1680%" y="709" width="0.0954%" height="15" fill="rgb(217,220,26)" fg:x="3826" fg:w="7"/><text x="52.4180%" y="719.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_int64 (1 samples, 0.01%)</title><rect x="52.2498%" y="693" width="0.0136%" height="15" fill="rgb(213,158,28)" fg:x="3832" fg:w="1"/><text x="52.4998%" y="703.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_fast (1 samples, 0.01%)</title><rect x="52.2498%" y="677" width="0.0136%" height="15" fill="rgb(252,51,52)" fg:x="3832" fg:w="1"/><text x="52.4998%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.01%)</title><rect x="52.2498%" y="661" width="0.0136%" height="15" fill="rgb(246,89,16)" fg:x="3832" fg:w="1"/><text x="52.4998%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_table (1 samples, 0.01%)</title><rect x="52.2498%" y="645" width="0.0136%" height="15" fill="rgb(216,158,49)" fg:x="3832" fg:w="1"/><text x="52.4998%" y="655.50"></text></g><g><title>libxpc.dylib`_hash_bucket (1 samples, 0.01%)</title><rect x="52.2498%" y="629" width="0.0136%" height="15" fill="rgb(236,107,19)" fg:x="3832" fg:w="1"/><text x="52.4998%" y="639.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint_no_evaluate (8 samples, 0.11%)</title><rect x="52.1680%" y="725" width="0.1091%" height="15" fill="rgb(228,185,30)" fg:x="3826" fg:w="8"/><text x="52.4180%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_retain_x28 (1 samples, 0.01%)</title><rect x="52.2634%" y="709" width="0.0136%" height="15" fill="rgb(246,134,8)" fg:x="3833" fg:w="1"/><text x="52.5134%" y="719.50"></text></g><g><title>Network`nw_path_create_necp_parameters (1 samples, 0.01%)</title><rect x="52.2771%" y="725" width="0.0136%" height="15" fill="rgb(214,143,50)" fg:x="3834" fg:w="1"/><text x="52.5271%" y="735.50"></text></g><g><title>Network`nw_array_create (1 samples, 0.01%)</title><rect x="52.2907%" y="709" width="0.0136%" height="15" fill="rgb(228,75,8)" fg:x="3835" fg:w="1"/><text x="52.5407%" y="719.50"></text></g><g><title>Network`nw_parameters_copy_preferred_netagent_uuids (1 samples, 0.01%)</title><rect x="52.3043%" y="709" width="0.0136%" height="15" fill="rgb(207,175,4)" fg:x="3836" fg:w="1"/><text x="52.5543%" y="719.50"></text></g><g><title>Network`nw_parameters_copy_required_interface (1 samples, 0.01%)</title><rect x="52.3180%" y="709" width="0.0136%" height="15" fill="rgb(205,108,24)" fg:x="3837" fg:w="1"/><text x="52.5680%" y="719.50"></text></g><g><title>Network`nw_parameters_get_attribution_context (1 samples, 0.01%)</title><rect x="52.3316%" y="709" width="0.0136%" height="15" fill="rgb(244,120,49)" fg:x="3838" fg:w="1"/><text x="52.5816%" y="719.50"></text></g><g><title>Network`nw_parameters_get_traffic_class (1 samples, 0.01%)</title><rect x="52.3452%" y="709" width="0.0136%" height="15" fill="rgb(223,47,38)" fg:x="3839" fg:w="1"/><text x="52.5952%" y="719.50"></text></g><g><title>Network`nw_path_copy_endpoint_from_tlv (2 samples, 0.03%)</title><rect x="52.3589%" y="709" width="0.0273%" height="15" fill="rgb(229,179,11)" fg:x="3840" fg:w="2"/><text x="52.6089%" y="719.50"></text></g><g><title>Network`nw_path_create_necp_parameters (3 samples, 0.04%)</title><rect x="52.3861%" y="709" width="0.0409%" height="15" fill="rgb(231,122,1)" fg:x="3842" fg:w="3"/><text x="52.6361%" y="719.50"></text></g><g><title>libsystem_c.dylib`uuid_is_null (2 samples, 0.03%)</title><rect x="52.3998%" y="693" width="0.0273%" height="15" fill="rgb(245,119,9)" fg:x="3843" fg:w="2"/><text x="52.6498%" y="703.50"></text></g><g><title>Network`nw_path_parse_necp_result (1 samples, 0.01%)</title><rect x="52.4271%" y="709" width="0.0136%" height="15" fill="rgb(241,163,25)" fg:x="3845" fg:w="1"/><text x="52.6771%" y="719.50"></text></g><g><title>Network`nw_array_append (1 samples, 0.01%)</title><rect x="52.4271%" y="693" width="0.0136%" height="15" fill="rgb(217,214,3)" fg:x="3845" fg:w="1"/><text x="52.6771%" y="703.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.01%)</title><rect x="52.4271%" y="677" width="0.0136%" height="15" fill="rgb(240,86,28)" fg:x="3845" fg:w="1"/><text x="52.6771%" y="687.50"></text></g><g><title>Network`nw_path_agents_are_satisfied_update_reason (1 samples, 0.01%)</title><rect x="52.4407%" y="693" width="0.0136%" height="15" fill="rgb(215,47,9)" fg:x="3846" fg:w="1"/><text x="52.6907%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.01%)</title><rect x="52.4407%" y="677" width="0.0136%" height="15" fill="rgb(252,25,45)" fg:x="3846" fg:w="1"/><text x="52.6907%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="52.4407%" y="661" width="0.0136%" height="15" fill="rgb(251,164,9)" fg:x="3846" fg:w="1"/><text x="52.6907%" y="671.50"></text></g><g><title>Network`__nw_path_agents_are_satisfied_update_reason_block_invoke (1 samples, 0.01%)</title><rect x="52.4407%" y="645" width="0.0136%" height="15" fill="rgb(233,194,0)" fg:x="3846" fg:w="1"/><text x="52.6907%" y="655.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.01%)</title><rect x="52.4543%" y="677" width="0.0136%" height="15" fill="rgb(249,111,24)" fg:x="3847" fg:w="1"/><text x="52.7043%" y="687.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.01%)</title><rect x="52.4543%" y="661" width="0.0136%" height="15" fill="rgb(250,223,3)" fg:x="3847" fg:w="1"/><text x="52.7043%" y="671.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.01%)</title><rect x="52.4543%" y="645" width="0.0136%" height="15" fill="rgb(236,178,37)" fg:x="3847" fg:w="1"/><text x="52.7043%" y="655.50"></text></g><g><title>Network`nw_path_copy_interface_with_generation (2 samples, 0.03%)</title><rect x="52.4543%" y="693" width="0.0273%" height="15" fill="rgb(241,158,50)" fg:x="3847" fg:w="2"/><text x="52.7043%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (1 samples, 0.01%)</title><rect x="52.4680%" y="677" width="0.0136%" height="15" fill="rgb(213,121,41)" fg:x="3848" fg:w="1"/><text x="52.7180%" y="687.50"></text></g><g><title>Network`nw_endpoint_is_multicast (1 samples, 0.01%)</title><rect x="52.4816%" y="661" width="0.0136%" height="15" fill="rgb(240,92,3)" fg:x="3849" fg:w="1"/><text x="52.7316%" y="671.50"></text></g><g><title>Network`nw_path_network_is_satisfied_update_reason (2 samples, 0.03%)</title><rect x="52.4816%" y="693" width="0.0273%" height="15" fill="rgb(205,123,3)" fg:x="3849" fg:w="2"/><text x="52.7316%" y="703.50"></text></g><g><title>Network`nw_path_uses_nexus_internal (2 samples, 0.03%)</title><rect x="52.4816%" y="677" width="0.0273%" height="15" fill="rgb(205,97,47)" fg:x="3849" fg:w="2"/><text x="52.7316%" y="687.50"></text></g><g><title>Network`nw_path_get_nexus_agent (1 samples, 0.01%)</title><rect x="52.4952%" y="661" width="0.0136%" height="15" fill="rgb(247,152,14)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="671.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (1 samples, 0.01%)</title><rect x="52.4952%" y="645" width="0.0136%" height="15" fill="rgb(248,195,53)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="52.4952%" y="629" width="0.0136%" height="15" fill="rgb(226,201,16)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (1 samples, 0.01%)</title><rect x="52.4952%" y="613" width="0.0136%" height="15" fill="rgb(205,98,0)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="623.50"></text></g><g><title>Network`__nw_path_get_nexus_agent_block_invoke (1 samples, 0.01%)</title><rect x="52.4952%" y="597" width="0.0136%" height="15" fill="rgb(214,191,48)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="607.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_get_data (1 samples, 0.01%)</title><rect x="52.4952%" y="581" width="0.0136%" height="15" fill="rgb(237,112,39)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_fast (1 samples, 0.01%)</title><rect x="52.4952%" y="565" width="0.0136%" height="15" fill="rgb(247,203,27)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.01%)</title><rect x="52.4952%" y="549" width="0.0136%" height="15" fill="rgb(235,124,28)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="559.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_table (1 samples, 0.01%)</title><rect x="52.4952%" y="533" width="0.0136%" height="15" fill="rgb(208,207,46)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="543.50"></text></g><g><title>libxpc.dylib`_hash_bucket (1 samples, 0.01%)</title><rect x="52.4952%" y="517" width="0.0136%" height="15" fill="rgb(234,176,4)" fg:x="3850" fg:w="1"/><text x="52.7452%" y="527.50"></text></g><g><title>libdispatch.dylib`-[OS_object release] (1 samples, 0.01%)</title><rect x="52.5089%" y="677" width="0.0136%" height="15" fill="rgb(230,133,28)" fg:x="3851" fg:w="1"/><text x="52.7589%" y="687.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.01%)</title><rect x="52.5225%" y="677" width="0.0136%" height="15" fill="rgb(211,137,40)" fg:x="3852" fg:w="1"/><text x="52.7725%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_plist_collapse_stack (1 samples, 0.01%)</title><rect x="52.5770%" y="661" width="0.0136%" height="15" fill="rgb(254,35,13)" fg:x="3856" fg:w="1"/><text x="52.8270%" y="671.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.01%)</title><rect x="52.5770%" y="645" width="0.0136%" height="15" fill="rgb(225,49,51)" fg:x="3856" fg:w="1"/><text x="52.8270%" y="655.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (1 samples, 0.01%)</title><rect x="52.5770%" y="629" width="0.0136%" height="15" fill="rgb(251,10,15)" fg:x="3856" fg:w="1"/><text x="52.8270%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.01%)</title><rect x="52.5770%" y="613" width="0.0136%" height="15" fill="rgb(228,207,15)" fg:x="3856" fg:w="1"/><text x="52.8270%" y="623.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (1 samples, 0.01%)</title><rect x="52.5770%" y="597" width="0.0136%" height="15" fill="rgb(241,99,19)" fg:x="3856" fg:w="1"/><text x="52.8270%" y="607.50"></text></g><g><title>Network`nw_path_snapshot_agents (7 samples, 0.10%)</title><rect x="52.5089%" y="693" width="0.0954%" height="15" fill="rgb(207,104,49)" fg:x="3851" fg:w="7"/><text x="52.7589%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_create_from_plist (5 samples, 0.07%)</title><rect x="52.5361%" y="677" width="0.0682%" height="15" fill="rgb(234,99,18)" fg:x="3853" fg:w="5"/><text x="52.7861%" y="687.50"></text></g><g><title>libxpc.dylib`xpc_array_create (1 samples, 0.01%)</title><rect x="52.5907%" y="661" width="0.0136%" height="15" fill="rgb(213,191,49)" fg:x="3857" fg:w="1"/><text x="52.8407%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_array_create (1 samples, 0.01%)</title><rect x="52.5907%" y="645" width="0.0136%" height="15" fill="rgb(210,226,19)" fg:x="3857" fg:w="1"/><text x="52.8407%" y="655.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.01%)</title><rect x="52.5907%" y="629" width="0.0136%" height="15" fill="rgb(229,97,18)" fg:x="3857" fg:w="1"/><text x="52.8407%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.01%)</title><rect x="52.5907%" y="613" width="0.0136%" height="15" fill="rgb(211,167,15)" fg:x="3857" fg:w="1"/><text x="52.8407%" y="623.50"></text></g><g><title>Network`nw_path_snapshot_fallback (3 samples, 0.04%)</title><rect x="52.6043%" y="693" width="0.0409%" height="15" fill="rgb(210,169,34)" fg:x="3858" fg:w="3"/><text x="52.8543%" y="703.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply (3 samples, 0.04%)</title><rect x="52.6043%" y="677" width="0.0409%" height="15" fill="rgb(241,121,31)" fg:x="3858" fg:w="3"/><text x="52.8543%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (3 samples, 0.04%)</title><rect x="52.6043%" y="661" width="0.0409%" height="15" fill="rgb(232,40,11)" fg:x="3858" fg:w="3"/><text x="52.8543%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_apply (3 samples, 0.04%)</title><rect x="52.6043%" y="645" width="0.0409%" height="15" fill="rgb(205,86,26)" fg:x="3858" fg:w="3"/><text x="52.8543%" y="655.50"></text></g><g><title>Network`__nw_path_snapshot_fallback_block_invoke (2 samples, 0.03%)</title><rect x="52.6179%" y="629" width="0.0273%" height="15" fill="rgb(231,126,28)" fg:x="3859" fg:w="2"/><text x="52.8679%" y="639.50"></text></g><g><title>Network`nw_path_get_interface_index (2 samples, 0.03%)</title><rect x="52.6179%" y="613" width="0.0273%" height="15" fill="rgb(219,221,18)" fg:x="3859" fg:w="2"/><text x="52.8679%" y="623.50"></text></g><g><title>Network`nw_path_network_is_satisfied_update_reason (2 samples, 0.03%)</title><rect x="52.6179%" y="597" width="0.0273%" height="15" fill="rgb(211,40,0)" fg:x="3859" fg:w="2"/><text x="52.8679%" y="607.50"></text></g><g><title>Network`nw_parameters_has_prohibited_interfaces (1 samples, 0.01%)</title><rect x="52.6316%" y="581" width="0.0136%" height="15" fill="rgb(239,85,43)" fg:x="3860" fg:w="1"/><text x="52.8816%" y="591.50"></text></g><g><title>Network`nw_path_evaluator_evaluate (27 samples, 0.37%)</title><rect x="52.2907%" y="725" width="0.3681%" height="15" fill="rgb(231,55,21)" fg:x="3835" fg:w="27"/><text x="52.5407%" y="735.50"></text></g><g><title>Network`nw_path_snapshot_path (16 samples, 0.22%)</title><rect x="52.4407%" y="709" width="0.2182%" height="15" fill="rgb(225,184,43)" fg:x="3846" fg:w="16"/><text x="52.6907%" y="719.50"></text></g><g><title>libsystem_configuration.dylib`config_agent_copy_proxy_information (1 samples, 0.01%)</title><rect x="52.6452%" y="693" width="0.0136%" height="15" fill="rgb(251,158,41)" fg:x="3861" fg:w="1"/><text x="52.8952%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`necp_client_action (24 samples, 0.33%)</title><rect x="52.6588%" y="725" width="0.3272%" height="15" fill="rgb(234,159,37)" fg:x="3862" fg:w="24"/><text x="52.9088%" y="735.50"></text></g><g><title>Network`nw_path_create_evaluator_for_endpoint (62 samples, 0.85%)</title><rect x="52.1543%" y="741" width="0.8454%" height="15" fill="rgb(216,204,22)" fg:x="3825" fg:w="62"/><text x="52.4043%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="52.9861%" y="725" width="0.0136%" height="15" fill="rgb(214,17,3)" fg:x="3886" fg:w="1"/><text x="53.2361%" y="735.50"></text></g><g><title>libsystem_info.dylib`_gai_nat64_second_pass (70 samples, 0.95%)</title><rect x="52.0725%" y="773" width="0.9545%" height="15" fill="rgb(212,111,17)" fg:x="3819" fg:w="70"/><text x="52.3225%" y="783.50"></text></g><g><title>Network`nw_nat64_v4_address_requires_synthesis (70 samples, 0.95%)</title><rect x="52.0725%" y="757" width="0.9545%" height="15" fill="rgb(221,157,24)" fg:x="3819" fg:w="70"/><text x="52.3225%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`necp_client_action (2 samples, 0.03%)</title><rect x="52.9997%" y="741" width="0.0273%" height="15" fill="rgb(252,16,13)" fg:x="3887" fg:w="2"/><text x="53.2497%" y="751.50"></text></g><g><title>libsystem_info.dylib`_mdns_hostent_append_alias (1 samples, 0.01%)</title><rect x="53.0270%" y="693" width="0.0136%" height="15" fill="rgb(221,62,2)" fg:x="3889" fg:w="1"/><text x="53.2770%" y="703.50"></text></g><g><title>libsystem_dnssd.dylib`handle_query_response (2 samples, 0.03%)</title><rect x="53.0270%" y="709" width="0.0273%" height="15" fill="rgb(247,87,22)" fg:x="3889" fg:w="2"/><text x="53.2770%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="53.0406%" y="693" width="0.0136%" height="15" fill="rgb(215,73,9)" fg:x="3890" fg:w="1"/><text x="53.2906%" y="703.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceProcessResult (8 samples, 0.11%)</title><rect x="53.0270%" y="725" width="0.1091%" height="15" fill="rgb(207,175,33)" fg:x="3889" fg:w="8"/><text x="53.2770%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (6 samples, 0.08%)</title><rect x="53.0543%" y="709" width="0.0818%" height="15" fill="rgb(243,129,54)" fg:x="3891" fg:w="6"/><text x="53.3043%" y="719.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_clear (4 samples, 0.05%)</title><rect x="53.1361%" y="725" width="0.0545%" height="15" fill="rgb(227,119,45)" fg:x="3897" fg:w="4"/><text x="53.3861%" y="735.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceRefDeallocate (4 samples, 0.05%)</title><rect x="53.1361%" y="709" width="0.0545%" height="15" fill="rgb(205,109,36)" fg:x="3897" fg:w="4"/><text x="53.3861%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__sendto_nocancel (4 samples, 0.05%)</title><rect x="53.1361%" y="693" width="0.0545%" height="15" fill="rgb(205,6,39)" fg:x="3897" fg:w="4"/><text x="53.3861%" y="703.50"></text></g><g><title>libsystem_dnssd.dylib`DYLD-STUB$$close$NOCANCEL (1 samples, 0.01%)</title><rect x="53.1906%" y="693" width="0.0136%" height="15" fill="rgb(221,32,16)" fg:x="3901" fg:w="1"/><text x="53.4406%" y="703.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom_nocancel (1 samples, 0.01%)</title><rect x="53.2043%" y="677" width="0.0136%" height="15" fill="rgb(228,144,50)" fg:x="3902" fg:w="1"/><text x="53.4543%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom_nocancel (3 samples, 0.04%)</title><rect x="53.2179%" y="677" width="0.0409%" height="15" fill="rgb(229,201,53)" fg:x="3903" fg:w="3"/><text x="53.4679%" y="687.50"></text></g><g><title>libsystem_dnssd.dylib`deliver_request (12 samples, 0.16%)</title><rect x="53.2043%" y="693" width="0.1636%" height="15" fill="rgb(249,153,27)" fg:x="3902" fg:w="12"/><text x="53.4543%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__sendto_nocancel (8 samples, 0.11%)</title><rect x="53.2588%" y="677" width="0.1091%" height="15" fill="rgb(227,106,25)" fg:x="3906" fg:w="8"/><text x="53.5088%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (12 samples, 0.16%)</title><rect x="53.3679%" y="693" width="0.1636%" height="15" fill="rgb(230,65,29)" fg:x="3914" fg:w="12"/><text x="53.6179%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (6 samples, 0.08%)</title><rect x="53.5315%" y="693" width="0.0818%" height="15" fill="rgb(221,57,46)" fg:x="3926" fg:w="6"/><text x="53.7815%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__sendmsg_nocancel (16 samples, 0.22%)</title><rect x="53.6133%" y="693" width="0.2182%" height="15" fill="rgb(229,161,17)" fg:x="3932" fg:w="16"/><text x="53.8633%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__socketpair (5 samples, 0.07%)</title><rect x="53.8315%" y="693" width="0.0682%" height="15" fill="rgb(222,213,11)" fg:x="3948" fg:w="5"/><text x="54.0815%" y="703.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (56 samples, 0.76%)</title><rect x="53.1906%" y="725" width="0.7636%" height="15" fill="rgb(235,35,13)" fg:x="3901" fg:w="56"/><text x="53.4406%" y="735.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecordInternal (56 samples, 0.76%)</title><rect x="53.1906%" y="709" width="0.7636%" height="15" fill="rgb(233,158,34)" fg:x="3901" fg:w="56"/><text x="53.4406%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`setsockopt (4 samples, 0.05%)</title><rect x="53.8996%" y="693" width="0.0545%" height="15" fill="rgb(215,151,48)" fg:x="3953" fg:w="4"/><text x="54.1496%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (3 samples, 0.04%)</title><rect x="53.9542%" y="725" width="0.0409%" height="15" fill="rgb(229,84,14)" fg:x="3957" fg:w="3"/><text x="54.2042%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="53.9951%" y="725" width="0.0273%" height="15" fill="rgb(229,68,14)" fg:x="3960" fg:w="2"/><text x="54.2451%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="53.9951%" y="709" width="0.0273%" height="15" fill="rgb(243,106,26)" fg:x="3960" fg:w="2"/><text x="54.2451%" y="719.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (74 samples, 1.01%)</title><rect x="53.0270%" y="741" width="1.0090%" height="15" fill="rgb(206,45,38)" fg:x="3889" fg:w="74"/><text x="53.2770%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.01%)</title><rect x="54.0224%" y="725" width="0.0136%" height="15" fill="rgb(226,6,15)" fg:x="3962" fg:w="1"/><text x="54.2724%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.01%)</title><rect x="54.0224%" y="709" width="0.0136%" height="15" fill="rgb(232,22,54)" fg:x="3962" fg:w="1"/><text x="54.2724%" y="719.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo_list_from_hostent (1 samples, 0.01%)</title><rect x="54.0360%" y="741" width="0.0136%" height="15" fill="rgb(229,222,32)" fg:x="3963" fg:w="1"/><text x="54.2860%" y="751.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo_list (1 samples, 0.01%)</title><rect x="54.0360%" y="725" width="0.0136%" height="15" fill="rgb(228,62,29)" fg:x="3963" fg:w="1"/><text x="54.2860%" y="735.50"></text></g><g><title>libsystem_info.dylib`LI_ils_create (1 samples, 0.01%)</title><rect x="54.0360%" y="709" width="0.0136%" height="15" fill="rgb(251,103,34)" fg:x="3963" fg:w="1"/><text x="54.2860%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.01%)</title><rect x="54.0496%" y="741" width="0.0136%" height="15" fill="rgb(233,12,30)" fg:x="3964" fg:w="1"/><text x="54.2996%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.05%)</title><rect x="54.0633%" y="741" width="0.0545%" height="15" fill="rgb(238,52,0)" fg:x="3965" fg:w="4"/><text x="54.3133%" y="751.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (152 samples, 2.07%)</title><rect x="52.0725%" y="805" width="2.0725%" height="15" fill="rgb(223,98,5)" fg:x="3819" fg:w="152"/><text x="52.3225%" y="815.50">l..</text></g><g><title>libsystem_info.dylib`si_addrinfo (152 samples, 2.07%)</title><rect x="52.0725%" y="789" width="2.0725%" height="15" fill="rgb(228,75,37)" fg:x="3819" fg:w="152"/><text x="52.3225%" y="799.50">l..</text></g><g><title>libsystem_info.dylib`search_addrinfo (82 samples, 1.12%)</title><rect x="53.0270%" y="773" width="1.1181%" height="15" fill="rgb(205,115,49)" fg:x="3889" fg:w="82"/><text x="53.2770%" y="783.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (82 samples, 1.12%)</title><rect x="53.0270%" y="757" width="1.1181%" height="15" fill="rgb(250,154,43)" fg:x="3889" fg:w="82"/><text x="53.2770%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`kqueue (2 samples, 0.03%)</title><rect x="54.1178%" y="741" width="0.0273%" height="15" fill="rgb(226,43,29)" fg:x="3969" fg:w="2"/><text x="54.3678%" y="751.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (153 samples, 2.09%)</title><rect x="52.0725%" y="885" width="2.0862%" height="15" fill="rgb(249,228,39)" fg:x="3819" fg:w="153"/><text x="52.3225%" y="895.50">g..</text></g><g><title>graphgen`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (153 samples, 2.09%)</title><rect x="52.0725%" y="869" width="2.0862%" height="15" fill="rgb(216,79,43)" fg:x="3819" fg:w="153"/><text x="52.3225%" y="879.50">g..</text></g><g><title>graphgen`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 2.09%)</title><rect x="52.0725%" y="853" width="2.0862%" height="15" fill="rgb(228,95,12)" fg:x="3819" fg:w="153"/><text x="52.3225%" y="863.50">g..</text></g><g><title>graphgen`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (153 samples, 2.09%)</title><rect x="52.0725%" y="837" width="2.0862%" height="15" fill="rgb(249,221,15)" fg:x="3819" fg:w="153"/><text x="52.3225%" y="847.50">g..</text></g><g><title>graphgen`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (153 samples, 2.09%)</title><rect x="52.0725%" y="821" width="2.0862%" height="15" fill="rgb(233,34,13)" fg:x="3819" fg:w="153"/><text x="52.3225%" y="831.50">g..</text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 0.01%)</title><rect x="54.1451%" y="805" width="0.0136%" height="15" fill="rgb(214,103,39)" fg:x="3971" fg:w="1"/><text x="54.3951%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::blocking::pool::Inner::run (162 samples, 2.21%)</title><rect x="52.0044%" y="917" width="2.2089%" height="15" fill="rgb(251,126,39)" fg:x="3814" fg:w="162"/><text x="52.2544%" y="927.50">g..</text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (157 samples, 2.14%)</title><rect x="52.0725%" y="901" width="2.1407%" height="15" fill="rgb(214,216,36)" fg:x="3819" fg:w="157"/><text x="52.3225%" y="911.50">g..</text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (4 samples, 0.05%)</title><rect x="54.1587%" y="885" width="0.0545%" height="15" fill="rgb(220,221,8)" fg:x="3972" fg:w="4"/><text x="54.4087%" y="895.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule::_{{closure}} (4 samples, 0.05%)</title><rect x="54.1587%" y="869" width="0.0545%" height="15" fill="rgb(240,216,3)" fg:x="3972" fg:w="4"/><text x="54.4087%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`kevent (4 samples, 0.05%)</title><rect x="54.1587%" y="853" width="0.0545%" height="15" fill="rgb(232,218,17)" fg:x="3972" fg:w="4"/><text x="54.4087%" y="863.50"></text></g><g><title>graphgen`mio::sys::unix::selector::kqueue::Selector::new (2 samples, 0.03%)</title><rect x="54.2133%" y="853" width="0.0273%" height="15" fill="rgb(229,163,45)" fg:x="3976" fg:w="2"/><text x="54.4633%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (2 samples, 0.03%)</title><rect x="54.2133%" y="837" width="0.0273%" height="15" fill="rgb(231,110,42)" fg:x="3976" fg:w="2"/><text x="54.4633%" y="847.50"></text></g><g><title>graphgen`mio::poll::Poll::new (6 samples, 0.08%)</title><rect x="54.2133%" y="869" width="0.0818%" height="15" fill="rgb(208,170,48)" fg:x="3976" fg:w="6"/><text x="54.4633%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`kqueue (4 samples, 0.05%)</title><rect x="54.2405%" y="853" width="0.0545%" height="15" fill="rgb(239,116,25)" fg:x="3978" fg:w="4"/><text x="54.4905%" y="863.50"></text></g><g><title>graphgen`mio::sys::unix::waker::kqueue::Waker::new (1 samples, 0.01%)</title><rect x="54.2951%" y="853" width="0.0136%" height="15" fill="rgb(219,200,50)" fg:x="3982" fg:w="1"/><text x="54.5451%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.01%)</title><rect x="54.2951%" y="837" width="0.0136%" height="15" fill="rgb(245,200,0)" fg:x="3982" fg:w="1"/><text x="54.5451%" y="847.50"></text></g><g><title>graphgen`mio::waker::Waker::new (4 samples, 0.05%)</title><rect x="54.2951%" y="869" width="0.0545%" height="15" fill="rgb(245,119,33)" fg:x="3982" fg:w="4"/><text x="54.5451%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.04%)</title><rect x="54.3087%" y="853" width="0.0409%" height="15" fill="rgb(231,125,12)" fg:x="3983" fg:w="3"/><text x="54.5587%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::io::Driver::new (13 samples, 0.18%)</title><rect x="54.2133%" y="885" width="0.1773%" height="15" fill="rgb(216,96,41)" fg:x="3976" fg:w="13"/><text x="54.4633%" y="895.50"></text></g><g><title>graphgen`tokio::util::slab::Slab&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="54.3496%" y="869" width="0.0409%" height="15" fill="rgb(248,43,45)" fg:x="3986" fg:w="3"/><text x="54.5996%" y="879.50"></text></g><g><title>graphgen`core::array::_&lt;impl core::default::Default for [T (1 samples, 0.01%)</title><rect x="54.3769%" y="853" width="0.0136%" height="15" fill="rgb(217,222,7)" fg:x="3988" fg:w="1"/><text x="54.6269%" y="863.50"></text></g><g><title> _]&gt;::default (1 samples, 0.01%)</title><rect x="54.3769%" y="837" width="0.0136%" height="15" fill="rgb(233,28,6)" fg:x="3988" fg:w="1"/><text x="54.6269%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::driver::Driver::new (15 samples, 0.20%)</title><rect x="54.2133%" y="901" width="0.2045%" height="15" fill="rgb(231,218,15)" fg:x="3976" fg:w="15"/><text x="54.4633%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="54.3905%" y="885" width="0.0273%" height="15" fill="rgb(226,171,48)" fg:x="3989" fg:w="2"/><text x="54.6405%" y="895.50"></text></g><g><title>graphgen`tokio::runtime::builder::Builder::build (16 samples, 0.22%)</title><rect x="54.2133%" y="917" width="0.2182%" height="15" fill="rgb(235,201,9)" fg:x="3976" fg:w="16"/><text x="54.4633%" y="927.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::CurrentThread::new (1 samples, 0.01%)</title><rect x="54.4178%" y="901" width="0.0136%" height="15" fill="rgb(217,80,15)" fg:x="3991" fg:w="1"/><text x="54.6678%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="54.4178%" y="885" width="0.0136%" height="15" fill="rgb(219,152,8)" fg:x="3991" fg:w="1"/><text x="54.6678%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="54.4178%" y="869" width="0.0136%" height="15" fill="rgb(243,107,38)" fg:x="3991" fg:w="1"/><text x="54.6678%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="54.4178%" y="853" width="0.0136%" height="15" fill="rgb(231,17,5)" fg:x="3991" fg:w="1"/><text x="54.6678%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::builder::Builder::new (3 samples, 0.04%)</title><rect x="54.4314%" y="917" width="0.0409%" height="15" fill="rgb(209,25,54)" fg:x="3992" fg:w="3"/><text x="54.6814%" y="927.50"></text></g><g><title>graphgen`tokio::loom::std::rand::seed (3 samples, 0.04%)</title><rect x="54.4314%" y="901" width="0.0409%" height="15" fill="rgb(219,0,2)" fg:x="3992" fg:w="3"/><text x="54.6814%" y="911.50"></text></g><g><title>graphgen`std::thread::local::fast::Key&lt;T&gt;::try_initialize (3 samples, 0.04%)</title><rect x="54.4314%" y="885" width="0.0409%" height="15" fill="rgb(246,9,5)" fg:x="3992" fg:w="3"/><text x="54.6814%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (3 samples, 0.04%)</title><rect x="54.4314%" y="869" width="0.0409%" height="15" fill="rgb(226,159,4)" fg:x="3992" fg:w="3"/><text x="54.6814%" y="879.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;reqwest::blocking::client::ClientHandle::new::{{closure}}::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="54.4723%" y="901" width="0.0136%" height="15" fill="rgb(219,175,34)" fg:x="3995" fg:w="1"/><text x="54.7223%" y="911.50"></text></g><g><title>graphgen`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="54.5678%" y="869" width="0.0136%" height="15" fill="rgb(236,10,46)" fg:x="4002" fg:w="1"/><text x="54.8178%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="54.5814%" y="869" width="0.0136%" height="15" fill="rgb(240,211,16)" fg:x="4003" fg:w="1"/><text x="54.8314%" y="879.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="54.5950%" y="821" width="0.0136%" height="15" fill="rgb(205,3,43)" fg:x="4004" fg:w="1"/><text x="54.8450%" y="831.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;hyper::client::pool::PoolInner&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="54.5950%" y="805" width="0.0136%" height="15" fill="rgb(245,7,22)" fg:x="4004" fg:w="1"/><text x="54.8450%" y="815.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;((http::uri::scheme::Scheme,http::uri::authority::Authority),alloc::vec::Vec&lt;hyper::client::pool::Idle&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="54.5950%" y="789" width="0.0136%" height="15" fill="rgb(239,132,32)" fg:x="4004" fg:w="1"/><text x="54.8450%" y="799.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper::client::connect::ExtraEnvelope&lt;hyper::client::connect::http::HttpInfo&gt;&gt; (1 samples, 0.01%)</title><rect x="54.5950%" y="773" width="0.0136%" height="15" fill="rgb(228,202,34)" fg:x="4004" fg:w="1"/><text x="54.8450%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="54.6087%" y="821" width="0.0136%" height="15" fill="rgb(254,200,22)" fg:x="4005" fg:w="1"/><text x="54.8587%" y="831.50"></text></g><g><title>graphgen`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.04%)</title><rect x="54.5950%" y="837" width="0.0409%" height="15" fill="rgb(219,10,39)" fg:x="4004" fg:w="3"/><text x="54.8450%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="54.6223%" y="821" width="0.0136%" height="15" fill="rgb(226,210,39)" fg:x="4006" fg:w="1"/><text x="54.8723%" y="831.50"></text></g><g><title>graphgen`http::uri::Uri::from_shared (2 samples, 0.03%)</title><rect x="54.6359%" y="821" width="0.0273%" height="15" fill="rgb(208,219,16)" fg:x="4007" fg:w="2"/><text x="54.8859%" y="831.50"></text></g><g><title>graphgen`bytes::bytes::shallow_clone_vec (1 samples, 0.01%)</title><rect x="54.6496%" y="805" width="0.0136%" height="15" fill="rgb(216,158,51)" fg:x="4008" fg:w="1"/><text x="54.8996%" y="815.50"></text></g><g><title>graphgen`hyper::client::client::extract_domain (3 samples, 0.04%)</title><rect x="54.6632%" y="821" width="0.0409%" height="15" fill="rgb(233,14,44)" fg:x="4009" fg:w="3"/><text x="54.9132%" y="831.50"></text></g><g><title>graphgen`reqwest::async_impl::client::Client::execute_request (7 samples, 0.10%)</title><rect x="54.6359%" y="837" width="0.0954%" height="15" fill="rgb(237,97,39)" fg:x="4007" fg:w="7"/><text x="54.8859%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="54.7041%" y="821" width="0.0273%" height="15" fill="rgb(218,198,43)" fg:x="4012" fg:w="2"/><text x="54.9541%" y="831.50"></text></g><g><title>graphgen`reqwest::async_impl::client::ClientBuilder::build (2 samples, 0.03%)</title><rect x="54.7314%" y="837" width="0.0273%" height="15" fill="rgb(231,104,20)" fg:x="4014" fg:w="2"/><text x="54.9814%" y="847.50"></text></g><g><title>graphgen`reqwest::connect::Connector::new_default_tls (1 samples, 0.01%)</title><rect x="54.7450%" y="821" width="0.0136%" height="15" fill="rgb(254,36,13)" fg:x="4015" fg:w="1"/><text x="54.9950%" y="831.50"></text></g><g><title>graphgen`native_tls::imp::TlsConnector::new (1 samples, 0.01%)</title><rect x="54.7450%" y="805" width="0.0136%" height="15" fill="rgb(248,14,50)" fg:x="4015" fg:w="1"/><text x="54.9950%" y="815.50"></text></g><g><title>graphgen`tokio::sync::oneshot::Sender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="54.7587%" y="837" width="0.0136%" height="15" fill="rgb(217,107,29)" fg:x="4016" fg:w="1"/><text x="55.0087%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (1 samples, 0.01%)</title><rect x="54.7587%" y="821" width="0.0136%" height="15" fill="rgb(251,169,33)" fg:x="4016" fg:w="1"/><text x="55.0087%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (1 samples, 0.01%)</title><rect x="54.7587%" y="805" width="0.0136%" height="15" fill="rgb(217,108,32)" fg:x="4016" fg:w="1"/><text x="55.0087%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="54.7723%" y="837" width="0.0136%" height="15" fill="rgb(219,66,42)" fg:x="4017" fg:w="1"/><text x="55.0223%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::Context::enter (15 samples, 0.20%)</title><rect x="54.5950%" y="869" width="0.2045%" height="15" fill="rgb(206,180,7)" fg:x="4004" fg:w="15"/><text x="54.8450%" y="879.50"></text></g><g><title>graphgen`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.20%)</title><rect x="54.5950%" y="853" width="0.2045%" height="15" fill="rgb(208,226,31)" fg:x="4004" fg:w="15"/><text x="54.8450%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="54.7859%" y="837" width="0.0136%" height="15" fill="rgb(218,26,49)" fg:x="4018" fg:w="1"/><text x="55.0359%" y="847.50"></text></g><g><title>graphgen`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.01%)</title><rect x="54.8132%" y="853" width="0.0136%" height="15" fill="rgb(233,197,48)" fg:x="4020" fg:w="1"/><text x="55.0632%" y="863.50"></text></g><g><title>graphgen`std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="54.8268%" y="853" width="0.0409%" height="15" fill="rgb(252,181,51)" fg:x="4021" fg:w="3"/><text x="55.0768%" y="863.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="54.8405%" y="837" width="0.0273%" height="15" fill="rgb(253,90,19)" fg:x="4022" fg:w="2"/><text x="55.0905%" y="847.50"></text></g><g><title>graphgen`std::time::Instant::now (4 samples, 0.05%)</title><rect x="54.8677%" y="853" width="0.0545%" height="15" fill="rgb(215,171,30)" fg:x="4024" fg:w="4"/><text x="55.1177%" y="863.50"></text></g><g><title>graphgen`DYLD-STUB$$clock_gettime (2 samples, 0.03%)</title><rect x="54.9496%" y="837" width="0.0273%" height="15" fill="rgb(214,222,9)" fg:x="4030" fg:w="2"/><text x="55.1996%" y="847.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="54.9768%" y="837" width="0.0136%" height="15" fill="rgb(223,3,22)" fg:x="4032" fg:w="1"/><text x="55.2268%" y="847.50"></text></g><g><title> 32]&gt; (1 samples, 0.01%)</title><rect x="54.9768%" y="821" width="0.0136%" height="15" fill="rgb(225,196,46)" fg:x="4032" fg:w="1"/><text x="55.2268%" y="831.50"></text></g><g><title>graphgen`mio::event::event::Event::is_writable (1 samples, 0.01%)</title><rect x="54.9905%" y="837" width="0.0136%" height="15" fill="rgb(209,110,37)" fg:x="4033" fg:w="1"/><text x="55.2405%" y="847.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (2 samples, 0.03%)</title><rect x="55.0041%" y="805" width="0.0273%" height="15" fill="rgb(249,89,12)" fg:x="4034" fg:w="2"/><text x="55.2541%" y="815.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (4 samples, 0.05%)</title><rect x="55.0314%" y="805" width="0.0545%" height="15" fill="rgb(226,27,33)" fg:x="4036" fg:w="4"/><text x="55.2814%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (15 samples, 0.20%)</title><rect x="55.0859%" y="805" width="0.2045%" height="15" fill="rgb(213,82,22)" fg:x="4040" fg:w="15"/><text x="55.3359%" y="815.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (24 samples, 0.33%)</title><rect x="55.0041%" y="821" width="0.3272%" height="15" fill="rgb(248,140,0)" fg:x="4034" fg:w="24"/><text x="55.2541%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (3 samples, 0.04%)</title><rect x="55.2904%" y="805" width="0.0409%" height="15" fill="rgb(228,106,3)" fg:x="4055" fg:w="3"/><text x="55.5404%" y="815.50"></text></g><g><title>graphgen`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (26 samples, 0.35%)</title><rect x="55.0041%" y="837" width="0.3545%" height="15" fill="rgb(209,23,37)" fg:x="4034" fg:w="26"/><text x="55.2541%" y="847.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (2 samples, 0.03%)</title><rect x="55.3313%" y="821" width="0.0273%" height="15" fill="rgb(241,93,50)" fg:x="4058" fg:w="2"/><text x="55.5813%" y="831.50"></text></g><g><title>graphgen`DYLD-STUB$$pthread_mutex_lock (2 samples, 0.03%)</title><rect x="55.4813%" y="821" width="0.0273%" height="15" fill="rgb(253,46,43)" fg:x="4069" fg:w="2"/><text x="55.7313%" y="831.50"></text></g><g><title>graphgen`mio::poll::Poll::poll (6 samples, 0.08%)</title><rect x="55.5086%" y="821" width="0.0818%" height="15" fill="rgb(226,206,43)" fg:x="4071" fg:w="6"/><text x="55.7586%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (5 samples, 0.07%)</title><rect x="55.6177%" y="805" width="0.0682%" height="15" fill="rgb(217,54,7)" fg:x="4079" fg:w="5"/><text x="55.8677%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::task::raw::schedule (1 samples, 0.01%)</title><rect x="55.6858%" y="805" width="0.0136%" height="15" fill="rgb(223,5,52)" fg:x="4084" fg:w="1"/><text x="55.9358%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.01%)</title><rect x="55.6995%" y="805" width="0.0136%" height="15" fill="rgb(206,52,46)" fg:x="4085" fg:w="1"/><text x="55.9495%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="55.7131%" y="773" width="0.0136%" height="15" fill="rgb(253,136,11)" fg:x="4086" fg:w="1"/><text x="55.9631%" y="783.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;::schedule (4 samples, 0.05%)</title><rect x="55.7131%" y="789" width="0.0545%" height="15" fill="rgb(208,106,33)" fg:x="4086" fg:w="4"/><text x="55.9631%" y="799.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="55.7268%" y="773" width="0.0409%" height="15" fill="rgb(206,54,4)" fg:x="4087" fg:w="3"/><text x="55.9768%" y="783.50"></text></g><g><title>graphgen`tokio::runtime::task::raw::RawTask::from_raw (4 samples, 0.05%)</title><rect x="55.7677%" y="789" width="0.0545%" height="15" fill="rgb(213,3,15)" fg:x="4090" fg:w="4"/><text x="56.0177%" y="799.50"></text></g><g><title>graphgen`tokio::runtime::task::raw::schedule (1 samples, 0.01%)</title><rect x="55.8222%" y="789" width="0.0136%" height="15" fill="rgb(252,211,39)" fg:x="4094" fg:w="1"/><text x="56.0722%" y="799.50"></text></g><g><title>graphgen`tokio::runtime::task::waker::wake_by_val (11 samples, 0.15%)</title><rect x="55.7131%" y="805" width="0.1500%" height="15" fill="rgb(223,6,36)" fg:x="4086" fg:w="11"/><text x="55.9631%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.03%)</title><rect x="55.8358%" y="789" width="0.0273%" height="15" fill="rgb(252,169,45)" fg:x="4095" fg:w="2"/><text x="56.0858%" y="799.50"></text></g><g><title>graphgen`tokio::runtime::io::scheduled_io::ScheduledIo::wake (21 samples, 0.29%)</title><rect x="55.5904%" y="821" width="0.2863%" height="15" fill="rgb(212,48,26)" fg:x="4077" fg:w="21"/><text x="55.8404%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="55.8631%" y="805" width="0.0136%" height="15" fill="rgb(251,102,48)" fg:x="4097" fg:w="1"/><text x="56.1131%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kevent (527 samples, 7.19%)</title><rect x="55.8767%" y="821" width="7.1857%" height="15" fill="rgb(243,208,16)" fg:x="4098" fg:w="527"/><text x="56.1267%" y="831.50">libsystem_..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.04%)</title><rect x="63.0624%" y="821" width="0.0409%" height="15" fill="rgb(219,96,24)" fg:x="4625" fg:w="3"/><text x="63.3124%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::io::Driver::turn (570 samples, 7.77%)</title><rect x="55.3586%" y="837" width="7.7720%" height="15" fill="rgb(219,33,29)" fg:x="4060" fg:w="570"/><text x="55.6086%" y="847.50">graphgen`to..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="63.1034%" y="821" width="0.0273%" height="15" fill="rgb(223,176,5)" fg:x="4628" fg:w="2"/><text x="63.3534%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.03%)</title><rect x="63.1306%" y="837" width="0.0273%" height="15" fill="rgb(228,140,14)" fg:x="4630" fg:w="2"/><text x="63.3806%" y="847.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (8 samples, 0.11%)</title><rect x="63.2261%" y="821" width="0.1091%" height="15" fill="rgb(217,179,31)" fg:x="4637" fg:w="8"/><text x="63.4761%" y="831.50"></text></g><g><title> 32]&gt; (8 samples, 0.11%)</title><rect x="63.2261%" y="805" width="0.1091%" height="15" fill="rgb(230,9,30)" fg:x="4637" fg:w="8"/><text x="63.4761%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (18 samples, 0.25%)</title><rect x="63.1579%" y="837" width="0.2454%" height="15" fill="rgb(230,136,20)" fg:x="4632" fg:w="18"/><text x="63.4079%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.07%)</title><rect x="63.3352%" y="821" width="0.0682%" height="15" fill="rgb(215,210,22)" fg:x="4645" fg:w="5"/><text x="63.5852%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.03%)</title><rect x="63.3761%" y="805" width="0.0273%" height="15" fill="rgb(218,43,5)" fg:x="4648" fg:w="2"/><text x="63.6261%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.03%)</title><rect x="63.4033%" y="837" width="0.0273%" height="15" fill="rgb(216,11,5)" fg:x="4650" fg:w="2"/><text x="63.6533%" y="847.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.04%)</title><rect x="63.4306%" y="837" width="0.0409%" height="15" fill="rgb(209,82,29)" fg:x="4652" fg:w="3"/><text x="63.6806%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::time::Driver::park_internal (629 samples, 8.58%)</title><rect x="54.9223%" y="853" width="8.5765%" height="15" fill="rgb(244,115,12)" fg:x="4028" fg:w="629"/><text x="55.1723%" y="863.50">graphgen`tok..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.03%)</title><rect x="63.4715%" y="837" width="0.0273%" height="15" fill="rgb(222,82,18)" fg:x="4655" fg:w="2"/><text x="63.7215%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.01%)</title><rect x="63.4988%" y="853" width="0.0136%" height="15" fill="rgb(249,227,8)" fg:x="4657" fg:w="1"/><text x="63.7488%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::Context::park (640 samples, 8.73%)</title><rect x="54.7996%" y="869" width="8.7265%" height="15" fill="rgb(253,141,45)" fg:x="4019" fg:w="640"/><text x="55.0496%" y="879.50">graphgen`tok..</text></g><g><title>graphgen`tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.01%)</title><rect x="63.5124%" y="853" width="0.0136%" height="15" fill="rgb(234,184,4)" fg:x="4658" fg:w="1"/><text x="63.7624%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.04%)</title><rect x="63.5397%" y="853" width="0.0409%" height="15" fill="rgb(218,194,23)" fg:x="4660" fg:w="3"/><text x="63.7897%" y="863.50"></text></g><g><title>graphgen`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.04%)</title><rect x="63.6215%" y="837" width="0.0409%" height="15" fill="rgb(235,66,41)" fg:x="4666" fg:w="3"/><text x="63.8715%" y="847.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="63.6624%" y="821" width="0.0273%" height="15" fill="rgb(245,217,1)" fg:x="4669" fg:w="2"/><text x="63.9124%" y="831.50"></text></g><g><title>graphgen`reqwest::blocking::client::forward::_{{closure}} (1 samples, 0.01%)</title><rect x="63.6897%" y="821" width="0.0136%" height="15" fill="rgb(229,91,1)" fg:x="4671" fg:w="1"/><text x="63.9397%" y="831.50"></text></g><g><title>graphgen`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="63.7578%" y="789" width="0.0136%" height="15" fill="rgb(207,101,30)" fg:x="4676" fg:w="1"/><text x="64.0078%" y="799.50"></text></g><g><title>graphgen`futures_task::waker::wake_arc_raw (1 samples, 0.01%)</title><rect x="63.7578%" y="773" width="0.0136%" height="15" fill="rgb(223,82,49)" fg:x="4676" fg:w="1"/><text x="64.0078%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (1 samples, 0.01%)</title><rect x="63.7578%" y="757" width="0.0136%" height="15" fill="rgb(218,167,17)" fg:x="4676" fg:w="1"/><text x="64.0078%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (1 samples, 0.01%)</title><rect x="63.7578%" y="741" width="0.0136%" height="15" fill="rgb(208,103,14)" fg:x="4676" fg:w="1"/><text x="64.0078%" y="751.50"></text></g><g><title>graphgen`hyper::body::body::Sender::poll_ready (2 samples, 0.03%)</title><rect x="63.8806%" y="757" width="0.0273%" height="15" fill="rgb(238,20,8)" fg:x="4685" fg:w="2"/><text x="64.1306%" y="767.50"></text></g><g><title>graphgen`hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (1 samples, 0.01%)</title><rect x="63.9078%" y="757" width="0.0136%" height="15" fill="rgb(218,80,54)" fg:x="4687" fg:w="1"/><text x="64.1578%" y="767.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (3 samples, 0.04%)</title><rect x="63.9215%" y="757" width="0.0409%" height="15" fill="rgb(240,144,17)" fg:x="4688" fg:w="3"/><text x="64.1715%" y="767.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::State::is_read_closed (3 samples, 0.04%)</title><rect x="63.9624%" y="757" width="0.0409%" height="15" fill="rgb(245,27,50)" fg:x="4691" fg:w="3"/><text x="64.2124%" y="767.50"></text></g><g><title>graphgen`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="64.2760%" y="741" width="0.0136%" height="15" fill="rgb(251,51,7)" fg:x="4714" fg:w="1"/><text x="64.5260%" y="751.50"></text></g><g><title>graphgen`&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.01%)</title><rect x="64.2896%" y="741" width="0.0136%" height="15" fill="rgb(245,217,29)" fg:x="4715" fg:w="1"/><text x="64.5396%" y="751.50"></text></g><g><title>graphgen`hyper::client::dispatch::Callback&lt;T,U&gt;::send (1 samples, 0.01%)</title><rect x="64.2896%" y="725" width="0.0136%" height="15" fill="rgb(221,176,29)" fg:x="4715" fg:w="1"/><text x="64.5396%" y="735.50"></text></g><g><title>graphgen`&lt;hyper::client::dispatch::Callback&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.2896%" y="709" width="0.0136%" height="15" fill="rgb(212,180,24)" fg:x="4715" fg:w="1"/><text x="64.5396%" y="719.50"></text></g><g><title>graphgen`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (1 samples, 0.01%)</title><rect x="64.3032%" y="741" width="0.0136%" height="15" fill="rgb(254,24,2)" fg:x="4716" fg:w="1"/><text x="64.5532%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="64.3714%" y="709" width="0.0273%" height="15" fill="rgb(230,100,2)" fg:x="4721" fg:w="2"/><text x="64.6214%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="64.3714%" y="693" width="0.0273%" height="15" fill="rgb(219,142,25)" fg:x="4721" fg:w="2"/><text x="64.6214%" y="703.50"></text></g><g><title>graphgen`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (6 samples, 0.08%)</title><rect x="64.3305%" y="725" width="0.0818%" height="15" fill="rgb(240,73,43)" fg:x="4718" fg:w="6"/><text x="64.5805%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="64.3987%" y="709" width="0.0136%" height="15" fill="rgb(214,114,15)" fg:x="4723" fg:w="1"/><text x="64.6487%" y="719.50"></text></g><g><title>graphgen`hyper::body::body::Sender::poll_ready (10 samples, 0.14%)</title><rect x="64.3169%" y="741" width="0.1364%" height="15" fill="rgb(207,130,4)" fg:x="4717" fg:w="10"/><text x="64.5669%" y="751.50"></text></g><g><title>graphgen`futures_core::task::__internal::atomic_waker::AtomicWaker::register (3 samples, 0.04%)</title><rect x="64.4123%" y="725" width="0.0409%" height="15" fill="rgb(221,25,40)" fg:x="4724" fg:w="3"/><text x="64.6623%" y="735.50"></text></g><g><title>graphgen`__rust_alloc (1 samples, 0.01%)</title><rect x="64.4532%" y="725" width="0.0136%" height="15" fill="rgb(241,184,7)" fg:x="4727" fg:w="1"/><text x="64.7032%" y="735.50"></text></g><g><title>graphgen`&lt;std::sys::unix::locks::pthread_mutex::AllocatedMutex as std::sys_common::lazy_box::LazyInit&gt;::init (1 samples, 0.01%)</title><rect x="64.4941%" y="709" width="0.0136%" height="15" fill="rgb(235,159,4)" fg:x="4730" fg:w="1"/><text x="64.7441%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="64.4941%" y="693" width="0.0136%" height="15" fill="rgb(214,87,48)" fg:x="4730" fg:w="1"/><text x="64.7441%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="64.4941%" y="677" width="0.0136%" height="15" fill="rgb(246,198,24)" fg:x="4730" fg:w="1"/><text x="64.7441%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal (2 samples, 0.03%)</title><rect x="64.5078%" y="677" width="0.0273%" height="15" fill="rgb(209,66,40)" fg:x="4731" fg:w="2"/><text x="64.7578%" y="687.50"></text></g><g><title>graphgen`futures_task::waker::wake_arc_raw (53 samples, 0.72%)</title><rect x="64.5078%" y="709" width="0.7227%" height="15" fill="rgb(233,147,39)" fg:x="4731" fg:w="53"/><text x="64.7578%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (53 samples, 0.72%)</title><rect x="64.5078%" y="693" width="0.7227%" height="15" fill="rgb(231,145,52)" fg:x="4731" fg:w="53"/><text x="64.7578%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (51 samples, 0.70%)</title><rect x="64.5350%" y="677" width="0.6954%" height="15" fill="rgb(206,20,26)" fg:x="4733" fg:w="51"/><text x="64.7850%" y="687.50"></text></g><g><title>graphgen`futures_channel::mpsc::Sender&lt;T&gt;::try_send (57 samples, 0.78%)</title><rect x="64.4669%" y="725" width="0.7772%" height="15" fill="rgb(238,220,4)" fg:x="4728" fg:w="57"/><text x="64.7169%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="65.2304%" y="709" width="0.0136%" height="15" fill="rgb(252,195,42)" fg:x="4784" fg:w="1"/><text x="65.4804%" y="719.50"></text></g><g><title>graphgen`hyper::body::body::Sender::try_send_data (59 samples, 0.80%)</title><rect x="64.4532%" y="741" width="0.8045%" height="15" fill="rgb(209,10,6)" fg:x="4727" fg:w="59"/><text x="64.7032%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="65.2441%" y="725" width="0.0136%" height="15" fill="rgb(229,3,52)" fg:x="4785" fg:w="1"/><text x="65.4941%" y="735.50"></text></g><g><title>graphgen`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.03%)</title><rect x="65.2577%" y="725" width="0.0273%" height="15" fill="rgb(253,49,37)" fg:x="4786" fg:w="2"/><text x="65.5077%" y="735.50"></text></g><g><title>graphgen`hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (3 samples, 0.04%)</title><rect x="65.2577%" y="741" width="0.0409%" height="15" fill="rgb(240,103,49)" fg:x="4786" fg:w="3"/><text x="65.5077%" y="751.50"></text></g><g><title>graphgen`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.01%)</title><rect x="65.2850%" y="725" width="0.0136%" height="15" fill="rgb(250,182,30)" fg:x="4788" fg:w="1"/><text x="65.5350%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="65.2850%" y="709" width="0.0136%" height="15" fill="rgb(248,8,30)" fg:x="4788" fg:w="1"/><text x="65.5350%" y="719.50"></text></g><g><title>graphgen`&lt;http::uri::Uri as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3259%" y="693" width="0.0136%" height="15" fill="rgb(237,120,30)" fg:x="4791" fg:w="1"/><text x="65.5759%" y="703.50"></text></g><g><title>graphgen`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3531%" y="645" width="0.0136%" height="15" fill="rgb(221,146,34)" fg:x="4793" fg:w="1"/><text x="65.6031%" y="655.50"></text></g><g><title>graphgen`core::fmt::write (3 samples, 0.04%)</title><rect x="65.3395%" y="693" width="0.0409%" height="15" fill="rgb(242,55,13)" fg:x="4792" fg:w="3"/><text x="65.5895%" y="703.50"></text></g><g><title>graphgen`&lt;http::uri::Uri as core::fmt::Display&gt;::fmt (2 samples, 0.03%)</title><rect x="65.3531%" y="677" width="0.0273%" height="15" fill="rgb(242,112,31)" fg:x="4793" fg:w="2"/><text x="65.6031%" y="687.50"></text></g><g><title>graphgen`core::fmt::Formatter::write_fmt (2 samples, 0.03%)</title><rect x="65.3531%" y="661" width="0.0273%" height="15" fill="rgb(249,192,27)" fg:x="4793" fg:w="2"/><text x="65.6031%" y="671.50"></text></g><g><title>graphgen`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="65.3668%" y="645" width="0.0136%" height="15" fill="rgb(208,204,44)" fg:x="4794" fg:w="1"/><text x="65.6168%" y="655.50"></text></g><g><title>graphgen`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (7 samples, 0.10%)</title><rect x="65.2986%" y="709" width="0.0954%" height="15" fill="rgb(208,93,54)" fg:x="4789" fg:w="7"/><text x="65.5486%" y="719.50"></text></g><g><title>graphgen`http::header::map::HeaderMap&lt;T&gt;::clear (1 samples, 0.01%)</title><rect x="65.3804%" y="693" width="0.0136%" height="15" fill="rgb(242,1,31)" fg:x="4795" fg:w="1"/><text x="65.6304%" y="703.50"></text></g><g><title>graphgen`http::header::name::HeaderName::as_str (1 samples, 0.01%)</title><rect x="65.3941%" y="709" width="0.0136%" height="15" fill="rgb(241,83,25)" fg:x="4796" fg:w="1"/><text x="65.6441%" y="719.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (9 samples, 0.12%)</title><rect x="65.2986%" y="741" width="0.1227%" height="15" fill="rgb(205,169,50)" fg:x="4789" fg:w="9"/><text x="65.5486%" y="751.50"></text></g><g><title>graphgen`hyper::proto::h1::role::encode_headers (9 samples, 0.12%)</title><rect x="65.2986%" y="725" width="0.1227%" height="15" fill="rgb(239,186,37)" fg:x="4789" fg:w="9"/><text x="65.5486%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="65.4077%" y="709" width="0.0136%" height="15" fill="rgb(205,221,10)" fg:x="4797" fg:w="1"/><text x="65.6577%" y="719.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.03%)</title><rect x="65.4350%" y="725" width="0.0273%" height="15" fill="rgb(218,196,15)" fg:x="4799" fg:w="2"/><text x="65.6850%" y="735.50"></text></g><g><title>Security`SSLGetConnection (1 samples, 0.01%)</title><rect x="65.4895%" y="709" width="0.0136%" height="15" fill="rgb(218,196,35)" fg:x="4803" fg:w="1"/><text x="65.7395%" y="719.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (5 samples, 0.07%)</title><rect x="65.5031%" y="709" width="0.0682%" height="15" fill="rgb(233,63,24)" fg:x="4804" fg:w="5"/><text x="65.7531%" y="719.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (14 samples, 0.19%)</title><rect x="65.5713%" y="677" width="0.1909%" height="15" fill="rgb(225,8,4)" fg:x="4809" fg:w="14"/><text x="65.8213%" y="687.50"></text></g><g><title>graphgen`security_framework::secure_transport::write_func (14 samples, 0.19%)</title><rect x="65.5713%" y="661" width="0.1909%" height="15" fill="rgb(234,105,35)" fg:x="4809" fg:w="14"/><text x="65.8213%" y="671.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (14 samples, 0.19%)</title><rect x="65.5713%" y="645" width="0.1909%" height="15" fill="rgb(236,21,32)" fg:x="4809" fg:w="14"/><text x="65.8213%" y="655.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (14 samples, 0.19%)</title><rect x="65.5713%" y="629" width="0.1909%" height="15" fill="rgb(228,109,6)" fg:x="4809" fg:w="14"/><text x="65.8213%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (14 samples, 0.19%)</title><rect x="65.5713%" y="613" width="0.1909%" height="15" fill="rgb(229,215,31)" fg:x="4809" fg:w="14"/><text x="65.8213%" y="623.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (26 samples, 0.35%)</title><rect x="65.4213%" y="741" width="0.3545%" height="15" fill="rgb(221,52,54)" fg:x="4798" fg:w="26"/><text x="65.6713%" y="751.50"></text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (23 samples, 0.31%)</title><rect x="65.4622%" y="725" width="0.3136%" height="15" fill="rgb(252,129,43)" fg:x="4801" fg:w="23"/><text x="65.7122%" y="735.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (15 samples, 0.20%)</title><rect x="65.5713%" y="709" width="0.2045%" height="15" fill="rgb(248,183,27)" fg:x="4809" fg:w="15"/><text x="65.8213%" y="719.50"></text></g><g><title>Security`SSLWrite (15 samples, 0.20%)</title><rect x="65.5713%" y="693" width="0.2045%" height="15" fill="rgb(250,0,22)" fg:x="4809" fg:w="15"/><text x="65.8213%" y="703.50"></text></g><g><title>Security`SSLRecordWriteInternal (1 samples, 0.01%)</title><rect x="65.7622%" y="677" width="0.0136%" height="15" fill="rgb(213,166,10)" fg:x="4823" fg:w="1"/><text x="66.0122%" y="687.50"></text></g><g><title>libcoretls.dylib`tls_record_encrypt (1 samples, 0.01%)</title><rect x="65.7622%" y="661" width="0.0136%" height="15" fill="rgb(207,163,36)" fg:x="4823" fg:w="1"/><text x="66.0122%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.01%)</title><rect x="65.7622%" y="645" width="0.0136%" height="15" fill="rgb(208,122,22)" fg:x="4823" fg:w="1"/><text x="66.0122%" y="655.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.07%)</title><rect x="65.8304%" y="693" width="0.0682%" height="15" fill="rgb(207,104,49)" fg:x="4828" fg:w="5"/><text x="66.0804%" y="703.50"></text></g><g><title>graphgen`bytes::buf::uninit_slice::UninitSlice::from_slice (1 samples, 0.01%)</title><rect x="65.8986%" y="693" width="0.0136%" height="15" fill="rgb(248,211,50)" fg:x="4833" fg:w="1"/><text x="66.1486%" y="703.50"></text></g><g><title>Security`SSLGetBufferedReadSize (1 samples, 0.01%)</title><rect x="65.9258%" y="677" width="0.0136%" height="15" fill="rgb(217,13,45)" fg:x="4835" fg:w="1"/><text x="66.1758%" y="687.50"></text></g><g><title>Security`SSLGetConnection (4 samples, 0.05%)</title><rect x="65.9395%" y="677" width="0.0545%" height="15" fill="rgb(211,216,49)" fg:x="4836" fg:w="4"/><text x="66.1895%" y="687.50"></text></g><g><title>Security`SSLRead (2 samples, 0.03%)</title><rect x="65.9940%" y="677" width="0.0273%" height="15" fill="rgb(221,58,53)" fg:x="4840" fg:w="2"/><text x="66.2440%" y="687.50"></text></g><g><title>Security`DYLD-STUB$$tls_handshake_continue (4 samples, 0.05%)</title><rect x="66.2122%" y="661" width="0.0545%" height="15" fill="rgb(220,112,41)" fg:x="4856" fg:w="4"/><text x="66.4622%" y="671.50"></text></g><g><title>Security`SSLRecordFreeInternal (2 samples, 0.03%)</title><rect x="66.2803%" y="645" width="0.0273%" height="15" fill="rgb(236,38,28)" fg:x="4861" fg:w="2"/><text x="66.5303%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.03%)</title><rect x="66.2803%" y="629" width="0.0273%" height="15" fill="rgb(227,195,22)" fg:x="4861" fg:w="2"/><text x="66.5303%" y="639.50"></text></g><g><title>graphgen`DYLD-STUB$$recv (1 samples, 0.01%)</title><rect x="66.4303%" y="565" width="0.0136%" height="15" fill="rgb(214,55,33)" fg:x="4872" fg:w="1"/><text x="66.6803%" y="575.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (1 samples, 0.01%)</title><rect x="66.4440%" y="565" width="0.0136%" height="15" fill="rgb(248,80,13)" fg:x="4873" fg:w="1"/><text x="66.6940%" y="575.50"></text></g><g><title>libsystem_c.dylib`recv (4 samples, 0.05%)</title><rect x="66.4576%" y="565" width="0.0545%" height="15" fill="rgb(238,52,6)" fg:x="4874" fg:w="4"/><text x="66.7076%" y="575.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (943 samples, 12.86%)</title><rect x="66.4031%" y="581" width="12.8579%" height="15" fill="rgb(224,198,47)" fg:x="4870" fg:w="943"/><text x="66.6531%" y="591.50">graphgen`&lt;&amp;mio::net..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (935 samples, 12.75%)</title><rect x="66.5121%" y="565" width="12.7488%" height="15" fill="rgb(233,171,20)" fg:x="4878" fg:w="935"/><text x="66.7621%" y="575.50">libsystem_kernel.dy..</text></g><g><title>graphgen`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.03%)</title><rect x="79.2610%" y="581" width="0.0273%" height="15" fill="rgb(241,30,25)" fg:x="5813" fg:w="2"/><text x="79.5110%" y="591.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (951 samples, 12.97%)</title><rect x="66.3621%" y="613" width="12.9670%" height="15" fill="rgb(207,171,38)" fg:x="4867" fg:w="951"/><text x="66.6121%" y="623.50">graphgen`&lt;tokio_nat..</text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (951 samples, 12.97%)</title><rect x="66.3621%" y="597" width="12.9670%" height="15" fill="rgb(234,70,1)" fg:x="4867" fg:w="951"/><text x="66.6121%" y="607.50">graphgen`tokio::io:..</text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="79.2882%" y="581" width="0.0409%" height="15" fill="rgb(232,178,18)" fg:x="5815" fg:w="3"/><text x="79.5382%" y="591.50"></text></g><g><title>graphgen`security_framework::secure_transport::read_func (955 samples, 13.02%)</title><rect x="66.3485%" y="629" width="13.0215%" height="15" fill="rgb(241,78,40)" fg:x="4866" fg:w="955"/><text x="66.5985%" y="639.50">graphgen`security_fr..</text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.04%)</title><rect x="79.3292%" y="613" width="0.0409%" height="15" fill="rgb(222,35,25)" fg:x="5818" fg:w="3"/><text x="79.5792%" y="623.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADSetIV (1 samples, 0.01%)</title><rect x="79.3701%" y="629" width="0.0136%" height="15" fill="rgb(207,92,16)" fg:x="5821" fg:w="1"/><text x="79.6201%" y="639.50"></text></g><g><title>libcoretls.dylib`DYLD-STUB$$ccgcm_gmac (1 samples, 0.01%)</title><rect x="79.3837%" y="629" width="0.0136%" height="15" fill="rgb(216,59,51)" fg:x="5822" fg:w="1"/><text x="79.6337%" y="639.50"></text></g><g><title>libcoretls.dylib`DYLD-STUB$$ccgcm_init_with_iv (1 samples, 0.01%)</title><rect x="79.3973%" y="629" width="0.0136%" height="15" fill="rgb(213,80,28)" fg:x="5823" fg:w="1"/><text x="79.6473%" y="639.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.01%)</title><rect x="79.4110%" y="613" width="0.0136%" height="15" fill="rgb(220,93,7)" fg:x="5824" fg:w="1"/><text x="79.6610%" y="623.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_ecb_AES_encrypt (1 samples, 0.01%)</title><rect x="79.4382%" y="581" width="0.0136%" height="15" fill="rgb(225,24,44)" fg:x="5826" fg:w="1"/><text x="79.6882%" y="591.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (5 samples, 0.07%)</title><rect x="79.4519%" y="581" width="0.0682%" height="15" fill="rgb(243,74,40)" fg:x="5827" fg:w="5"/><text x="79.7019%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_key (1 samples, 0.01%)</title><rect x="79.5200%" y="581" width="0.0136%" height="15" fill="rgb(228,39,7)" fg:x="5832" fg:w="1"/><text x="79.7700%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_key256 (1 samples, 0.01%)</title><rect x="79.5337%" y="581" width="0.0136%" height="15" fill="rgb(227,79,8)" fg:x="5833" fg:w="1"/><text x="79.7837%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_key_with_key_length_check (1 samples, 0.01%)</title><rect x="79.5473%" y="581" width="0.0136%" height="15" fill="rgb(236,58,11)" fg:x="5834" fg:w="1"/><text x="79.7973%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init (10 samples, 0.14%)</title><rect x="79.4382%" y="597" width="0.1364%" height="15" fill="rgb(249,63,35)" fg:x="5826" fg:w="10"/><text x="79.6882%" y="607.50"></text></g><g><title>libcorecrypto.dylib`gcm_init (1 samples, 0.01%)</title><rect x="79.5609%" y="581" width="0.0136%" height="15" fill="rgb(252,114,16)" fg:x="5835" fg:w="1"/><text x="79.8109%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (12 samples, 0.16%)</title><rect x="79.4246%" y="613" width="0.1636%" height="15" fill="rgb(254,151,24)" fg:x="5825" fg:w="12"/><text x="79.6746%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_set_iv (1 samples, 0.01%)</title><rect x="79.5746%" y="597" width="0.0136%" height="15" fill="rgb(253,54,39)" fg:x="5836" fg:w="1"/><text x="79.8246%" y="607.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (1 samples, 0.01%)</title><rect x="79.5882%" y="613" width="0.0136%" height="15" fill="rgb(243,25,45)" fg:x="5837" fg:w="1"/><text x="79.8382%" y="623.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADSetIV (1 samples, 0.01%)</title><rect x="79.6019%" y="613" width="0.0136%" height="15" fill="rgb(234,134,9)" fg:x="5838" fg:w="1"/><text x="79.8519%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_finalize (1 samples, 0.01%)</title><rect x="79.6155%" y="581" width="0.0136%" height="15" fill="rgb(227,166,31)" fg:x="5839" fg:w="1"/><text x="79.8655%" y="591.50"></text></g><g><title>libcorecrypto.dylib`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="79.6155%" y="565" width="0.0136%" height="15" fill="rgb(245,143,41)" fg:x="5839" fg:w="1"/><text x="79.8655%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_reset (2 samples, 0.03%)</title><rect x="79.6291%" y="581" width="0.0273%" height="15" fill="rgb(238,181,32)" fg:x="5840" fg:w="2"/><text x="79.8791%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_reset (2 samples, 0.03%)</title><rect x="79.6291%" y="565" width="0.0273%" height="15" fill="rgb(224,113,18)" fg:x="5840" fg:w="2"/><text x="79.8791%" y="575.50"></text></g><g><title>libcorecrypto.dylib`cc_clear (2 samples, 0.03%)</title><rect x="79.6291%" y="549" width="0.0273%" height="15" fill="rgb(240,229,28)" fg:x="5840" fg:w="2"/><text x="79.8791%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="79.6428%" y="533" width="0.0136%" height="15" fill="rgb(250,185,3)" fg:x="5841" fg:w="1"/><text x="79.8928%" y="543.50"></text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop (47 samples, 0.64%)</title><rect x="79.6564%" y="565" width="0.6409%" height="15" fill="rgb(212,59,25)" fg:x="5842" fg:w="47"/><text x="79.9064%" y="575.50"></text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop_End (1 samples, 0.01%)</title><rect x="80.2972%" y="565" width="0.0136%" height="15" fill="rgb(221,87,20)" fg:x="5889" fg:w="1"/><text x="80.5472%" y="575.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (67 samples, 0.91%)</title><rect x="79.4110%" y="629" width="0.9136%" height="15" fill="rgb(213,74,28)" fg:x="5824" fg:w="67"/><text x="79.6610%" y="639.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (52 samples, 0.71%)</title><rect x="79.6155%" y="613" width="0.7090%" height="15" fill="rgb(224,132,34)" fg:x="5839" fg:w="52"/><text x="79.8655%" y="623.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (52 samples, 0.71%)</title><rect x="79.6155%" y="597" width="0.7090%" height="15" fill="rgb(222,101,24)" fg:x="5839" fg:w="52"/><text x="79.8655%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_update (49 samples, 0.67%)</title><rect x="79.6564%" y="581" width="0.6681%" height="15" fill="rgb(254,142,4)" fg:x="5842" fg:w="49"/><text x="79.9064%" y="591.50"></text></g><g><title>libcorecrypto.dylib`gcmDecrypt (1 samples, 0.01%)</title><rect x="80.3109%" y="565" width="0.0136%" height="15" fill="rgb(230,229,49)" fg:x="5890" fg:w="1"/><text x="80.5609%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="80.3245%" y="629" width="0.0409%" height="15" fill="rgb(238,70,47)" fg:x="5891" fg:w="3"/><text x="80.5745%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.04%)</title><rect x="80.3245%" y="613" width="0.0409%" height="15" fill="rgb(231,160,17)" fg:x="5891" fg:w="3"/><text x="80.5745%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="80.3382%" y="597" width="0.0273%" height="15" fill="rgb(218,68,53)" fg:x="5892" fg:w="2"/><text x="80.5882%" y="607.50"></text></g><g><title>Security`SSLRecordReadInternal (1,039 samples, 14.17%)</title><rect x="66.3076%" y="645" width="14.1669%" height="15" fill="rgb(236,111,10)" fg:x="4863" fg:w="1039"/><text x="66.5576%" y="655.50">Security`SSLRecordRead..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.11%)</title><rect x="80.3654%" y="629" width="0.1091%" height="15" fill="rgb(224,34,41)" fg:x="5894" fg:w="8"/><text x="80.6154%" y="639.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (2 samples, 0.03%)</title><rect x="80.4745%" y="645" width="0.0273%" height="15" fill="rgb(241,118,19)" fg:x="5902" fg:w="2"/><text x="80.7245%" y="655.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypted_size (1 samples, 0.01%)</title><rect x="80.5018%" y="645" width="0.0136%" height="15" fill="rgb(238,129,25)" fg:x="5904" fg:w="1"/><text x="80.7518%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="80.5154%" y="645" width="0.0409%" height="15" fill="rgb(238,22,31)" fg:x="5905" fg:w="3"/><text x="80.7654%" y="655.50"></text></g><g><title>Security`SSLRead (1,050 samples, 14.32%)</title><rect x="66.2667%" y="661" width="14.3169%" height="15" fill="rgb(222,174,48)" fg:x="4860" fg:w="1050"/><text x="66.5167%" y="671.50">Security`SSLRead</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="80.5563%" y="645" width="0.0273%" height="15" fill="rgb(206,152,40)" fg:x="5908" fg:w="2"/><text x="80.8063%" y="655.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (1 samples, 0.01%)</title><rect x="80.5836%" y="661" width="0.0136%" height="15" fill="rgb(218,99,54)" fg:x="5910" fg:w="1"/><text x="80.8336%" y="671.50"></text></g><g><title>graphgen`security_framework::secure_transport::SslStream&lt;S&gt;::check_panic (1 samples, 0.01%)</title><rect x="80.5972%" y="661" width="0.0136%" height="15" fill="rgb(220,174,26)" fg:x="5911" fg:w="1"/><text x="80.8472%" y="671.50"></text></g><g><title>graphgen`security_framework::secure_transport::SslStream&lt;S&gt;::get_error (4 samples, 0.05%)</title><rect x="80.6109%" y="661" width="0.0545%" height="15" fill="rgb(245,116,9)" fg:x="5912" fg:w="4"/><text x="80.8609%" y="671.50"></text></g><g><title>graphgen`security_framework::secure_transport::SslStream&lt;S&gt;::check_panic (3 samples, 0.04%)</title><rect x="80.6245%" y="645" width="0.0409%" height="15" fill="rgb(209,72,35)" fg:x="5913" fg:w="3"/><text x="80.8745%" y="655.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (4 samples, 0.05%)</title><rect x="80.6654%" y="661" width="0.0545%" height="15" fill="rgb(226,126,21)" fg:x="5916" fg:w="4"/><text x="80.9154%" y="671.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,086 samples, 14.81%)</title><rect x="66.0213%" y="677" width="14.8077%" height="15" fill="rgb(227,192,1)" fg:x="4842" fg:w="1086"/><text x="66.2713%" y="687.50">graphgen`&lt;tokio_native_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.11%)</title><rect x="80.7199%" y="661" width="0.1091%" height="15" fill="rgb(237,180,29)" fg:x="5920" fg:w="8"/><text x="80.9699%" y="671.50"></text></g><g><title>graphgen`DYLD-STUB$$SSLGetBufferedReadSize (1 samples, 0.01%)</title><rect x="80.8290%" y="677" width="0.0136%" height="15" fill="rgb(230,197,35)" fg:x="5928" fg:w="1"/><text x="81.0790%" y="687.50"></text></g><g><title>graphgen`DYLD-STUB$$SSLGetConnection (2 samples, 0.03%)</title><rect x="80.8427%" y="677" width="0.0273%" height="15" fill="rgb(246,193,31)" fg:x="5929" fg:w="2"/><text x="81.0927%" y="687.50"></text></g><g><title>graphgen`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="80.8699%" y="677" width="0.0136%" height="15" fill="rgb(241,36,4)" fg:x="5931" fg:w="1"/><text x="81.1199%" y="687.50"></text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,154 samples, 15.73%)</title><rect x="65.9122%" y="693" width="15.7349%" height="15" fill="rgb(241,130,17)" fg:x="4834" fg:w="1154"/><text x="66.1622%" y="703.50">graphgen`hyper::proto::h..</text></g><g><title>libsystem_platform.dylib`_platform_memset (56 samples, 0.76%)</title><rect x="80.8836%" y="677" width="0.7636%" height="15" fill="rgb(206,137,32)" fg:x="5932" fg:w="56"/><text x="81.1336%" y="687.50"></text></g><g><title>graphgen`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (1,161 samples, 15.83%)</title><rect x="65.8304%" y="709" width="15.8304%" height="15" fill="rgb(237,228,51)" fg:x="4828" fg:w="1161"/><text x="66.0804%" y="719.50">graphgen`&lt;hyper::proto::..</text></g><g><title>graphgen`hyper::proto::h1::io::ReadStrategy::next (1 samples, 0.01%)</title><rect x="81.6471%" y="693" width="0.0136%" height="15" fill="rgb(243,6,42)" fg:x="5988" fg:w="1"/><text x="81.8971%" y="703.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (1,169 samples, 15.94%)</title><rect x="65.7758%" y="741" width="15.9395%" height="15" fill="rgb(251,74,28)" fg:x="4824" fg:w="1169"/><text x="66.0258%" y="751.50">graphgen`hyper::proto::h1..</text></g><g><title>graphgen`hyper::proto::h1::decode::Decoder::decode (1,167 samples, 15.91%)</title><rect x="65.8031%" y="725" width="15.9122%" height="15" fill="rgb(218,20,49)" fg:x="4826" fg:w="1167"/><text x="66.0531%" y="735.50">graphgen`hyper::proto::h..</text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (4 samples, 0.05%)</title><rect x="81.6608%" y="709" width="0.0545%" height="15" fill="rgb(238,28,14)" fg:x="5989" fg:w="4"/><text x="81.9108%" y="719.50"></text></g><g><title>graphgen`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (1 samples, 0.01%)</title><rect x="81.7153%" y="725" width="0.0136%" height="15" fill="rgb(229,40,46)" fg:x="5993" fg:w="1"/><text x="81.9653%" y="735.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.01%)</title><rect x="81.7289%" y="709" width="0.0136%" height="15" fill="rgb(244,195,20)" fg:x="5994" fg:w="1"/><text x="81.9789%" y="719.50"></text></g><g><title>Security`SSLGetConnection (1 samples, 0.01%)</title><rect x="81.7562%" y="693" width="0.0136%" height="15" fill="rgb(253,56,35)" fg:x="5996" fg:w="1"/><text x="82.0062%" y="703.50"></text></g><g><title>Security`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="81.7698%" y="677" width="0.0136%" height="15" fill="rgb(210,149,44)" fg:x="5997" fg:w="1"/><text x="82.0198%" y="687.50"></text></g><g><title>Security`DYLD-STUB$$tls_record_get_header_size (1 samples, 0.01%)</title><rect x="81.7835%" y="661" width="0.0136%" height="15" fill="rgb(240,135,12)" fg:x="5998" fg:w="1"/><text x="82.0335%" y="671.50"></text></g><g><title>graphgen`security_framework::secure_transport::read_func (44 samples, 0.60%)</title><rect x="81.7971%" y="645" width="0.5999%" height="15" fill="rgb(251,24,50)" fg:x="5999" fg:w="44"/><text x="82.0471%" y="655.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (44 samples, 0.60%)</title><rect x="81.7971%" y="629" width="0.5999%" height="15" fill="rgb(243,200,47)" fg:x="5999" fg:w="44"/><text x="82.0471%" y="639.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (44 samples, 0.60%)</title><rect x="81.7971%" y="613" width="0.5999%" height="15" fill="rgb(224,166,26)" fg:x="5999" fg:w="44"/><text x="82.0471%" y="623.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (44 samples, 0.60%)</title><rect x="81.7971%" y="597" width="0.5999%" height="15" fill="rgb(233,0,47)" fg:x="5999" fg:w="44"/><text x="82.0471%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (44 samples, 0.60%)</title><rect x="81.7971%" y="581" width="0.5999%" height="15" fill="rgb(253,80,5)" fg:x="5999" fg:w="44"/><text x="82.0471%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_gmac (1 samples, 0.01%)</title><rect x="82.3971%" y="629" width="0.0136%" height="15" fill="rgb(214,133,25)" fg:x="6043" fg:w="1"/><text x="82.6471%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccmode_gcm_aad (1 samples, 0.01%)</title><rect x="82.3971%" y="613" width="0.0136%" height="15" fill="rgb(209,27,14)" fg:x="6043" fg:w="1"/><text x="82.6471%" y="623.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (1 samples, 0.01%)</title><rect x="82.4107%" y="597" width="0.0136%" height="15" fill="rgb(219,102,51)" fg:x="6044" fg:w="1"/><text x="82.6607%" y="607.50"></text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (51 samples, 0.70%)</title><rect x="81.7426%" y="709" width="0.6954%" height="15" fill="rgb(237,18,16)" fg:x="5995" fg:w="51"/><text x="81.9926%" y="719.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (49 samples, 0.67%)</title><rect x="81.7698%" y="693" width="0.6681%" height="15" fill="rgb(241,85,17)" fg:x="5997" fg:w="49"/><text x="82.0198%" y="703.50"></text></g><g><title>Security`SSLRead (48 samples, 0.65%)</title><rect x="81.7835%" y="677" width="0.6545%" height="15" fill="rgb(236,90,42)" fg:x="5998" fg:w="48"/><text x="82.0335%" y="687.50"></text></g><g><title>Security`SSLRecordReadInternal (47 samples, 0.64%)</title><rect x="81.7971%" y="661" width="0.6409%" height="15" fill="rgb(249,57,21)" fg:x="5999" fg:w="47"/><text x="82.0471%" y="671.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (3 samples, 0.04%)</title><rect x="82.3971%" y="645" width="0.0409%" height="15" fill="rgb(243,12,36)" fg:x="6043" fg:w="3"/><text x="82.6471%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (2 samples, 0.03%)</title><rect x="82.4107%" y="629" width="0.0273%" height="15" fill="rgb(253,128,47)" fg:x="6044" fg:w="2"/><text x="82.6607%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init (2 samples, 0.03%)</title><rect x="82.4107%" y="613" width="0.0273%" height="15" fill="rgb(207,33,20)" fg:x="6044" fg:w="2"/><text x="82.6607%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccaes_arm_encrypt_key256 (1 samples, 0.01%)</title><rect x="82.4243%" y="597" width="0.0136%" height="15" fill="rgb(233,215,35)" fg:x="6045" fg:w="1"/><text x="82.6743%" y="607.50"></text></g><g><title>graphgen`__rust_alloc (1 samples, 0.01%)</title><rect x="82.4380%" y="677" width="0.0136%" height="15" fill="rgb(249,188,52)" fg:x="6046" fg:w="1"/><text x="82.6880%" y="687.50"></text></g><g><title>graphgen`http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.01%)</title><rect x="82.4516%" y="677" width="0.0136%" height="15" fill="rgb(225,12,32)" fg:x="6047" fg:w="1"/><text x="82.7016%" y="687.50"></text></g><g><title>graphgen`http::header::map::HeaderMap&lt;T&gt;::get_all (1 samples, 0.01%)</title><rect x="82.4652%" y="677" width="0.0136%" height="15" fill="rgb(247,98,14)" fg:x="6048" fg:w="1"/><text x="82.7152%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="82.4789%" y="661" width="0.0136%" height="15" fill="rgb(247,219,48)" fg:x="6049" fg:w="1"/><text x="82.7289%" y="671.50"></text></g><g><title>graphgen`http::header::map::HeaderMap&lt;T&gt;::reserve (2 samples, 0.03%)</title><rect x="82.4789%" y="677" width="0.0273%" height="15" fill="rgb(253,60,48)" fg:x="6049" fg:w="2"/><text x="82.7289%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.4925%" y="661" width="0.0136%" height="15" fill="rgb(245,15,52)" fg:x="6050" fg:w="1"/><text x="82.7425%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.4925%" y="645" width="0.0136%" height="15" fill="rgb(220,133,28)" fg:x="6050" fg:w="1"/><text x="82.7425%" y="655.50"></text></g><g><title>graphgen`http::header::name::StandardHeader::from_bytes (1 samples, 0.01%)</title><rect x="82.5061%" y="677" width="0.0136%" height="15" fill="rgb(217,180,4)" fg:x="6051" fg:w="1"/><text x="82.7561%" y="687.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (60 samples, 0.82%)</title><rect x="81.7153%" y="741" width="0.8181%" height="15" fill="rgb(251,24,1)" fg:x="5993" fg:w="60"/><text x="81.9653%" y="751.50"></text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (59 samples, 0.80%)</title><rect x="81.7289%" y="725" width="0.8045%" height="15" fill="rgb(212,185,49)" fg:x="5994" fg:w="59"/><text x="81.9789%" y="735.50"></text></g><g><title>graphgen`hyper::proto::h1::role::parse_headers (7 samples, 0.10%)</title><rect x="82.4380%" y="709" width="0.0954%" height="15" fill="rgb(215,175,22)" fg:x="6046" fg:w="7"/><text x="82.6880%" y="719.50"></text></g><g><title>graphgen`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (7 samples, 0.10%)</title><rect x="82.4380%" y="693" width="0.0954%" height="15" fill="rgb(250,205,14)" fg:x="6046" fg:w="7"/><text x="82.6880%" y="703.50"></text></g><g><title>graphgen`httparse::Response::parse_with_config_and_uninit_headers (1 samples, 0.01%)</title><rect x="82.5198%" y="677" width="0.0136%" height="15" fill="rgb(225,211,22)" fg:x="6052" fg:w="1"/><text x="82.7698%" y="687.50"></text></g><g><title>graphgen`httparse::parse_headers_iter_uninit (1 samples, 0.01%)</title><rect x="82.5198%" y="661" width="0.0136%" height="15" fill="rgb(251,179,42)" fg:x="6052" fg:w="1"/><text x="82.7698%" y="671.50"></text></g><g><title>Security`SSLRead (1 samples, 0.01%)</title><rect x="82.5334%" y="693" width="0.0136%" height="15" fill="rgb(208,216,51)" fg:x="6053" fg:w="1"/><text x="82.7834%" y="703.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.01%)</title><rect x="82.5470%" y="693" width="0.0136%" height="15" fill="rgb(235,36,11)" fg:x="6054" fg:w="1"/><text x="82.7970%" y="703.50"></text></g><g><title>Security`SSLRead (1 samples, 0.01%)</title><rect x="82.5470%" y="677" width="0.0136%" height="15" fill="rgb(213,189,28)" fg:x="6054" fg:w="1"/><text x="82.7970%" y="687.50"></text></g><g><title>graphgen`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.01%)</title><rect x="82.5607%" y="693" width="0.0136%" height="15" fill="rgb(227,203,42)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="703.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="82.5607%" y="677" width="0.0136%" height="15" fill="rgb(244,72,36)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="687.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="82.5607%" y="661" width="0.0136%" height="15" fill="rgb(213,53,17)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.5607%" y="645" width="0.0136%" height="15" fill="rgb(207,167,3)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.5607%" y="629" width="0.0136%" height="15" fill="rgb(216,98,30)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="82.5607%" y="613" width="0.0136%" height="15" fill="rgb(236,123,15)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="82.5607%" y="597" width="0.0136%" height="15" fill="rgb(248,81,50)" fg:x="6055" fg:w="1"/><text x="82.8107%" y="607.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (5 samples, 0.07%)</title><rect x="82.5334%" y="741" width="0.0682%" height="15" fill="rgb(214,120,4)" fg:x="6053" fg:w="5"/><text x="82.7834%" y="751.50"></text></g><g><title>graphgen`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (5 samples, 0.07%)</title><rect x="82.5334%" y="725" width="0.0682%" height="15" fill="rgb(208,179,34)" fg:x="6053" fg:w="5"/><text x="82.7834%" y="735.50"></text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (5 samples, 0.07%)</title><rect x="82.5334%" y="709" width="0.0682%" height="15" fill="rgb(227,140,7)" fg:x="6053" fg:w="5"/><text x="82.7834%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="82.5743%" y="693" width="0.0273%" height="15" fill="rgb(214,22,6)" fg:x="6056" fg:w="2"/><text x="82.8243%" y="703.50"></text></g><g><title>graphgen`hyper::proto::h1::decode::Decoder::is_eof (2 samples, 0.03%)</title><rect x="82.6016%" y="741" width="0.0273%" height="15" fill="rgb(207,137,27)" fg:x="6058" fg:w="2"/><text x="82.8516%" y="751.50"></text></g><g><title>graphgen`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (1,381 samples, 18.83%)</title><rect x="63.8124%" y="773" width="18.8301%" height="15" fill="rgb(210,8,46)" fg:x="4680" fg:w="1381"/><text x="64.0624%" y="783.50">graphgen`&lt;hyper::client::conn..</text></g><g><title>graphgen`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1,367 samples, 18.64%)</title><rect x="64.0033%" y="757" width="18.6392%" height="15" fill="rgb(240,16,54)" fg:x="4694" fg:w="1367"/><text x="64.2533%" y="767.50">graphgen`hyper::proto::h1::di..</text></g><g><title>graphgen`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.01%)</title><rect x="82.6289%" y="741" width="0.0136%" height="15" fill="rgb(211,209,29)" fg:x="6060" fg:w="1"/><text x="82.8789%" y="751.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,387 samples, 18.91%)</title><rect x="63.7715%" y="789" width="18.9119%" height="15" fill="rgb(226,228,24)" fg:x="4677" fg:w="1387"/><text x="64.0215%" y="799.50">graphgen`&lt;futures_util::future..</text></g><g><title>graphgen`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.04%)</title><rect x="82.6425%" y="773" width="0.0409%" height="15" fill="rgb(222,84,9)" fg:x="6061" fg:w="3"/><text x="82.8925%" y="783.50"></text></g><g><title>graphgen`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="82.6834%" y="789" width="0.0409%" height="15" fill="rgb(234,203,30)" fg:x="6064" fg:w="3"/><text x="82.9334%" y="799.50"></text></g><g><title>graphgen`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="82.7243%" y="741" width="0.0136%" height="15" fill="rgb(238,109,14)" fg:x="6067" fg:w="1"/><text x="82.9743%" y="751.50"></text></g><g><title>graphgen`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="82.7243%" y="725" width="0.0136%" height="15" fill="rgb(233,206,34)" fg:x="6067" fg:w="1"/><text x="82.9743%" y="735.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,395 samples, 19.02%)</title><rect x="63.7306%" y="805" width="19.0210%" height="15" fill="rgb(220,167,47)" fg:x="4674" fg:w="1395"/><text x="63.9806%" y="815.50">graphgen`&lt;futures_util::future..</text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="82.7243%" y="789" width="0.0273%" height="15" fill="rgb(238,105,10)" fg:x="6067" fg:w="2"/><text x="82.9743%" y="799.50"></text></g><g><title>graphgen`&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="82.7243%" y="773" width="0.0273%" height="15" fill="rgb(213,227,17)" fg:x="6067" fg:w="2"/><text x="82.9743%" y="783.50"></text></g><g><title>graphgen`hyper::client::pool::PoolInner&lt;T&gt;::put (2 samples, 0.03%)</title><rect x="82.7243%" y="757" width="0.0273%" height="15" fill="rgb(217,132,38)" fg:x="6067" fg:w="2"/><text x="82.9743%" y="767.50"></text></g><g><title>graphgen`hyper::common::exec::Exec::execute (1 samples, 0.01%)</title><rect x="82.7379%" y="741" width="0.0136%" height="15" fill="rgb(242,146,4)" fg:x="6068" fg:w="1"/><text x="82.9879%" y="751.50"></text></g><g><title>graphgen`tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="82.7379%" y="725" width="0.0136%" height="15" fill="rgb(212,61,9)" fg:x="6068" fg:w="1"/><text x="82.9879%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="82.7379%" y="709" width="0.0136%" height="15" fill="rgb(247,126,22)" fg:x="6068" fg:w="1"/><text x="82.9879%" y="719.50"></text></g><g><title>graphgen`&lt;hyper::client::pool::IdleTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="82.7516%" y="805" width="0.0136%" height="15" fill="rgb(220,196,2)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="815.50"></text></g><g><title>graphgen`tokio::time::interval::Interval::poll_tick (1 samples, 0.01%)</title><rect x="82.7516%" y="789" width="0.0136%" height="15" fill="rgb(208,46,4)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="799.50"></text></g><g><title>graphgen`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="82.7516%" y="773" width="0.0136%" height="15" fill="rgb(252,104,46)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="783.50"></text></g><g><title>graphgen`tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.01%)</title><rect x="82.7516%" y="757" width="0.0136%" height="15" fill="rgb(237,152,48)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="767.50"></text></g><g><title>graphgen`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.01%)</title><rect x="82.7516%" y="741" width="0.0136%" height="15" fill="rgb(221,59,37)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="82.7516%" y="725" width="0.0136%" height="15" fill="rgb(209,202,51)" fg:x="6069" fg:w="1"/><text x="83.0016%" y="735.50"></text></g><g><title>graphgen`&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="82.7652%" y="789" width="0.0136%" height="15" fill="rgb(228,81,30)" fg:x="6070" fg:w="1"/><text x="83.0152%" y="799.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.01%)</title><rect x="82.7925%" y="773" width="0.0136%" height="15" fill="rgb(227,42,39)" fg:x="6072" fg:w="1"/><text x="83.0425%" y="783.50"></text></g><g><title>graphgen`&lt;hyper::client::client::PoolClient&lt;B&gt; as hyper::client::pool::Poolable&gt;::reserve (1 samples, 0.01%)</title><rect x="82.8334%" y="709" width="0.0136%" height="15" fill="rgb(221,26,2)" fg:x="6075" fg:w="1"/><text x="83.0834%" y="719.50"></text></g><g><title>graphgen`hyper::common::exec::Exec::execute (1 samples, 0.01%)</title><rect x="82.8470%" y="709" width="0.0136%" height="15" fill="rgb(254,61,31)" fg:x="6076" fg:w="1"/><text x="83.0970%" y="719.50"></text></g><g><title>graphgen`tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="82.8470%" y="693" width="0.0136%" height="15" fill="rgb(222,173,38)" fg:x="6076" fg:w="1"/><text x="83.0970%" y="703.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::Handle::spawn (1 samples, 0.01%)</title><rect x="82.8470%" y="677" width="0.0136%" height="15" fill="rgb(218,50,12)" fg:x="6076" fg:w="1"/><text x="83.0970%" y="687.50"></text></g><g><title>graphgen`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.01%)</title><rect x="82.8470%" y="661" width="0.0136%" height="15" fill="rgb(223,88,40)" fg:x="6076" fg:w="1"/><text x="83.0970%" y="671.50"></text></g><g><title>graphgen`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="82.8334%" y="725" width="0.0409%" height="15" fill="rgb(237,54,19)" fg:x="6075" fg:w="3"/><text x="83.0834%" y="735.50"></text></g><g><title>graphgen`tokio::sync::mpsc::chan::channel (1 samples, 0.01%)</title><rect x="82.8606%" y="709" width="0.0136%" height="15" fill="rgb(251,129,25)" fg:x="6077" fg:w="1"/><text x="83.1106%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.8606%" y="693" width="0.0136%" height="15" fill="rgb(238,97,19)" fg:x="6077" fg:w="1"/><text x="83.1106%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="82.8606%" y="677" width="0.0136%" height="15" fill="rgb(240,169,18)" fg:x="6077" fg:w="1"/><text x="83.1106%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="82.8606%" y="661" width="0.0136%" height="15" fill="rgb(230,187,49)" fg:x="6077" fg:w="1"/><text x="83.1106%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="82.8606%" y="645" width="0.0136%" height="15" fill="rgb(209,44,26)" fg:x="6077" fg:w="1"/><text x="83.1106%" y="655.50"></text></g><g><title>graphgen`hyper::client::connect::http::_&lt;impl hyper::client::connect::Connection for tokio::net::tcp::stream::TcpStream&gt;::connected (4 samples, 0.05%)</title><rect x="82.8743%" y="693" width="0.0545%" height="15" fill="rgb(244,0,6)" fg:x="6078" fg:w="4"/><text x="83.1243%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (2 samples, 0.03%)</title><rect x="82.9016%" y="677" width="0.0273%" height="15" fill="rgb(248,18,21)" fg:x="6080" fg:w="2"/><text x="83.1516%" y="687.50"></text></g><g><title>graphgen`&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (5 samples, 0.07%)</title><rect x="82.8743%" y="709" width="0.0682%" height="15" fill="rgb(245,180,19)" fg:x="6078" fg:w="5"/><text x="83.1243%" y="719.50"></text></g><g><title>graphgen`std::sys_common::net::TcpStream::peer_addr (1 samples, 0.01%)</title><rect x="82.9288%" y="693" width="0.0136%" height="15" fill="rgb(252,118,36)" fg:x="6082" fg:w="1"/><text x="83.1788%" y="703.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="82.9425%" y="677" width="0.0136%" height="15" fill="rgb(210,224,19)" fg:x="6083" fg:w="1"/><text x="83.1925%" y="687.50"></text></g><g><title>graphgen`&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1 samples, 0.01%)</title><rect x="82.9970%" y="645" width="0.0136%" height="15" fill="rgb(218,30,24)" fg:x="6087" fg:w="1"/><text x="83.2470%" y="655.50"></text></g><g><title>graphgen`socket2::socket::Socket::new (1 samples, 0.01%)</title><rect x="83.0379%" y="597" width="0.0136%" height="15" fill="rgb(219,75,50)" fg:x="6090" fg:w="1"/><text x="83.2879%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.01%)</title><rect x="83.0379%" y="581" width="0.0136%" height="15" fill="rgb(234,72,50)" fg:x="6090" fg:w="1"/><text x="83.2879%" y="591.50"></text></g><g><title>graphgen`socket2::socket::Socket::set_nonblocking (1 samples, 0.01%)</title><rect x="83.0515%" y="597" width="0.0136%" height="15" fill="rgb(219,100,48)" fg:x="6091" fg:w="1"/><text x="83.3015%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 0.01%)</title><rect x="83.0515%" y="581" width="0.0136%" height="15" fill="rgb(253,5,41)" fg:x="6091" fg:w="1"/><text x="83.3015%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`setsockopt (1 samples, 0.01%)</title><rect x="83.0652%" y="597" width="0.0136%" height="15" fill="rgb(247,181,11)" fg:x="6092" fg:w="1"/><text x="83.3152%" y="607.50"></text></g><g><title>graphgen`hyper::client::connect::http::connect (19 samples, 0.26%)</title><rect x="83.0379%" y="613" width="0.2591%" height="15" fill="rgb(222,223,25)" fg:x="6090" fg:w="19"/><text x="83.2879%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`socket (16 samples, 0.22%)</title><rect x="83.0788%" y="597" width="0.2182%" height="15" fill="rgb(214,198,28)" fg:x="6093" fg:w="16"/><text x="83.3288%" y="607.50"></text></g><g><title>graphgen`tokio::runtime::io::Handle::allocate (1 samples, 0.01%)</title><rect x="83.2970%" y="549" width="0.0136%" height="15" fill="rgb(230,46,43)" fg:x="6109" fg:w="1"/><text x="83.5470%" y="559.50"></text></g><g><title>graphgen`tokio::util::slab::Allocator&lt;T&gt;::allocate (1 samples, 0.01%)</title><rect x="83.2970%" y="533" width="0.0136%" height="15" fill="rgb(233,65,53)" fg:x="6109" fg:w="1"/><text x="83.5470%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.01%)</title><rect x="83.2970%" y="517" width="0.0136%" height="15" fill="rgb(221,121,27)" fg:x="6109" fg:w="1"/><text x="83.5470%" y="527.50"></text></g><g><title>graphgen`tokio::net::tcp::stream::TcpStream::new (2 samples, 0.03%)</title><rect x="83.2970%" y="613" width="0.0273%" height="15" fill="rgb(247,70,47)" fg:x="6109" fg:w="2"/><text x="83.5470%" y="623.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::new (2 samples, 0.03%)</title><rect x="83.2970%" y="597" width="0.0273%" height="15" fill="rgb(228,85,35)" fg:x="6109" fg:w="2"/><text x="83.5470%" y="607.50"></text></g><g><title>graphgen`tokio::runtime::io::registration::Registration::new_with_interest_and_handle (2 samples, 0.03%)</title><rect x="83.2970%" y="581" width="0.0273%" height="15" fill="rgb(209,50,18)" fg:x="6109" fg:w="2"/><text x="83.5470%" y="591.50"></text></g><g><title>graphgen`tokio::runtime::io::Handle::add_source (2 samples, 0.03%)</title><rect x="83.2970%" y="565" width="0.0273%" height="15" fill="rgb(250,19,35)" fg:x="6109" fg:w="2"/><text x="83.5470%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 0.01%)</title><rect x="83.3106%" y="549" width="0.0136%" height="15" fill="rgb(253,107,29)" fg:x="6110" fg:w="1"/><text x="83.5606%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__connect (29 samples, 0.40%)</title><rect x="83.3242%" y="613" width="0.3954%" height="15" fill="rgb(252,179,29)" fg:x="6111" fg:w="29"/><text x="83.5742%" y="623.50"></text></g><g><title>graphgen`&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (52 samples, 0.71%)</title><rect x="83.0243%" y="629" width="0.7090%" height="15" fill="rgb(238,194,6)" fg:x="6089" fg:w="52"/><text x="83.2743%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="83.7197%" y="613" width="0.0136%" height="15" fill="rgb(238,164,29)" fg:x="6140" fg:w="1"/><text x="83.9697%" y="623.50"></text></g><g><title>graphgen`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="83.7469%" y="469" width="0.0136%" height="15" fill="rgb(224,25,9)" fg:x="6142" fg:w="1"/><text x="83.9969%" y="479.50"></text></g><g><title>graphgen`security_framework::secure_transport::read_func (14 samples, 0.19%)</title><rect x="83.7469%" y="533" width="0.1909%" height="15" fill="rgb(244,153,23)" fg:x="6142" fg:w="14"/><text x="83.9969%" y="543.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (14 samples, 0.19%)</title><rect x="83.7469%" y="517" width="0.1909%" height="15" fill="rgb(212,203,14)" fg:x="6142" fg:w="14"/><text x="83.9969%" y="527.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (14 samples, 0.19%)</title><rect x="83.7469%" y="501" width="0.1909%" height="15" fill="rgb(220,164,20)" fg:x="6142" fg:w="14"/><text x="83.9969%" y="511.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (14 samples, 0.19%)</title><rect x="83.7469%" y="485" width="0.1909%" height="15" fill="rgb(222,203,48)" fg:x="6142" fg:w="14"/><text x="83.9969%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (13 samples, 0.18%)</title><rect x="83.7606%" y="469" width="0.1773%" height="15" fill="rgb(215,159,22)" fg:x="6143" fg:w="13"/><text x="84.0106%" y="479.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 0.01%)</title><rect x="83.9378%" y="517" width="0.0136%" height="15" fill="rgb(216,183,47)" fg:x="6156" fg:w="1"/><text x="84.1878%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init (1 samples, 0.01%)</title><rect x="83.9378%" y="501" width="0.0136%" height="15" fill="rgb(229,195,25)" fg:x="6156" fg:w="1"/><text x="84.1878%" y="511.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (1 samples, 0.01%)</title><rect x="83.9378%" y="485" width="0.0136%" height="15" fill="rgb(224,132,51)" fg:x="6156" fg:w="1"/><text x="84.1878%" y="495.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (2 samples, 0.03%)</title><rect x="83.9378%" y="533" width="0.0273%" height="15" fill="rgb(240,63,7)" fg:x="6156" fg:w="2"/><text x="84.1878%" y="543.50"></text></g><g><title>libcoretls.dylib`SSLDecryptRecord (1 samples, 0.01%)</title><rect x="83.9515%" y="517" width="0.0136%" height="15" fill="rgb(249,182,41)" fg:x="6157" fg:w="1"/><text x="84.2015%" y="527.50"></text></g><g><title>Security`SSLRecordReadInternal (17 samples, 0.23%)</title><rect x="83.7469%" y="549" width="0.2318%" height="15" fill="rgb(243,47,26)" fg:x="6142" fg:w="17"/><text x="83.9969%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="83.9651%" y="533" width="0.0136%" height="15" fill="rgb(233,48,2)" fg:x="6158" fg:w="1"/><text x="84.2151%" y="543.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (13 samples, 0.18%)</title><rect x="83.9787%" y="501" width="0.1773%" height="15" fill="rgb(244,165,34)" fg:x="6159" fg:w="13"/><text x="84.2287%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (13 samples, 0.18%)</title><rect x="83.9787%" y="485" width="0.1773%" height="15" fill="rgb(207,89,7)" fg:x="6159" fg:w="13"/><text x="84.2287%" y="495.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (14 samples, 0.19%)</title><rect x="83.9787%" y="549" width="0.1909%" height="15" fill="rgb(244,117,36)" fg:x="6159" fg:w="14"/><text x="84.2287%" y="559.50"></text></g><g><title>graphgen`security_framework::secure_transport::write_func (14 samples, 0.19%)</title><rect x="83.9787%" y="533" width="0.1909%" height="15" fill="rgb(226,144,34)" fg:x="6159" fg:w="14"/><text x="84.2287%" y="543.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (14 samples, 0.19%)</title><rect x="83.9787%" y="517" width="0.1909%" height="15" fill="rgb(213,23,19)" fg:x="6159" fg:w="14"/><text x="84.2287%" y="527.50"></text></g><g><title>graphgen`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="84.1560%" y="501" width="0.0136%" height="15" fill="rgb(217,75,12)" fg:x="6172" fg:w="1"/><text x="84.4060%" y="511.50"></text></g><g><title>libcoretls.dylib`SSLInitPendingCiphers (1 samples, 0.01%)</title><rect x="84.1833%" y="517" width="0.0136%" height="15" fill="rgb(224,159,17)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="527.50"></text></g><g><title>libcoretls.dylib`tls1GenerateKeyMaterial (1 samples, 0.01%)</title><rect x="84.1833%" y="501" width="0.0136%" height="15" fill="rgb(217,118,1)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="511.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.01%)</title><rect x="84.1833%" y="485" width="0.0136%" height="15" fill="rgb(232,180,48)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="495.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.01%)</title><rect x="84.1833%" y="469" width="0.0136%" height="15" fill="rgb(230,27,33)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="479.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.01%)</title><rect x="84.1833%" y="453" width="0.0136%" height="15" fill="rgb(205,31,21)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="463.50"></text></g><g><title>libcoretls.dylib`HashSHA384Update (1 samples, 0.01%)</title><rect x="84.1833%" y="437" width="0.0136%" height="15" fill="rgb(253,59,4)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="447.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.01%)</title><rect x="84.1833%" y="421" width="0.0136%" height="15" fill="rgb(224,201,9)" fg:x="6174" fg:w="1"/><text x="84.4333%" y="431.50"></text></g><g><title>libcoretls.dylib`HashSHA384Final (1 samples, 0.01%)</title><rect x="84.1969%" y="469" width="0.0136%" height="15" fill="rgb(229,206,30)" fg:x="6175" fg:w="1"/><text x="84.4469%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="84.1969%" y="453" width="0.0136%" height="15" fill="rgb(212,67,47)" fg:x="6175" fg:w="1"/><text x="84.4469%" y="463.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.01%)</title><rect x="84.2105%" y="437" width="0.0136%" height="15" fill="rgb(211,96,50)" fg:x="6176" fg:w="1"/><text x="84.4605%" y="447.50"></text></g><g><title>libcoretls.dylib`HashSHA384Final (1 samples, 0.01%)</title><rect x="84.2105%" y="421" width="0.0136%" height="15" fill="rgb(252,114,18)" fg:x="6176" fg:w="1"/><text x="84.4605%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccsha512_final (1 samples, 0.01%)</title><rect x="84.2105%" y="405" width="0.0136%" height="15" fill="rgb(223,58,37)" fg:x="6176" fg:w="1"/><text x="84.4605%" y="415.50"></text></g><g><title>libcoretls.dylib`SSLEncodeFinishedMessage (3 samples, 0.04%)</title><rect x="84.1969%" y="501" width="0.0409%" height="15" fill="rgb(237,70,4)" fg:x="6175" fg:w="3"/><text x="84.4469%" y="511.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (3 samples, 0.04%)</title><rect x="84.1969%" y="485" width="0.0409%" height="15" fill="rgb(244,85,46)" fg:x="6175" fg:w="3"/><text x="84.4469%" y="495.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (2 samples, 0.03%)</title><rect x="84.2105%" y="469" width="0.0273%" height="15" fill="rgb(223,39,52)" fg:x="6176" fg:w="2"/><text x="84.4605%" y="479.50"></text></g><g><title>libcoretls.dylib`tlsPHash (2 samples, 0.03%)</title><rect x="84.2105%" y="453" width="0.0273%" height="15" fill="rgb(218,200,14)" fg:x="6176" fg:w="2"/><text x="84.4605%" y="463.50"></text></g><g><title>libcoretls.dylib`HMAC_Hmac (1 samples, 0.01%)</title><rect x="84.2242%" y="437" width="0.0136%" height="15" fill="rgb(208,171,16)" fg:x="6177" fg:w="1"/><text x="84.4742%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="84.2242%" y="421" width="0.0136%" height="15" fill="rgb(234,200,18)" fg:x="6177" fg:w="1"/><text x="84.4742%" y="431.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_clear (1 samples, 0.01%)</title><rect x="84.2378%" y="485" width="0.0136%" height="15" fill="rgb(228,45,11)" fg:x="6178" fg:w="1"/><text x="84.4878%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccec_cp_256 (1 samples, 0.01%)</title><rect x="84.2514%" y="485" width="0.0136%" height="15" fill="rgb(237,182,11)" fg:x="6179" fg:w="1"/><text x="84.5014%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cc_malloc_clear (1 samples, 0.01%)</title><rect x="84.2651%" y="469" width="0.0136%" height="15" fill="rgb(241,175,49)" fg:x="6180" fg:w="1"/><text x="84.5151%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="84.2651%" y="453" width="0.0136%" height="15" fill="rgb(247,38,35)" fg:x="6180" fg:w="1"/><text x="84.5151%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="84.2651%" y="437" width="0.0136%" height="15" fill="rgb(228,39,49)" fg:x="6180" fg:w="1"/><text x="84.5151%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="84.2651%" y="421" width="0.0136%" height="15" fill="rgb(226,101,26)" fg:x="6180" fg:w="1"/><text x="84.5151%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv_asm_ws (1 samples, 0.01%)</title><rect x="84.2787%" y="437" width="0.0136%" height="15" fill="rgb(206,141,19)" fg:x="6181" fg:w="1"/><text x="84.5287%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only_ws (6 samples, 0.08%)</title><rect x="84.2787%" y="453" width="0.0818%" height="15" fill="rgb(211,200,13)" fg:x="6181" fg:w="6"/><text x="84.5287%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (5 samples, 0.07%)</title><rect x="84.2923%" y="437" width="0.0682%" height="15" fill="rgb(241,121,6)" fg:x="6182" fg:w="5"/><text x="84.5423%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 0.01%)</title><rect x="84.3605%" y="437" width="0.0136%" height="15" fill="rgb(234,221,29)" fg:x="6187" fg:w="1"/><text x="84.6105%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.01%)</title><rect x="84.3605%" y="421" width="0.0136%" height="15" fill="rgb(229,136,5)" fg:x="6187" fg:w="1"/><text x="84.6105%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 0.01%)</title><rect x="84.3741%" y="421" width="0.0136%" height="15" fill="rgb(238,36,11)" fg:x="6188" fg:w="1"/><text x="84.6241%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.01%)</title><rect x="84.3741%" y="405" width="0.0136%" height="15" fill="rgb(251,55,41)" fg:x="6188" fg:w="1"/><text x="84.6241%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (2 samples, 0.03%)</title><rect x="84.4151%" y="405" width="0.0273%" height="15" fill="rgb(242,34,40)" fg:x="6191" fg:w="2"/><text x="84.6651%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (2 samples, 0.03%)</title><rect x="84.4423%" y="405" width="0.0273%" height="15" fill="rgb(215,42,17)" fg:x="6193" fg:w="2"/><text x="84.6923%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (9 samples, 0.12%)</title><rect x="84.4696%" y="405" width="0.1227%" height="15" fill="rgb(207,44,46)" fg:x="6195" fg:w="9"/><text x="84.7196%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_ws (1 samples, 0.01%)</title><rect x="84.5923%" y="405" width="0.0136%" height="15" fill="rgb(211,206,28)" fg:x="6204" fg:w="1"/><text x="84.8423%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (2 samples, 0.03%)</title><rect x="84.6059%" y="405" width="0.0273%" height="15" fill="rgb(237,167,16)" fg:x="6205" fg:w="2"/><text x="84.8559%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cc_try_abort_if (1 samples, 0.01%)</title><rect x="84.6196%" y="389" width="0.0136%" height="15" fill="rgb(233,66,6)" fg:x="6206" fg:w="1"/><text x="84.8696%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (7 samples, 0.10%)</title><rect x="84.6332%" y="389" width="0.0954%" height="15" fill="rgb(246,123,29)" fg:x="6207" fg:w="7"/><text x="84.8832%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (28 samples, 0.38%)</title><rect x="84.3878%" y="421" width="0.3818%" height="15" fill="rgb(209,62,40)" fg:x="6189" fg:w="28"/><text x="84.6378%" y="431.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (10 samples, 0.14%)</title><rect x="84.6332%" y="405" width="0.1364%" height="15" fill="rgb(218,4,25)" fg:x="6207" fg:w="10"/><text x="84.8832%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (3 samples, 0.04%)</title><rect x="84.7287%" y="389" width="0.0409%" height="15" fill="rgb(253,91,49)" fg:x="6214" fg:w="3"/><text x="84.9787%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="84.7968%" y="405" width="0.0136%" height="15" fill="rgb(228,155,29)" fg:x="6219" fg:w="1"/><text x="85.0468%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (4 samples, 0.05%)</title><rect x="84.8105%" y="405" width="0.0545%" height="15" fill="rgb(243,57,37)" fg:x="6220" fg:w="4"/><text x="85.0605%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (14 samples, 0.19%)</title><rect x="84.7696%" y="421" width="0.1909%" height="15" fill="rgb(244,167,17)" fg:x="6217" fg:w="14"/><text x="85.0196%" y="431.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (7 samples, 0.10%)</title><rect x="84.8650%" y="405" width="0.0954%" height="15" fill="rgb(207,181,38)" fg:x="6224" fg:w="7"/><text x="85.1150%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (6 samples, 0.08%)</title><rect x="84.8786%" y="389" width="0.0818%" height="15" fill="rgb(211,8,23)" fg:x="6225" fg:w="6"/><text x="85.1286%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_rsub (1 samples, 0.01%)</title><rect x="84.9605%" y="421" width="0.0136%" height="15" fill="rgb(235,11,44)" fg:x="6231" fg:w="1"/><text x="85.2105%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (26 samples, 0.35%)</title><rect x="84.9741%" y="421" width="0.3545%" height="15" fill="rgb(248,18,52)" fg:x="6232" fg:w="26"/><text x="85.2241%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (51 samples, 0.70%)</title><rect x="85.3286%" y="421" width="0.6954%" height="15" fill="rgb(208,4,7)" fg:x="6258" fg:w="51"/><text x="85.5786%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_n_asm (1 samples, 0.01%)</title><rect x="86.0240%" y="421" width="0.0136%" height="15" fill="rgb(240,17,39)" fg:x="6309" fg:w="1"/><text x="86.2740%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (17 samples, 0.23%)</title><rect x="86.0376%" y="421" width="0.2318%" height="15" fill="rgb(207,170,3)" fg:x="6310" fg:w="17"/><text x="86.2876%" y="431.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (2 samples, 0.03%)</title><rect x="86.2694%" y="421" width="0.0273%" height="15" fill="rgb(236,100,52)" fg:x="6327" fg:w="2"/><text x="86.5194%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (143 samples, 1.95%)</title><rect x="84.3605%" y="453" width="1.9498%" height="15" fill="rgb(246,78,51)" fg:x="6187" fg:w="143"/><text x="84.6105%" y="463.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (142 samples, 1.94%)</title><rect x="84.3741%" y="437" width="1.9362%" height="15" fill="rgb(211,17,15)" fg:x="6188" fg:w="142"/><text x="84.6241%" y="447.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="86.2967%" y="421" width="0.0136%" height="15" fill="rgb(209,59,46)" fg:x="6329" fg:w="1"/><text x="86.5467%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccec_validate_pub_and_projectify_ws (1 samples, 0.01%)</title><rect x="86.3103%" y="453" width="0.0136%" height="15" fill="rgb(210,92,25)" fg:x="6330" fg:w="1"/><text x="86.5603%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.01%)</title><rect x="86.3103%" y="437" width="0.0136%" height="15" fill="rgb(238,174,52)" fg:x="6330" fg:w="1"/><text x="86.5603%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret (152 samples, 2.07%)</title><rect x="84.2651%" y="485" width="2.0725%" height="15" fill="rgb(230,73,7)" fg:x="6180" fg:w="152"/><text x="84.5151%" y="495.50">l..</text></g><g><title>libcorecrypto.dylib`ccecdh_compute_shared_secret_ws (151 samples, 2.06%)</title><rect x="84.2787%" y="469" width="2.0589%" height="15" fill="rgb(243,124,40)" fg:x="6181" fg:w="151"/><text x="84.5287%" y="479.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_from_ws (1 samples, 0.01%)</title><rect x="86.3240%" y="453" width="0.0136%" height="15" fill="rgb(244,170,11)" fg:x="6331" fg:w="1"/><text x="86.5740%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_scalar_fips_retry_ws (1 samples, 0.01%)</title><rect x="86.3376%" y="405" width="0.0136%" height="15" fill="rgb(207,114,54)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits_fips (1 samples, 0.01%)</title><rect x="86.3376%" y="389" width="0.0136%" height="15" fill="rgb(205,42,20)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="399.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="86.3376%" y="373" width="0.0136%" height="15" fill="rgb(230,30,28)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.01%)</title><rect x="86.3376%" y="357" width="0.0136%" height="15" fill="rgb(205,73,54)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="367.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="86.3376%" y="341" width="0.0136%" height="15" fill="rgb(254,227,23)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="351.50"></text></g><g><title>libcorecrypto.dylib`update_with_ctr (1 samples, 0.01%)</title><rect x="86.3376%" y="325" width="0.0136%" height="15" fill="rgb(228,202,34)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccctr_update (1 samples, 0.01%)</title><rect x="86.3376%" y="309" width="0.0136%" height="15" fill="rgb(222,225,37)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccaes_vng_ctr_crypt (1 samples, 0.01%)</title><rect x="86.3376%" y="293" width="0.0136%" height="15" fill="rgb(221,14,54)" fg:x="6332" fg:w="1"/><text x="86.5876%" y="303.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_ws (3 samples, 0.04%)</title><rect x="86.3512%" y="389" width="0.0409%" height="15" fill="rgb(254,102,2)" fg:x="6333" fg:w="3"/><text x="86.6012%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.04%)</title><rect x="86.3512%" y="373" width="0.0409%" height="15" fill="rgb(232,104,17)" fg:x="6333" fg:w="3"/><text x="86.6012%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="86.4058%" y="357" width="0.0136%" height="15" fill="rgb(250,220,14)" fg:x="6337" fg:w="1"/><text x="86.6558%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (1 samples, 0.01%)</title><rect x="86.4194%" y="341" width="0.0136%" height="15" fill="rgb(241,158,9)" fg:x="6338" fg:w="1"/><text x="86.6694%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (1 samples, 0.01%)</title><rect x="86.4194%" y="325" width="0.0136%" height="15" fill="rgb(246,9,43)" fg:x="6338" fg:w="1"/><text x="86.6694%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right (1 samples, 0.01%)</title><rect x="86.4194%" y="309" width="0.0136%" height="15" fill="rgb(206,73,33)" fg:x="6338" fg:w="1"/><text x="86.6694%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (2 samples, 0.03%)</title><rect x="86.4194%" y="357" width="0.0273%" height="15" fill="rgb(222,79,8)" fg:x="6338" fg:w="2"/><text x="86.6694%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.01%)</title><rect x="86.4331%" y="341" width="0.0136%" height="15" fill="rgb(234,8,54)" fg:x="6339" fg:w="1"/><text x="86.6831%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cc_try_abort_if (1 samples, 0.01%)</title><rect x="86.4876%" y="341" width="0.0136%" height="15" fill="rgb(209,134,38)" fg:x="6343" fg:w="1"/><text x="86.7376%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (3 samples, 0.04%)</title><rect x="86.5012%" y="341" width="0.0409%" height="15" fill="rgb(230,127,29)" fg:x="6344" fg:w="3"/><text x="86.7512%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="86.5421%" y="341" width="0.0136%" height="15" fill="rgb(242,44,41)" fg:x="6347" fg:w="1"/><text x="86.7921%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.01%)</title><rect x="86.5558%" y="341" width="0.0136%" height="15" fill="rgb(222,56,43)" fg:x="6348" fg:w="1"/><text x="86.8058%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (5 samples, 0.07%)</title><rect x="86.5694%" y="341" width="0.0682%" height="15" fill="rgb(238,39,47)" fg:x="6349" fg:w="5"/><text x="86.8194%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (2 samples, 0.03%)</title><rect x="86.6376%" y="341" width="0.0273%" height="15" fill="rgb(226,79,43)" fg:x="6354" fg:w="2"/><text x="86.8876%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="86.6512%" y="325" width="0.0136%" height="15" fill="rgb(242,105,53)" fg:x="6355" fg:w="1"/><text x="86.9012%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (10 samples, 0.14%)</title><rect x="86.6648%" y="325" width="0.1364%" height="15" fill="rgb(251,132,46)" fg:x="6356" fg:w="10"/><text x="86.9148%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (28 samples, 0.38%)</title><rect x="86.4467%" y="357" width="0.3818%" height="15" fill="rgb(231,77,14)" fg:x="6340" fg:w="28"/><text x="86.6967%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (12 samples, 0.16%)</title><rect x="86.6648%" y="341" width="0.1636%" height="15" fill="rgb(240,135,9)" fg:x="6356" fg:w="12"/><text x="86.9148%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (2 samples, 0.03%)</title><rect x="86.8012%" y="325" width="0.0273%" height="15" fill="rgb(248,109,14)" fg:x="6366" fg:w="2"/><text x="87.0512%" y="335.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (2 samples, 0.03%)</title><rect x="86.8421%" y="341" width="0.0273%" height="15" fill="rgb(227,146,52)" fg:x="6369" fg:w="2"/><text x="87.0921%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (6 samples, 0.08%)</title><rect x="86.8694%" y="341" width="0.0818%" height="15" fill="rgb(232,54,3)" fg:x="6371" fg:w="6"/><text x="87.1194%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (4 samples, 0.05%)</title><rect x="86.9512%" y="325" width="0.0545%" height="15" fill="rgb(229,201,43)" fg:x="6377" fg:w="4"/><text x="87.2012%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (16 samples, 0.22%)</title><rect x="86.8285%" y="357" width="0.2182%" height="15" fill="rgb(252,161,33)" fg:x="6368" fg:w="16"/><text x="87.0785%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (7 samples, 0.10%)</title><rect x="86.9512%" y="341" width="0.0954%" height="15" fill="rgb(226,146,40)" fg:x="6377" fg:w="7"/><text x="87.2012%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (3 samples, 0.04%)</title><rect x="87.0057%" y="325" width="0.0409%" height="15" fill="rgb(219,47,25)" fg:x="6381" fg:w="3"/><text x="87.2557%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_rsub (2 samples, 0.03%)</title><rect x="87.0466%" y="357" width="0.0273%" height="15" fill="rgb(250,135,13)" fg:x="6384" fg:w="2"/><text x="87.2966%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (17 samples, 0.23%)</title><rect x="87.0739%" y="357" width="0.2318%" height="15" fill="rgb(219,229,18)" fg:x="6386" fg:w="17"/><text x="87.3239%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (45 samples, 0.61%)</title><rect x="87.3057%" y="357" width="0.6136%" height="15" fill="rgb(217,152,27)" fg:x="6403" fg:w="45"/><text x="87.5557%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.01%)</title><rect x="87.9193%" y="357" width="0.0136%" height="15" fill="rgb(225,71,47)" fg:x="6448" fg:w="1"/><text x="88.1693%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (1 samples, 0.01%)</title><rect x="87.9329%" y="357" width="0.0136%" height="15" fill="rgb(220,139,14)" fg:x="6449" fg:w="1"/><text x="88.1829%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (22 samples, 0.30%)</title><rect x="87.9466%" y="357" width="0.3000%" height="15" fill="rgb(247,54,32)" fg:x="6450" fg:w="22"/><text x="88.1966%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (141 samples, 1.92%)</title><rect x="86.3921%" y="373" width="1.9226%" height="15" fill="rgb(252,131,39)" fg:x="6336" fg:w="141"/><text x="86.6421%" y="383.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (5 samples, 0.07%)</title><rect x="88.2465%" y="357" width="0.0682%" height="15" fill="rgb(210,108,39)" fg:x="6472" fg:w="5"/><text x="88.4965%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="88.3011%" y="341" width="0.0136%" height="15" fill="rgb(205,23,29)" fg:x="6476" fg:w="1"/><text x="88.5511%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.01%)</title><rect x="88.3147%" y="373" width="0.0136%" height="15" fill="rgb(246,139,46)" fg:x="6477" fg:w="1"/><text x="88.5647%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (143 samples, 1.95%)</title><rect x="86.3921%" y="389" width="1.9498%" height="15" fill="rgb(250,81,26)" fg:x="6336" fg:w="143"/><text x="86.6421%" y="399.50">l..</text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.01%)</title><rect x="88.3283%" y="373" width="0.0136%" height="15" fill="rgb(214,104,7)" fg:x="6478" fg:w="1"/><text x="88.5783%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips_ws (148 samples, 2.02%)</title><rect x="86.3376%" y="421" width="2.0180%" height="15" fill="rgb(233,189,8)" fg:x="6332" fg:w="148"/><text x="86.5876%" y="431.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv_ws (147 samples, 2.00%)</title><rect x="86.3512%" y="405" width="2.0044%" height="15" fill="rgb(228,141,17)" fg:x="6333" fg:w="147"/><text x="86.6012%" y="415.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_projectify_ws (1 samples, 0.01%)</title><rect x="88.3420%" y="389" width="0.0136%" height="15" fill="rgb(247,157,1)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits (1 samples, 0.01%)</title><rect x="88.3420%" y="373" width="0.0136%" height="15" fill="rgb(249,225,5)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="383.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="88.3420%" y="357" width="0.0136%" height="15" fill="rgb(242,55,13)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.01%)</title><rect x="88.3420%" y="341" width="0.0136%" height="15" fill="rgb(230,49,50)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="351.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="88.3420%" y="325" width="0.0136%" height="15" fill="rgb(241,111,38)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccctr_context_size (1 samples, 0.01%)</title><rect x="88.3420%" y="309" width="0.0136%" height="15" fill="rgb(252,155,4)" fg:x="6479" fg:w="1"/><text x="88.5920%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccec_projectify_ws (1 samples, 0.01%)</title><rect x="88.3556%" y="389" width="0.0136%" height="15" fill="rgb(212,69,32)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_random_bits (1 samples, 0.01%)</title><rect x="88.3556%" y="373" width="0.0136%" height="15" fill="rgb(243,107,47)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="383.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="88.3556%" y="357" width="0.0136%" height="15" fill="rgb(247,130,12)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 0.01%)</title><rect x="88.3556%" y="341" width="0.0136%" height="15" fill="rgb(233,74,16)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="351.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.01%)</title><rect x="88.3556%" y="325" width="0.0136%" height="15" fill="rgb(208,58,18)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccctr_context_size (1 samples, 0.01%)</title><rect x="88.3556%" y="309" width="0.0136%" height="15" fill="rgb(242,225,1)" fg:x="6480" fg:w="1"/><text x="88.6056%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccn_mod_256_montgomery (1 samples, 0.01%)</title><rect x="88.3692%" y="357" width="0.0136%" height="15" fill="rgb(249,39,40)" fg:x="6481" fg:w="1"/><text x="88.6192%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_p256_inv_asm_ws (2 samples, 0.03%)</title><rect x="88.3829%" y="357" width="0.0273%" height="15" fill="rgb(207,72,44)" fg:x="6482" fg:w="2"/><text x="88.6329%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only_ws (5 samples, 0.07%)</title><rect x="88.3692%" y="373" width="0.0682%" height="15" fill="rgb(215,193,12)" fg:x="6481" fg:w="5"/><text x="88.6192%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (2 samples, 0.03%)</title><rect x="88.4101%" y="357" width="0.0273%" height="15" fill="rgb(248,41,39)" fg:x="6484" fg:w="2"/><text x="88.6601%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (1 samples, 0.01%)</title><rect x="88.4374%" y="357" width="0.0136%" height="15" fill="rgb(253,85,4)" fg:x="6486" fg:w="1"/><text x="88.6874%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="88.4920%" y="325" width="0.0136%" height="15" fill="rgb(243,70,31)" fg:x="6490" fg:w="1"/><text x="88.7420%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (9 samples, 0.12%)</title><rect x="88.5056%" y="325" width="0.1227%" height="15" fill="rgb(253,195,26)" fg:x="6491" fg:w="9"/><text x="88.7556%" y="335.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.01%)</title><rect x="88.6283%" y="325" width="0.0136%" height="15" fill="rgb(243,42,11)" fg:x="6500" fg:w="1"/><text x="88.8783%" y="335.50"></text></g><g><title>libcorecrypto.dylib`cc_try_abort_if (1 samples, 0.01%)</title><rect x="88.6283%" y="309" width="0.0136%" height="15" fill="rgb(239,66,17)" fg:x="6500" fg:w="1"/><text x="88.8783%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZaddC_ws (25 samples, 0.34%)</title><rect x="88.4647%" y="341" width="0.3409%" height="15" fill="rgb(217,132,21)" fg:x="6488" fg:w="25"/><text x="88.7147%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (12 samples, 0.16%)</title><rect x="88.6419%" y="325" width="0.1636%" height="15" fill="rgb(252,202,21)" fg:x="6501" fg:w="12"/><text x="88.8919%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (11 samples, 0.15%)</title><rect x="88.6556%" y="309" width="0.1500%" height="15" fill="rgb(233,98,36)" fg:x="6502" fg:w="11"/><text x="88.9056%" y="319.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="88.8056%" y="325" width="0.0136%" height="15" fill="rgb(216,153,54)" fg:x="6513" fg:w="1"/><text x="89.0556%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (5 samples, 0.07%)</title><rect x="88.8192%" y="325" width="0.0682%" height="15" fill="rgb(250,99,7)" fg:x="6514" fg:w="5"/><text x="89.0692%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (5 samples, 0.07%)</title><rect x="88.9010%" y="309" width="0.0682%" height="15" fill="rgb(207,56,50)" fg:x="6520" fg:w="5"/><text x="89.1510%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_XYCZadd_ws (13 samples, 0.18%)</title><rect x="88.8056%" y="341" width="0.1773%" height="15" fill="rgb(244,61,34)" fg:x="6513" fg:w="13"/><text x="89.0556%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (7 samples, 0.10%)</title><rect x="88.8874%" y="325" width="0.0954%" height="15" fill="rgb(241,50,38)" fg:x="6519" fg:w="7"/><text x="89.1374%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (1 samples, 0.01%)</title><rect x="88.9692%" y="309" width="0.0136%" height="15" fill="rgb(212,166,30)" fg:x="6525" fg:w="1"/><text x="89.2192%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_rsub (2 samples, 0.03%)</title><rect x="88.9828%" y="341" width="0.0273%" height="15" fill="rgb(249,127,32)" fg:x="6526" fg:w="2"/><text x="89.2328%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_swap (14 samples, 0.19%)</title><rect x="89.0101%" y="341" width="0.1909%" height="15" fill="rgb(209,103,0)" fg:x="6528" fg:w="14"/><text x="89.2601%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (41 samples, 0.56%)</title><rect x="89.2010%" y="341" width="0.5590%" height="15" fill="rgb(238,209,51)" fg:x="6542" fg:w="41"/><text x="89.4510%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (1 samples, 0.01%)</title><rect x="89.7600%" y="341" width="0.0136%" height="15" fill="rgb(237,56,23)" fg:x="6583" fg:w="1"/><text x="90.0100%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_n_asm (1 samples, 0.01%)</title><rect x="89.7737%" y="341" width="0.0136%" height="15" fill="rgb(215,153,46)" fg:x="6584" fg:w="1"/><text x="90.0237%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (16 samples, 0.22%)</title><rect x="89.7873%" y="341" width="0.2182%" height="15" fill="rgb(224,49,31)" fg:x="6585" fg:w="16"/><text x="90.0373%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.01%)</title><rect x="90.0055%" y="341" width="0.0136%" height="15" fill="rgb(250,18,42)" fg:x="6601" fg:w="1"/><text x="90.2555%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (116 samples, 1.58%)</title><rect x="88.4510%" y="357" width="1.5817%" height="15" fill="rgb(215,176,39)" fg:x="6487" fg:w="116"/><text x="88.7010%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.01%)</title><rect x="90.0191%" y="341" width="0.0136%" height="15" fill="rgb(223,77,29)" fg:x="6602" fg:w="1"/><text x="90.2691%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (118 samples, 1.61%)</title><rect x="88.4374%" y="373" width="1.6089%" height="15" fill="rgb(234,94,52)" fg:x="6486" fg:w="118"/><text x="88.6874%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.01%)</title><rect x="90.0327%" y="357" width="0.0136%" height="15" fill="rgb(220,154,50)" fg:x="6603" fg:w="1"/><text x="90.2827%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub1 (1 samples, 0.01%)</title><rect x="90.1009%" y="357" width="0.0136%" height="15" fill="rgb(212,11,10)" fg:x="6608" fg:w="1"/><text x="90.3509%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (132 samples, 1.80%)</title><rect x="88.3556%" y="405" width="1.7998%" height="15" fill="rgb(205,166,19)" fg:x="6480" fg:w="132"/><text x="88.6056%" y="415.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (131 samples, 1.79%)</title><rect x="88.3692%" y="389" width="1.7862%" height="15" fill="rgb(244,198,16)" fg:x="6481" fg:w="131"/><text x="88.6192%" y="399.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (8 samples, 0.11%)</title><rect x="90.0464%" y="373" width="0.1091%" height="15" fill="rgb(219,69,12)" fg:x="6604" fg:w="8"/><text x="90.2964%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_ws (3 samples, 0.04%)</title><rect x="90.1145%" y="357" width="0.0409%" height="15" fill="rgb(245,30,7)" fg:x="6609" fg:w="3"/><text x="90.3645%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_set (2 samples, 0.03%)</title><rect x="90.1282%" y="341" width="0.0273%" height="15" fill="rgb(218,221,48)" fg:x="6610" fg:w="2"/><text x="90.3782%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only_ws (4 samples, 0.05%)</title><rect x="90.1554%" y="389" width="0.0545%" height="15" fill="rgb(216,66,15)" fg:x="6612" fg:w="4"/><text x="90.4054%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (4 samples, 0.05%)</title><rect x="90.1554%" y="373" width="0.0545%" height="15" fill="rgb(226,122,50)" fg:x="6612" fg:w="4"/><text x="90.4054%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="90.3327%" y="357" width="0.0136%" height="15" fill="rgb(239,156,16)" fg:x="6625" fg:w="1"/><text x="90.5827%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_add_asm (2 samples, 0.03%)</title><rect x="90.3463%" y="357" width="0.0273%" height="15" fill="rgb(224,27,38)" fg:x="6626" fg:w="2"/><text x="90.5963%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (2 samples, 0.03%)</title><rect x="90.3736%" y="357" width="0.0273%" height="15" fill="rgb(224,39,27)" fg:x="6628" fg:w="2"/><text x="90.6236%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (7 samples, 0.10%)</title><rect x="90.4009%" y="357" width="0.0954%" height="15" fill="rgb(215,92,29)" fg:x="6630" fg:w="7"/><text x="90.6509%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (7 samples, 0.10%)</title><rect x="90.4963%" y="357" width="0.0954%" height="15" fill="rgb(207,159,16)" fg:x="6637" fg:w="7"/><text x="90.7463%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (3 samples, 0.04%)</title><rect x="90.5918%" y="357" width="0.0409%" height="15" fill="rgb(238,163,47)" fg:x="6644" fg:w="3"/><text x="90.8418%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (2 samples, 0.03%)</title><rect x="90.6054%" y="341" width="0.0273%" height="15" fill="rgb(219,91,49)" fg:x="6645" fg:w="2"/><text x="90.8554%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (8 samples, 0.11%)</title><rect x="90.6327%" y="341" width="0.1091%" height="15" fill="rgb(227,167,31)" fg:x="6647" fg:w="8"/><text x="90.8827%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (32 samples, 0.44%)</title><rect x="90.3327%" y="373" width="0.4363%" height="15" fill="rgb(234,80,54)" fg:x="6625" fg:w="32"/><text x="90.5827%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (10 samples, 0.14%)</title><rect x="90.6327%" y="357" width="0.1364%" height="15" fill="rgb(212,114,2)" fg:x="6647" fg:w="10"/><text x="90.8827%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (2 samples, 0.03%)</title><rect x="90.7418%" y="341" width="0.0273%" height="15" fill="rgb(234,50,24)" fg:x="6655" fg:w="2"/><text x="90.9918%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.01%)</title><rect x="90.7690%" y="341" width="0.0136%" height="15" fill="rgb(221,68,8)" fg:x="6657" fg:w="1"/><text x="91.0190%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.01%)</title><rect x="90.7827%" y="341" width="0.0136%" height="15" fill="rgb(254,180,31)" fg:x="6658" fg:w="1"/><text x="91.0327%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux_next_mask (1 samples, 0.01%)</title><rect x="90.7963%" y="325" width="0.0136%" height="15" fill="rgb(247,130,50)" fg:x="6659" fg:w="1"/><text x="91.0463%" y="335.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (2 samples, 0.03%)</title><rect x="90.7963%" y="341" width="0.0273%" height="15" fill="rgb(211,109,4)" fg:x="6659" fg:w="2"/><text x="91.0463%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right (1 samples, 0.01%)</title><rect x="90.8099%" y="325" width="0.0136%" height="15" fill="rgb(238,50,21)" fg:x="6660" fg:w="1"/><text x="91.0599%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (6 samples, 0.08%)</title><rect x="90.7690%" y="357" width="0.0818%" height="15" fill="rgb(225,57,45)" fg:x="6657" fg:w="6"/><text x="91.0190%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.03%)</title><rect x="90.8236%" y="341" width="0.0273%" height="15" fill="rgb(209,196,50)" fg:x="6661" fg:w="2"/><text x="91.0736%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (2 samples, 0.03%)</title><rect x="90.8236%" y="325" width="0.0273%" height="15" fill="rgb(242,140,13)" fg:x="6661" fg:w="2"/><text x="91.0736%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_normalized_ws (14 samples, 0.19%)</title><rect x="90.7690%" y="373" width="0.1909%" height="15" fill="rgb(217,111,7)" fg:x="6657" fg:w="14"/><text x="91.0190%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (8 samples, 0.11%)</title><rect x="90.8508%" y="357" width="0.1091%" height="15" fill="rgb(253,193,51)" fg:x="6663" fg:w="8"/><text x="91.1008%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="90.9599%" y="341" width="0.0136%" height="15" fill="rgb(252,70,29)" fg:x="6671" fg:w="1"/><text x="91.2099%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_set (1 samples, 0.01%)</title><rect x="90.9735%" y="341" width="0.0136%" height="15" fill="rgb(232,127,12)" fg:x="6672" fg:w="1"/><text x="91.2235%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (3 samples, 0.04%)</title><rect x="90.9872%" y="341" width="0.0409%" height="15" fill="rgb(211,180,21)" fg:x="6673" fg:w="3"/><text x="91.2372%" y="351.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (1 samples, 0.01%)</title><rect x="91.0281%" y="341" width="0.0136%" height="15" fill="rgb(229,72,13)" fg:x="6676" fg:w="1"/><text x="91.2781%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right (1 samples, 0.01%)</title><rect x="91.0281%" y="325" width="0.0136%" height="15" fill="rgb(240,211,49)" fg:x="6676" fg:w="1"/><text x="91.2781%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (13 samples, 0.18%)</title><rect x="90.9599%" y="357" width="0.1773%" height="15" fill="rgb(219,149,40)" fg:x="6671" fg:w="13"/><text x="91.2099%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (7 samples, 0.10%)</title><rect x="91.0417%" y="341" width="0.0954%" height="15" fill="rgb(210,127,46)" fg:x="6677" fg:w="7"/><text x="91.2917%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (6 samples, 0.08%)</title><rect x="91.0554%" y="325" width="0.0818%" height="15" fill="rgb(220,106,7)" fg:x="6678" fg:w="6"/><text x="91.3054%" y="335.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (11 samples, 0.15%)</title><rect x="91.1372%" y="357" width="0.1500%" height="15" fill="rgb(249,31,22)" fg:x="6684" fg:w="11"/><text x="91.3872%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.04%)</title><rect x="91.2872%" y="357" width="0.0409%" height="15" fill="rgb(253,1,49)" fg:x="6695" fg:w="3"/><text x="91.5372%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.01%)</title><rect x="91.3281%" y="357" width="0.0136%" height="15" fill="rgb(227,144,33)" fg:x="6698" fg:w="1"/><text x="91.5781%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_sub_normalized_ws (29 samples, 0.40%)</title><rect x="90.9599%" y="373" width="0.3954%" height="15" fill="rgb(249,163,44)" fg:x="6671" fg:w="29"/><text x="91.2099%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.01%)</title><rect x="91.3417%" y="357" width="0.0136%" height="15" fill="rgb(234,15,39)" fg:x="6699" fg:w="1"/><text x="91.5917%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (13 samples, 0.18%)</title><rect x="91.3553%" y="373" width="0.1773%" height="15" fill="rgb(207,66,16)" fg:x="6700" fg:w="13"/><text x="91.6053%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (110 samples, 1.50%)</title><rect x="90.2100%" y="389" width="1.4999%" height="15" fill="rgb(233,112,24)" fg:x="6616" fg:w="110"/><text x="90.4600%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (13 samples, 0.18%)</title><rect x="91.5326%" y="373" width="0.1773%" height="15" fill="rgb(230,90,22)" fg:x="6713" fg:w="13"/><text x="91.7826%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub1 (1 samples, 0.01%)</title><rect x="91.7780%" y="373" width="0.0136%" height="15" fill="rgb(229,61,13)" fg:x="6731" fg:w="1"/><text x="92.0280%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_redc_ws (1 samples, 0.01%)</title><rect x="91.7917%" y="373" width="0.0136%" height="15" fill="rgb(225,57,24)" fg:x="6732" fg:w="1"/><text x="92.0417%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 0.01%)</title><rect x="91.7917%" y="357" width="0.0136%" height="15" fill="rgb(208,169,48)" fg:x="6732" fg:w="1"/><text x="92.0417%" y="367.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (556 samples, 7.58%)</title><rect x="84.2378%" y="501" width="7.5811%" height="15" fill="rgb(244,218,51)" fg:x="6178" fg:w="556"/><text x="84.4878%" y="511.50">libcoretls..</text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (402 samples, 5.48%)</title><rect x="86.3376%" y="485" width="5.4813%" height="15" fill="rgb(214,148,10)" fg:x="6332" fg:w="402"/><text x="86.5876%" y="495.50">libcore..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key (402 samples, 5.48%)</title><rect x="86.3376%" y="469" width="5.4813%" height="15" fill="rgb(225,174,27)" fg:x="6332" fg:w="402"/><text x="86.5876%" y="479.50">libcore..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (402 samples, 5.48%)</title><rect x="86.3376%" y="453" width="5.4813%" height="15" fill="rgb(230,96,26)" fg:x="6332" fg:w="402"/><text x="86.5876%" y="463.50">libcore..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (402 samples, 5.48%)</title><rect x="86.3376%" y="437" width="5.4813%" height="15" fill="rgb(232,10,30)" fg:x="6332" fg:w="402"/><text x="86.5876%" y="447.50">libcore..</text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (254 samples, 3.46%)</title><rect x="88.3556%" y="421" width="3.4633%" height="15" fill="rgb(222,8,50)" fg:x="6480" fg:w="254"/><text x="88.6056%" y="431.50">lib..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (122 samples, 1.66%)</title><rect x="90.1554%" y="405" width="1.6635%" height="15" fill="rgb(213,81,27)" fg:x="6612" fg:w="122"/><text x="90.4054%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (8 samples, 0.11%)</title><rect x="91.7098%" y="389" width="0.1091%" height="15" fill="rgb(245,50,10)" fg:x="6726" fg:w="8"/><text x="91.9598%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_ws (1 samples, 0.01%)</title><rect x="91.8053%" y="373" width="0.0136%" height="15" fill="rgb(216,100,18)" fg:x="6733" fg:w="1"/><text x="92.0553%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_neg (1 samples, 0.01%)</title><rect x="91.8053%" y="357" width="0.0136%" height="15" fill="rgb(236,147,54)" fg:x="6733" fg:w="1"/><text x="92.0553%" y="367.50"></text></g><g><title>libcoretls.dylib`HashSHA1Update (1 samples, 0.01%)</title><rect x="91.8189%" y="485" width="0.0136%" height="15" fill="rgb(205,143,26)" fg:x="6734" fg:w="1"/><text x="92.0689%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccsha1_vng_arm_compress (1 samples, 0.01%)</title><rect x="91.8189%" y="469" width="0.0136%" height="15" fill="rgb(236,26,9)" fg:x="6734" fg:w="1"/><text x="92.0689%" y="479.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (561 samples, 7.65%)</title><rect x="84.1969%" y="517" width="7.6493%" height="15" fill="rgb(221,165,53)" fg:x="6175" fg:w="561"/><text x="84.4469%" y="527.50">libcoretls..</text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (2 samples, 0.03%)</title><rect x="91.8189%" y="501" width="0.0273%" height="15" fill="rgb(214,110,17)" fg:x="6734" fg:w="2"/><text x="92.0689%" y="511.50"></text></g><g><title>libcoretls.dylib`HashSHA256Update (1 samples, 0.01%)</title><rect x="91.8326%" y="485" width="0.0136%" height="15" fill="rgb(237,197,12)" fg:x="6735" fg:w="1"/><text x="92.0826%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_update (1 samples, 0.01%)</title><rect x="91.8326%" y="469" width="0.0136%" height="15" fill="rgb(205,84,17)" fg:x="6735" fg:w="1"/><text x="92.0826%" y="479.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.01%)</title><rect x="91.8598%" y="437" width="0.0136%" height="15" fill="rgb(237,18,45)" fg:x="6737" fg:w="1"/><text x="92.1098%" y="447.50"></text></g><g><title>libcoretls.dylib`SSLSendFlight (3 samples, 0.04%)</title><rect x="91.8462%" y="517" width="0.0409%" height="15" fill="rgb(221,87,14)" fg:x="6736" fg:w="3"/><text x="92.0962%" y="527.50"></text></g><g><title>Security`tls_handshake_write_callback (2 samples, 0.03%)</title><rect x="91.8598%" y="501" width="0.0273%" height="15" fill="rgb(238,186,15)" fg:x="6737" fg:w="2"/><text x="92.1098%" y="511.50"></text></g><g><title>Security`SSLRecordWriteInternal (2 samples, 0.03%)</title><rect x="91.8598%" y="485" width="0.0273%" height="15" fill="rgb(208,115,11)" fg:x="6737" fg:w="2"/><text x="92.1098%" y="495.50"></text></g><g><title>libcoretls.dylib`tls_record_encrypt (2 samples, 0.03%)</title><rect x="91.8598%" y="469" width="0.0273%" height="15" fill="rgb(254,175,0)" fg:x="6737" fg:w="2"/><text x="92.1098%" y="479.50"></text></g><g><title>libcoretls.dylib`CCSymmAEADEncrypt (2 samples, 0.03%)</title><rect x="91.8598%" y="453" width="0.0273%" height="15" fill="rgb(227,24,42)" fg:x="6737" fg:w="2"/><text x="92.1098%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_update (1 samples, 0.01%)</title><rect x="91.8735%" y="437" width="0.0136%" height="15" fill="rgb(223,211,37)" fg:x="6738" fg:w="1"/><text x="92.1235%" y="447.50"></text></g><g><title>libcorecrypto.dylib`Encrypt_Main_Loop_End (1 samples, 0.01%)</title><rect x="91.8735%" y="421" width="0.0136%" height="15" fill="rgb(235,49,27)" fg:x="6738" fg:w="1"/><text x="92.1235%" y="431.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (567 samples, 7.73%)</title><rect x="84.1696%" y="549" width="7.7311%" height="15" fill="rgb(254,97,51)" fg:x="6173" fg:w="567"/><text x="84.4196%" y="559.50">libcoretls...</text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (566 samples, 7.72%)</title><rect x="84.1833%" y="533" width="7.7175%" height="15" fill="rgb(249,51,40)" fg:x="6174" fg:w="566"/><text x="84.4333%" y="543.50">libcoretls...</text></g><g><title>libcoretls.dylib`tls12GenerateMasterSecret (1 samples, 0.01%)</title><rect x="91.8871%" y="517" width="0.0136%" height="15" fill="rgb(210,128,45)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="527.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (1 samples, 0.01%)</title><rect x="91.8871%" y="501" width="0.0136%" height="15" fill="rgb(224,137,50)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="511.50"></text></g><g><title>libcoretls.dylib`tlsPHash (1 samples, 0.01%)</title><rect x="91.8871%" y="485" width="0.0136%" height="15" fill="rgb(242,15,9)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="495.50"></text></g><g><title>libcoretls.dylib`HMAC_Final (1 samples, 0.01%)</title><rect x="91.8871%" y="469" width="0.0136%" height="15" fill="rgb(233,187,41)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="479.50"></text></g><g><title>libcoretls.dylib`HashSHA384Final (1 samples, 0.01%)</title><rect x="91.8871%" y="453" width="0.0136%" height="15" fill="rgb(227,2,29)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="463.50"></text></g><g><title>libcorecrypto.dylib`ccsha512_final (1 samples, 0.01%)</title><rect x="91.8871%" y="437" width="0.0136%" height="15" fill="rgb(222,70,3)" fg:x="6739" fg:w="1"/><text x="92.1371%" y="447.50"></text></g><g><title>Security`CSSM_CL_CertAbortCache (1 samples, 0.01%)</title><rect x="91.9144%" y="357" width="0.0136%" height="15" fill="rgb(213,11,42)" fg:x="6741" fg:w="1"/><text x="92.1644%" y="367.50"></text></g><g><title>Security`setCountLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="91.9144%" y="341" width="0.0136%" height="15" fill="rgb(225,150,9)" fg:x="6741" fg:w="1"/><text x="92.1644%" y="351.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (1 samples, 0.01%)</title><rect x="91.9144%" y="325" width="0.0136%" height="15" fill="rgb(230,162,45)" fg:x="6741" fg:w="1"/><text x="92.1644%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (2 samples, 0.03%)</title><rect x="91.9144%" y="485" width="0.0273%" height="15" fill="rgb(222,14,52)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="495.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (2 samples, 0.03%)</title><rect x="91.9144%" y="469" width="0.0273%" height="15" fill="rgb(254,198,14)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="479.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="91.9144%" y="453" width="0.0273%" height="15" fill="rgb(220,217,30)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="463.50"></text></g><g><title>Security`SecCertificateDestroy (2 samples, 0.03%)</title><rect x="91.9144%" y="437" width="0.0273%" height="15" fill="rgb(215,146,41)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="447.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="91.9144%" y="421" width="0.0273%" height="15" fill="rgb(217,27,36)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="431.50"></text></g><g><title>Security`Security::CFClass::refCountForType (2 samples, 0.03%)</title><rect x="91.9144%" y="405" width="0.0273%" height="15" fill="rgb(219,218,39)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="415.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (2 samples, 0.03%)</title><rect x="91.9144%" y="389" width="0.0273%" height="15" fill="rgb(219,4,42)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="399.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (2 samples, 0.03%)</title><rect x="91.9144%" y="373" width="0.0273%" height="15" fill="rgb(249,119,36)" fg:x="6741" fg:w="2"/><text x="92.1644%" y="383.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (1 samples, 0.01%)</title><rect x="91.9280%" y="357" width="0.0136%" height="15" fill="rgb(209,23,33)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="367.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (1 samples, 0.01%)</title><rect x="91.9280%" y="341" width="0.0136%" height="15" fill="rgb(211,10,0)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="351.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (1 samples, 0.01%)</title><rect x="91.9280%" y="325" width="0.0136%" height="15" fill="rgb(208,99,37)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="335.50"></text></g><g><title>Security`Security::CssmClient::CLImpl::~CLImpl (1 samples, 0.01%)</title><rect x="91.9280%" y="309" width="0.0136%" height="15" fill="rgb(213,132,31)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="319.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::~AttachmentImpl (1 samples, 0.01%)</title><rect x="91.9280%" y="293" width="0.0136%" height="15" fill="rgb(243,129,40)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="303.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::deactivate (1 samples, 0.01%)</title><rect x="91.9280%" y="277" width="0.0136%" height="15" fill="rgb(210,66,33)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="287.50"></text></g><g><title>Security`CSSM_ModuleDetach (1 samples, 0.01%)</title><rect x="91.9280%" y="261" width="0.0136%" height="15" fill="rgb(209,189,4)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="271.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.01%)</title><rect x="91.9280%" y="245" width="0.0136%" height="15" fill="rgb(214,107,37)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="255.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__vmi_class_type_info::search_below_dst (1 samples, 0.01%)</title><rect x="91.9280%" y="229" width="0.0136%" height="15" fill="rgb(245,88,54)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="239.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__vmi_class_type_info::search_above_dst (1 samples, 0.01%)</title><rect x="91.9280%" y="213" width="0.0136%" height="15" fill="rgb(205,146,20)" fg:x="6742" fg:w="1"/><text x="92.1780%" y="223.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="91.9416%" y="485" width="0.0136%" height="15" fill="rgb(220,161,25)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="495.50"></text></g><g><title>Security`SecTrustDestroy (1 samples, 0.01%)</title><rect x="91.9416%" y="469" width="0.0136%" height="15" fill="rgb(215,152,15)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="479.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (1 samples, 0.01%)</title><rect x="91.9416%" y="453" width="0.0136%" height="15" fill="rgb(233,192,44)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="463.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="91.9416%" y="437" width="0.0136%" height="15" fill="rgb(240,170,46)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="447.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (1 samples, 0.01%)</title><rect x="91.9416%" y="421" width="0.0136%" height="15" fill="rgb(207,104,33)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.01%)</title><rect x="91.9416%" y="405" width="0.0136%" height="15" fill="rgb(219,21,39)" fg:x="6743" fg:w="1"/><text x="92.1916%" y="415.50"></text></g><g><title>Security`CSSM_FreeKey (1 samples, 0.01%)</title><rect x="91.9553%" y="405" width="0.0136%" height="15" fill="rgb(214,133,29)" fg:x="6744" fg:w="1"/><text x="92.2053%" y="415.50"></text></g><g><title>Security`setCountLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="91.9553%" y="389" width="0.0136%" height="15" fill="rgb(226,93,6)" fg:x="6744" fg:w="1"/><text x="92.2053%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (1 samples, 0.01%)</title><rect x="91.9553%" y="373" width="0.0136%" height="15" fill="rgb(252,222,34)" fg:x="6744" fg:w="1"/><text x="92.2053%" y="383.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.01%)</title><rect x="91.9553%" y="357" width="0.0136%" height="15" fill="rgb(252,92,48)" fg:x="6744" fg:w="1"/><text x="92.2053%" y="367.50"></text></g><g><title>Security`SecKeyGetCSPHandle (1 samples, 0.01%)</title><rect x="91.9689%" y="405" width="0.0136%" height="15" fill="rgb(245,223,24)" fg:x="6745" fg:w="1"/><text x="92.2189%" y="415.50"></text></g><g><title>Security`setCountLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="91.9689%" y="389" width="0.0136%" height="15" fill="rgb(205,176,3)" fg:x="6745" fg:w="1"/><text x="92.2189%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSCFBoolean retain] (1 samples, 0.01%)</title><rect x="91.9689%" y="373" width="0.0136%" height="15" fill="rgb(235,151,15)" fg:x="6745" fg:w="1"/><text x="92.2189%" y="383.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (1 samples, 0.01%)</title><rect x="91.9825%" y="389" width="0.0136%" height="15" fill="rgb(237,209,11)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="399.50"></text></g><g><title>Security`HandleContext::Maker::operator() (1 samples, 0.01%)</title><rect x="91.9825%" y="373" width="0.0136%" height="15" fill="rgb(243,227,24)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="383.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.01%)</title><rect x="91.9825%" y="357" width="0.0136%" height="15" fill="rgb(239,193,16)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="367.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.01%)</title><rect x="91.9825%" y="341" width="0.0136%" height="15" fill="rgb(231,27,9)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="351.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="91.9825%" y="325" width="0.0136%" height="15" fill="rgb(219,169,10)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (1 samples, 0.01%)</title><rect x="91.9825%" y="309" width="0.0136%" height="15" fill="rgb(244,229,43)" fg:x="6746" fg:w="1"/><text x="92.2325%" y="319.50"></text></g><g><title>Security`CSSM_DeleteContext (1 samples, 0.01%)</title><rect x="91.9962%" y="389" width="0.0136%" height="15" fill="rgb(254,38,20)" fg:x="6747" fg:w="1"/><text x="92.2462%" y="399.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.01%)</title><rect x="91.9962%" y="373" width="0.0136%" height="15" fill="rgb(250,47,30)" fg:x="6747" fg:w="1"/><text x="92.2462%" y="383.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.01%)</title><rect x="91.9962%" y="357" width="0.0136%" height="15" fill="rgb(224,124,36)" fg:x="6747" fg:w="1"/><text x="92.2462%" y="367.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="91.9962%" y="341" width="0.0136%" height="15" fill="rgb(246,68,51)" fg:x="6747" fg:w="1"/><text x="92.2462%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (1 samples, 0.01%)</title><rect x="91.9962%" y="325" width="0.0136%" height="15" fill="rgb(253,43,49)" fg:x="6747" fg:w="1"/><text x="92.2462%" y="335.50"></text></g><g><title>Security`CSSM_UpdateContextAttributes (1 samples, 0.01%)</title><rect x="92.0098%" y="389" width="0.0136%" height="15" fill="rgb(219,54,36)" fg:x="6748" fg:w="1"/><text x="92.2598%" y="399.50"></text></g><g><title>Security`HandleContext::mergeAttributes (1 samples, 0.01%)</title><rect x="92.0098%" y="373" width="0.0136%" height="15" fill="rgb(227,133,34)" fg:x="6748" fg:w="1"/><text x="92.2598%" y="383.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.01%)</title><rect x="92.0098%" y="357" width="0.0136%" height="15" fill="rgb(247,227,15)" fg:x="6748" fg:w="1"/><text x="92.2598%" y="367.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.01%)</title><rect x="92.0098%" y="341" width="0.0136%" height="15" fill="rgb(229,96,14)" fg:x="6748" fg:w="1"/><text x="92.2598%" y="351.50"></text></g><g><title>Security`SecExport::Key::exportRep (6 samples, 0.08%)</title><rect x="91.9553%" y="421" width="0.0818%" height="15" fill="rgb(220,79,17)" fg:x="6744" fg:w="6"/><text x="92.2053%" y="431.50"></text></g><g><title>Security`impExpExportKeyCommon (4 samples, 0.05%)</title><rect x="91.9825%" y="405" width="0.0545%" height="15" fill="rgb(205,131,53)" fg:x="6746" fg:w="4"/><text x="92.2325%" y="415.50"></text></g><g><title>Security`SecKeyGetCSSMKey (1 samples, 0.01%)</title><rect x="92.0235%" y="389" width="0.0136%" height="15" fill="rgb(209,50,29)" fg:x="6749" fg:w="1"/><text x="92.2735%" y="399.50"></text></g><g><title>Foundation`+[NSThread currentThread] (1 samples, 0.01%)</title><rect x="92.0235%" y="373" width="0.0136%" height="15" fill="rgb(245,86,46)" fg:x="6749" fg:w="1"/><text x="92.2735%" y="383.50"></text></g><g><title>Security`SecECKeyCopyPublicBits (7 samples, 0.10%)</title><rect x="91.9553%" y="485" width="0.0954%" height="15" fill="rgb(235,66,46)" fg:x="6744" fg:w="7"/><text x="92.2053%" y="495.50"></text></g><g><title>Security`SecKeyCopyPublicBytes (7 samples, 0.10%)</title><rect x="91.9553%" y="469" width="0.0954%" height="15" fill="rgb(232,148,31)" fg:x="6744" fg:w="7"/><text x="92.2053%" y="479.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (7 samples, 0.10%)</title><rect x="91.9553%" y="453" width="0.0954%" height="15" fill="rgb(217,149,8)" fg:x="6744" fg:w="7"/><text x="92.2053%" y="463.50"></text></g><g><title>Security`SecKeychainItemExport (7 samples, 0.10%)</title><rect x="91.9553%" y="437" width="0.0954%" height="15" fill="rgb(209,183,11)" fg:x="6744" fg:w="7"/><text x="92.2053%" y="447.50"></text></g><g><title>Security`impExpAddToExportReps(void const*, __CFArray*, unsigned int&amp;, unsigned int&amp;) (1 samples, 0.01%)</title><rect x="92.0371%" y="421" width="0.0136%" height="15" fill="rgb(208,55,20)" fg:x="6750" fg:w="1"/><text x="92.2871%" y="431.50"></text></g><g><title>Security`Security::KeychainCore::SecExportRep::vend (1 samples, 0.01%)</title><rect x="92.0371%" y="405" width="0.0136%" height="15" fill="rgb(218,39,14)" fg:x="6750" fg:w="1"/><text x="92.2871%" y="415.50"></text></g><g><title>libsystem_trace.dylib`DYLD-STUB$$voucher_get_activity_id (1 samples, 0.01%)</title><rect x="92.0371%" y="389" width="0.0136%" height="15" fill="rgb(216,169,33)" fg:x="6750" fg:w="1"/><text x="92.2871%" y="399.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_release (1 samples, 0.01%)</title><rect x="92.0507%" y="453" width="0.0136%" height="15" fill="rgb(233,80,24)" fg:x="6751" fg:w="1"/><text x="92.3007%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="92.0644%" y="453" width="0.0136%" height="15" fill="rgb(213,179,31)" fg:x="6752" fg:w="1"/><text x="92.3144%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (3 samples, 0.04%)</title><rect x="92.0507%" y="469" width="0.0409%" height="15" fill="rgb(209,19,5)" fg:x="6751" fg:w="3"/><text x="92.3007%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.01%)</title><rect x="92.0780%" y="453" width="0.0136%" height="15" fill="rgb(219,18,35)" fg:x="6753" fg:w="1"/><text x="92.3280%" y="463.50"></text></g><g><title>Security`DYLD-STUB$$CC_SHA1 (2 samples, 0.03%)</title><rect x="92.0916%" y="453" width="0.0273%" height="15" fill="rgb(209,169,16)" fg:x="6754" fg:w="2"/><text x="92.3416%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.01%)</title><rect x="92.1189%" y="437" width="0.0136%" height="15" fill="rgb(245,90,51)" fg:x="6756" fg:w="1"/><text x="92.3689%" y="447.50"></text></g><g><title>CoreFoundation`mdict_rehashd (1 samples, 0.01%)</title><rect x="92.1189%" y="421" width="0.0136%" height="15" fill="rgb(220,99,45)" fg:x="6756" fg:w="1"/><text x="92.3689%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="92.1189%" y="405" width="0.0136%" height="15" fill="rgb(249,89,25)" fg:x="6756" fg:w="1"/><text x="92.3689%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.01%)</title><rect x="92.1189%" y="389" width="0.0136%" height="15" fill="rgb(239,193,0)" fg:x="6756" fg:w="1"/><text x="92.3689%" y="399.50"></text></g><g><title>CoreFoundation`objc_msgSend$isEqual: (1 samples, 0.01%)</title><rect x="92.1325%" y="437" width="0.0136%" height="15" fill="rgb(231,126,1)" fg:x="6757" fg:w="1"/><text x="92.3825%" y="447.50"></text></g><g><title>CoreFoundation`CFDataReplaceBytes (1 samples, 0.01%)</title><rect x="92.1598%" y="389" width="0.0136%" height="15" fill="rgb(243,166,3)" fg:x="6759" fg:w="1"/><text x="92.4098%" y="399.50"></text></g><g><title>CoreFoundation`__CFDataGrow (1 samples, 0.01%)</title><rect x="92.1598%" y="373" width="0.0136%" height="15" fill="rgb(223,22,34)" fg:x="6759" fg:w="1"/><text x="92.4098%" y="383.50"></text></g><g><title>Security`Attachment::Attachment (1 samples, 0.01%)</title><rect x="92.1871%" y="325" width="0.0136%" height="15" fill="rgb(251,52,51)" fg:x="6761" fg:w="1"/><text x="92.4371%" y="335.50"></text></g><g><title>Security`CSSM_SPI_ModuleAttach__apple_csp (1 samples, 0.01%)</title><rect x="92.1871%" y="309" width="0.0136%" height="15" fill="rgb(221,165,28)" fg:x="6761" fg:w="1"/><text x="92.4371%" y="319.50"></text></g><g><title>Security`Security::CssmPlugin::moduleAttach (1 samples, 0.01%)</title><rect x="92.1871%" y="293" width="0.0136%" height="15" fill="rgb(218,121,47)" fg:x="6761" fg:w="1"/><text x="92.4371%" y="303.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;Security::Mutex::lock(), &amp;Security::Mutex::unlock()&gt;::~StLock (1 samples, 0.01%)</title><rect x="92.1871%" y="277" width="0.0136%" height="15" fill="rgb(209,120,9)" fg:x="6761" fg:w="1"/><text x="92.4371%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="92.1871%" y="261" width="0.0136%" height="15" fill="rgb(236,68,12)" fg:x="6761" fg:w="1"/><text x="92.4371%" y="271.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (3 samples, 0.04%)</title><rect x="92.1734%" y="373" width="0.0409%" height="15" fill="rgb(225,194,26)" fg:x="6760" fg:w="3"/><text x="92.4234%" y="383.50"></text></g><g><title>Security`CSSM_ModuleAttach (3 samples, 0.04%)</title><rect x="92.1734%" y="357" width="0.0409%" height="15" fill="rgb(231,84,39)" fg:x="6760" fg:w="3"/><text x="92.4234%" y="367.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;2u, cssm_spi_csp_funcs, &amp;CSPNameTable&gt;::make (2 samples, 0.03%)</title><rect x="92.1871%" y="341" width="0.0273%" height="15" fill="rgb(210,11,45)" fg:x="6761" fg:w="2"/><text x="92.4371%" y="351.50"></text></g><g><title>Security`CSSM_SPI_ModuleAttach__apple_csp (1 samples, 0.01%)</title><rect x="92.2007%" y="325" width="0.0136%" height="15" fill="rgb(224,54,52)" fg:x="6762" fg:w="1"/><text x="92.4507%" y="335.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;Security::Mutex::lock(), &amp;Security::Mutex::unlock()&gt;::~StLock (1 samples, 0.01%)</title><rect x="92.2143%" y="373" width="0.0136%" height="15" fill="rgb(238,102,14)" fg:x="6763" fg:w="1"/><text x="92.4643%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.01%)</title><rect x="92.2143%" y="357" width="0.0136%" height="15" fill="rgb(243,160,52)" fg:x="6763" fg:w="1"/><text x="92.4643%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.01%)</title><rect x="92.2143%" y="341" width="0.0136%" height="15" fill="rgb(216,114,19)" fg:x="6763" fg:w="1"/><text x="92.4643%" y="351.50"></text></g><g><title>Security`SecKeyGetCSPHandle (5 samples, 0.07%)</title><rect x="92.1734%" y="389" width="0.0682%" height="15" fill="rgb(244,166,37)" fg:x="6760" fg:w="5"/><text x="92.4234%" y="399.50"></text></g><g><title>Security`std::__1::pair&lt;std::__1::__tree_iterator&lt;Security::CssmClient::CSP, std::__1::__tree_node&lt;Security::CssmClient::CSP, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;Security::CssmClient::CSP, std::__1::less&lt;Security::CssmClient::CSP&gt;, std::__1::allocator&lt;Security::CssmClient::CSP&gt;&gt;::__emplace_unique_key_args&lt;Security::CssmClient::CSP, Security::CssmClient::CSP const&amp;&gt; (1 samples, 0.01%)</title><rect x="92.2280%" y="373" width="0.0136%" height="15" fill="rgb(246,29,44)" fg:x="6764" fg:w="1"/><text x="92.4780%" y="383.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::operator&lt; (1 samples, 0.01%)</title><rect x="92.2280%" y="357" width="0.0136%" height="15" fill="rgb(215,56,53)" fg:x="6764" fg:w="1"/><text x="92.4780%" y="367.50"></text></g><g><title>Security`CSSM_DeleteContext (1 samples, 0.01%)</title><rect x="92.2416%" y="373" width="0.0136%" height="15" fill="rgb(217,60,2)" fg:x="6765" fg:w="1"/><text x="92.4916%" y="383.50"></text></g><g><title>Security`HandleContext&amp; Security::MappingHandle&lt;long&gt;::findAndLock&lt;HandleContext&gt; (1 samples, 0.01%)</title><rect x="92.2416%" y="357" width="0.0136%" height="15" fill="rgb(207,26,24)" fg:x="6765" fg:w="1"/><text x="92.4916%" y="367.50"></text></g><g><title>Security`SecExport::Key::exportRep (10 samples, 0.14%)</title><rect x="92.1462%" y="405" width="0.1364%" height="15" fill="rgb(252,210,15)" fg:x="6758" fg:w="10"/><text x="92.3962%" y="415.50"></text></g><g><title>Security`impExpExportKeyCommon (3 samples, 0.04%)</title><rect x="92.2416%" y="389" width="0.0409%" height="15" fill="rgb(253,209,26)" fg:x="6765" fg:w="3"/><text x="92.4916%" y="399.50"></text></g><g><title>Security`CSSM_UpdateContextAttributes (2 samples, 0.03%)</title><rect x="92.2552%" y="373" width="0.0273%" height="15" fill="rgb(238,170,14)" fg:x="6766" fg:w="2"/><text x="92.5052%" y="383.50"></text></g><g><title>Security`HandleContext::mergeAttributes (2 samples, 0.03%)</title><rect x="92.2552%" y="357" width="0.0273%" height="15" fill="rgb(216,178,15)" fg:x="6766" fg:w="2"/><text x="92.5052%" y="367.50"></text></g><g><title>Security`void Security::DataWalkers::walk&lt;Security::DataWalkers::SizeWalker&gt; (1 samples, 0.01%)</title><rect x="92.2689%" y="341" width="0.0136%" height="15" fill="rgb(250,197,2)" fg:x="6767" fg:w="1"/><text x="92.5189%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayAppendValue (1 samples, 0.01%)</title><rect x="92.2825%" y="389" width="0.0136%" height="15" fill="rgb(212,70,42)" fg:x="6768" fg:w="1"/><text x="92.5325%" y="399.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (1 samples, 0.01%)</title><rect x="92.2825%" y="373" width="0.0136%" height="15" fill="rgb(227,213,9)" fg:x="6768" fg:w="1"/><text x="92.5325%" y="383.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="92.2962%" y="357" width="0.0136%" height="15" fill="rgb(245,99,25)" fg:x="6769" fg:w="1"/><text x="92.5462%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (1 samples, 0.01%)</title><rect x="92.2962%" y="341" width="0.0136%" height="15" fill="rgb(250,82,29)" fg:x="6769" fg:w="1"/><text x="92.5462%" y="351.50"></text></g><g><title>Security`SecCDSAKeyCopyPublicBytes(__SecKey*, __CFData const**) (13 samples, 0.18%)</title><rect x="92.1462%" y="437" width="0.1773%" height="15" fill="rgb(241,226,54)" fg:x="6758" fg:w="13"/><text x="92.3962%" y="447.50"></text></g><g><title>Security`SecKeychainItemExport (13 samples, 0.18%)</title><rect x="92.1462%" y="421" width="0.1773%" height="15" fill="rgb(221,99,41)" fg:x="6758" fg:w="13"/><text x="92.3962%" y="431.50"></text></g><g><title>Security`impExpAddToExportReps(void const*, __CFArray*, unsigned int&amp;, unsigned int&amp;) (3 samples, 0.04%)</title><rect x="92.2825%" y="405" width="0.0409%" height="15" fill="rgb(213,90,21)" fg:x="6768" fg:w="3"/><text x="92.5325%" y="415.50"></text></g><g><title>Security`Security::KeychainCore::SecExportRep::vend (2 samples, 0.03%)</title><rect x="92.2962%" y="389" width="0.0273%" height="15" fill="rgb(205,208,24)" fg:x="6769" fg:w="2"/><text x="92.5462%" y="399.50"></text></g><g><title>Security`SecKeyGetCSSMKey (2 samples, 0.03%)</title><rect x="92.2962%" y="373" width="0.0273%" height="15" fill="rgb(246,31,12)" fg:x="6769" fg:w="2"/><text x="92.5462%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="92.3098%" y="357" width="0.0136%" height="15" fill="rgb(213,154,6)" fg:x="6770" fg:w="1"/><text x="92.5598%" y="367.50"></text></g><g><title>Security`CSSM_FreeKey (1 samples, 0.01%)</title><rect x="92.3234%" y="405" width="0.0136%" height="15" fill="rgb(222,163,29)" fg:x="6771" fg:w="1"/><text x="92.5734%" y="415.50"></text></g><g><title>Security`cssm_FreeKey(long, cssm_access_credentials const*, cssm_key*, int) (1 samples, 0.01%)</title><rect x="92.3234%" y="389" width="0.0136%" height="15" fill="rgb(227,201,8)" fg:x="6771" fg:w="1"/><text x="92.5734%" y="399.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.01%)</title><rect x="92.3234%" y="373" width="0.0136%" height="15" fill="rgb(233,9,32)" fg:x="6771" fg:w="1"/><text x="92.5734%" y="383.50"></text></g><g><title>Security`SecKeyGetCSPHandle (1 samples, 0.01%)</title><rect x="92.3371%" y="405" width="0.0136%" height="15" fill="rgb(217,54,24)" fg:x="6772" fg:w="1"/><text x="92.5871%" y="415.50"></text></g><g><title>Security`Security::SecPointerBase::SecPointerBase (1 samples, 0.01%)</title><rect x="92.3371%" y="389" width="0.0136%" height="15" fill="rgb(235,192,0)" fg:x="6772" fg:w="1"/><text x="92.5871%" y="399.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.01%)</title><rect x="92.3371%" y="373" width="0.0136%" height="15" fill="rgb(235,45,9)" fg:x="6772" fg:w="1"/><text x="92.5871%" y="383.50"></text></g><g><title>Security`DYLD-STUB$$objc_retainAutoreleasedReturnValue (1 samples, 0.01%)</title><rect x="92.3507%" y="373" width="0.0136%" height="15" fill="rgb(246,42,40)" fg:x="6773" fg:w="1"/><text x="92.6007%" y="383.50"></text></g><g><title>Security`HandleContext::validateChange (1 samples, 0.01%)</title><rect x="92.3643%" y="357" width="0.0136%" height="15" fill="rgb(248,111,24)" fg:x="6774" fg:w="1"/><text x="92.6143%" y="367.50"></text></g><g><title>Security`cssm_EventNotify(long, unsigned int, unsigned long long, cssm_context const*) (1 samples, 0.01%)</title><rect x="92.3643%" y="341" width="0.0136%" height="15" fill="rgb(249,65,22)" fg:x="6774" fg:w="1"/><text x="92.6143%" y="351.50"></text></g><g><title>Security`Security::CssmPlugin::find (1 samples, 0.01%)</title><rect x="92.3643%" y="325" width="0.0136%" height="15" fill="rgb(238,111,51)" fg:x="6774" fg:w="1"/><text x="92.6143%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.01%)</title><rect x="92.3643%" y="309" width="0.0136%" height="15" fill="rgb(250,118,22)" fg:x="6774" fg:w="1"/><text x="92.6143%" y="319.50"></text></g><g><title>Security`HandleContext::Maker::operator() (2 samples, 0.03%)</title><rect x="92.3643%" y="373" width="0.0273%" height="15" fill="rgb(234,84,26)" fg:x="6774" fg:w="2"/><text x="92.6143%" y="383.50"></text></g><g><title>Security`std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;&gt;&gt;::find&lt;long&gt; (1 samples, 0.01%)</title><rect x="92.3780%" y="357" width="0.0136%" height="15" fill="rgb(243,172,12)" fg:x="6775" fg:w="1"/><text x="92.6280%" y="367.50"></text></g><g><title>Security`CSSM_CSP_CreateSymmetricContext (4 samples, 0.05%)</title><rect x="92.3507%" y="389" width="0.0545%" height="15" fill="rgb(236,150,49)" fg:x="6773" fg:w="4"/><text x="92.6007%" y="399.50"></text></g><g><title>Security`setCountLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="92.3916%" y="373" width="0.0136%" height="15" fill="rgb(225,197,26)" fg:x="6776" fg:w="1"/><text x="92.6416%" y="383.50"></text></g><g><title>Security`CSSM_UpdateContextAttributes (1 samples, 0.01%)</title><rect x="92.4052%" y="389" width="0.0136%" height="15" fill="rgb(214,17,42)" fg:x="6777" fg:w="1"/><text x="92.6552%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.01%)</title><rect x="92.4052%" y="373" width="0.0136%" height="15" fill="rgb(224,165,40)" fg:x="6777" fg:w="1"/><text x="92.6552%" y="383.50"></text></g><g><title>Security`SecKeychainItemExport (8 samples, 0.11%)</title><rect x="92.3234%" y="437" width="0.1091%" height="15" fill="rgb(246,100,4)" fg:x="6771" fg:w="8"/><text x="92.5734%" y="447.50"></text></g><g><title>Security`SecExport::Key::exportRep (8 samples, 0.11%)</title><rect x="92.3234%" y="421" width="0.1091%" height="15" fill="rgb(222,103,0)" fg:x="6771" fg:w="8"/><text x="92.5734%" y="431.50"></text></g><g><title>Security`impExpExportKeyCommon (6 samples, 0.08%)</title><rect x="92.3507%" y="405" width="0.0818%" height="15" fill="rgb(227,189,26)" fg:x="6773" fg:w="6"/><text x="92.6007%" y="415.50"></text></g><g><title>Security`SecKeyGetCSSMKey (1 samples, 0.01%)</title><rect x="92.4189%" y="389" width="0.0136%" height="15" fill="rgb(214,202,17)" fg:x="6778" fg:w="1"/><text x="92.6689%" y="399.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="92.4189%" y="373" width="0.0136%" height="15" fill="rgb(229,111,3)" fg:x="6778" fg:w="1"/><text x="92.6689%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.01%)</title><rect x="92.4189%" y="357" width="0.0136%" height="15" fill="rgb(229,172,15)" fg:x="6778" fg:w="1"/><text x="92.6689%" y="367.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="92.4325%" y="437" width="0.0136%" height="15" fill="rgb(230,224,35)" fg:x="6779" fg:w="1"/><text x="92.6825%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.01%)</title><rect x="92.4325%" y="421" width="0.0136%" height="15" fill="rgb(251,141,6)" fg:x="6779" fg:w="1"/><text x="92.6825%" y="431.50"></text></g><g><title>libcommonCrypto.dylib`CCDigest (1 samples, 0.01%)</title><rect x="92.4461%" y="421" width="0.0136%" height="15" fill="rgb(225,208,6)" fg:x="6780" fg:w="1"/><text x="92.6961%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (1 samples, 0.01%)</title><rect x="92.4461%" y="405" width="0.0136%" height="15" fill="rgb(246,181,16)" fg:x="6780" fg:w="1"/><text x="92.6961%" y="415.50"></text></g><g><title>Security`SecECKeyGetNamedCurve (31 samples, 0.42%)</title><rect x="92.0507%" y="485" width="0.4227%" height="15" fill="rgb(227,129,36)" fg:x="6751" fg:w="31"/><text x="92.3007%" y="495.50"></text></g><g><title>Security`SecKeyCopyAttributes (28 samples, 0.38%)</title><rect x="92.0916%" y="469" width="0.3818%" height="15" fill="rgb(248,117,24)" fg:x="6754" fg:w="28"/><text x="92.3416%" y="479.50"></text></g><g><title>Security`SecCDSAKeyCopyAttributeDictionary(__SecKey*) (26 samples, 0.35%)</title><rect x="92.1189%" y="453" width="0.3545%" height="15" fill="rgb(214,185,35)" fg:x="6756" fg:w="26"/><text x="92.3689%" y="463.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA1 (2 samples, 0.03%)</title><rect x="92.4461%" y="437" width="0.0273%" height="15" fill="rgb(236,150,34)" fg:x="6780" fg:w="2"/><text x="92.6961%" y="447.50"></text></g><g><title>libcorecrypto.dylib`ccdigest (1 samples, 0.01%)</title><rect x="92.4598%" y="421" width="0.0136%" height="15" fill="rgb(243,228,27)" fg:x="6781" fg:w="1"/><text x="92.7098%" y="431.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::AttachmentImpl (1 samples, 0.01%)</title><rect x="92.4734%" y="405" width="0.0136%" height="15" fill="rgb(245,77,44)" fg:x="6782" fg:w="1"/><text x="92.7234%" y="415.50"></text></g><g><title>Security`Security::CssmClient::CssmImpl&amp; Security::CssmClient::Object::impl&lt;Security::CssmClient::CssmImpl&gt; (1 samples, 0.01%)</title><rect x="92.4734%" y="389" width="0.0136%" height="15" fill="rgb(235,214,42)" fg:x="6782" fg:w="1"/><text x="92.7234%" y="399.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.01%)</title><rect x="92.4734%" y="373" width="0.0136%" height="15" fill="rgb(221,74,3)" fg:x="6782" fg:w="1"/><text x="92.7234%" y="383.50"></text></g><g><title>libc+ (1 samples, 0.01%)</title><rect x="92.4734%" y="357" width="0.0136%" height="15" fill="rgb(206,121,29)" fg:x="6782" fg:w="1"/><text x="92.7234%" y="367.50"></text></g><g><title>Security`Security::CssmClient::CL::CL (2 samples, 0.03%)</title><rect x="92.4734%" y="421" width="0.0273%" height="15" fill="rgb(249,131,53)" fg:x="6782" fg:w="2"/><text x="92.7234%" y="431.50"></text></g><g><title>Security`Security::CssmClient::ObjectImpl::ObjectImpl (1 samples, 0.01%)</title><rect x="92.4870%" y="405" width="0.0136%" height="15" fill="rgb(236,170,29)" fg:x="6783" fg:w="1"/><text x="92.7370%" y="415.50"></text></g><g><title>Security`SecCertificateCreateItemImplInstance (3 samples, 0.04%)</title><rect x="92.4734%" y="453" width="0.0409%" height="15" fill="rgb(247,96,15)" fg:x="6782" fg:w="3"/><text x="92.7234%" y="463.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::Certificate (3 samples, 0.04%)</title><rect x="92.4734%" y="437" width="0.0409%" height="15" fill="rgb(211,210,7)" fg:x="6782" fg:w="3"/><text x="92.7234%" y="447.50"></text></g><g><title>Security`Security::KeychainCore::ItemImpl::ItemImpl (1 samples, 0.01%)</title><rect x="92.5007%" y="421" width="0.0136%" height="15" fill="rgb(240,88,50)" fg:x="6784" fg:w="1"/><text x="92.7507%" y="431.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;Security::Mutex::lock(), &amp;Security::Mutex::unlock()&gt;::~StLock (1 samples, 0.01%)</title><rect x="92.5007%" y="405" width="0.0136%" height="15" fill="rgb(209,229,26)" fg:x="6784" fg:w="1"/><text x="92.7507%" y="415.50"></text></g><g><title>Security`Security::CssmClient::CSP::CSP (1 samples, 0.01%)</title><rect x="92.5143%" y="437" width="0.0136%" height="15" fill="rgb(210,68,23)" fg:x="6785" fg:w="1"/><text x="92.7643%" y="447.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::AttachmentImpl (1 samples, 0.01%)</title><rect x="92.5143%" y="421" width="0.0136%" height="15" fill="rgb(229,180,13)" fg:x="6785" fg:w="1"/><text x="92.7643%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="92.5143%" y="405" width="0.0136%" height="15" fill="rgb(236,53,44)" fg:x="6785" fg:w="1"/><text x="92.7643%" y="415.50"></text></g><g><title>Security`Security::CssmClient::Key::Key (1 samples, 0.01%)</title><rect x="92.5280%" y="437" width="0.0136%" height="15" fill="rgb(244,214,29)" fg:x="6786" fg:w="1"/><text x="92.7780%" y="447.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.01%)</title><rect x="92.5280%" y="421" width="0.0136%" height="15" fill="rgb(220,75,29)" fg:x="6786" fg:w="1"/><text x="92.7780%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="92.5280%" y="405" width="0.0136%" height="15" fill="rgb(214,183,37)" fg:x="6786" fg:w="1"/><text x="92.7780%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="92.5280%" y="389" width="0.0136%" height="15" fill="rgb(239,117,29)" fg:x="6786" fg:w="1"/><text x="92.7780%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="92.5280%" y="373" width="0.0136%" height="15" fill="rgb(237,171,35)" fg:x="6786" fg:w="1"/><text x="92.7780%" y="383.50"></text></g><g><title>Security`StandardAttachment&lt;2u, cssm_spi_csp_funcs&gt;&amp; Security::MappingHandle&lt;long&gt;::findAndLock&lt;StandardAttachment&lt;2u, cssm_spi_csp_funcs&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5416%" y="325" width="0.0136%" height="15" fill="rgb(229,178,53)" fg:x="6787" fg:w="1"/><text x="92.7916%" y="335.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.01%)</title><rect x="92.5416%" y="309" width="0.0136%" height="15" fill="rgb(210,102,19)" fg:x="6787" fg:w="1"/><text x="92.7916%" y="319.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__si_class_type_info::search_above_dst (1 samples, 0.01%)</title><rect x="92.5416%" y="293" width="0.0136%" height="15" fill="rgb(235,127,22)" fg:x="6787" fg:w="1"/><text x="92.7916%" y="303.50"></text></g><g><title>libc++abi.dylib`std::type_info::operator==[abi:v15006] (1 samples, 0.01%)</title><rect x="92.5416%" y="277" width="0.0136%" height="15" fill="rgb(244,31,31)" fg:x="6787" fg:w="1"/><text x="92.7916%" y="287.50"></text></g><g><title>Security`gcompg (1 samples, 0.01%)</title><rect x="92.5552%" y="197" width="0.0136%" height="15" fill="rgb(231,43,21)" fg:x="6788" fg:w="1"/><text x="92.8052%" y="207.50"></text></g><g><title>Security`grammarSquare (1 samples, 0.01%)</title><rect x="92.5689%" y="197" width="0.0136%" height="15" fill="rgb(217,131,35)" fg:x="6789" fg:w="1"/><text x="92.8189%" y="207.50"></text></g><g><title>Security`CryptKit::FEEKeyInfoProvider::QueryKeySizeInBits (3 samples, 0.04%)</title><rect x="92.5552%" y="293" width="0.0409%" height="15" fill="rgb(221,149,4)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="303.50"></text></g><g><title>Security`CryptKit::rawCssmKeyToFee (3 samples, 0.04%)</title><rect x="92.5552%" y="277" width="0.0409%" height="15" fill="rgb(232,170,28)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="287.50"></text></g><g><title>Security`feePubKeyInitFromECDSAPubBlob (3 samples, 0.04%)</title><rect x="92.5552%" y="261" width="0.0409%" height="15" fill="rgb(238,56,10)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="271.50"></text></g><g><title>Security`curveParamsForDepth (3 samples, 0.04%)</title><rect x="92.5552%" y="245" width="0.0409%" height="15" fill="rgb(235,196,14)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="255.50"></text></g><g><title>Security`curveParamsInferFields (3 samples, 0.04%)</title><rect x="92.5552%" y="229" width="0.0409%" height="15" fill="rgb(216,45,48)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="239.50"></text></g><g><title>Security`make_recip (3 samples, 0.04%)</title><rect x="92.5552%" y="213" width="0.0409%" height="15" fill="rgb(238,213,17)" fg:x="6788" fg:w="3"/><text x="92.8052%" y="223.50"></text></g><g><title>Security`mulg (1 samples, 0.01%)</title><rect x="92.5825%" y="197" width="0.0136%" height="15" fill="rgb(212,13,2)" fg:x="6790" fg:w="1"/><text x="92.8325%" y="207.50"></text></g><g><title>Security`AppleCSPSession::getKeySize (5 samples, 0.07%)</title><rect x="92.5552%" y="309" width="0.0682%" height="15" fill="rgb(240,114,20)" fg:x="6788" fg:w="5"/><text x="92.8052%" y="319.50"></text></g><g><title>Security`feePubKeyFree (2 samples, 0.03%)</title><rect x="92.5961%" y="293" width="0.0273%" height="15" fill="rgb(228,41,40)" fg:x="6791" fg:w="2"/><text x="92.8461%" y="303.50"></text></g><g><title>Security`freeCurveParams (2 samples, 0.03%)</title><rect x="92.5961%" y="277" width="0.0273%" height="15" fill="rgb(244,132,35)" fg:x="6791" fg:w="2"/><text x="92.8461%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="92.5961%" y="261" width="0.0273%" height="15" fill="rgb(253,189,4)" fg:x="6791" fg:w="2"/><text x="92.8461%" y="271.50"></text></g><g><title>Security`CSSM_CL_CertGetFirstCachedFieldValue (7 samples, 0.10%)</title><rect x="92.5416%" y="421" width="0.0954%" height="15" fill="rgb(224,37,19)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="431.50"></text></g><g><title>Security`cssm_CertGetFirstCachedFieldValue(long, long, cssm_data const*, long*, unsigned int*, cssm_data**) (7 samples, 0.10%)</title><rect x="92.5416%" y="405" width="0.0954%" height="15" fill="rgb(235,223,18)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="415.50"></text></g><g><title>Security`AppleX509CLSession::CertGetFirstCachedFieldValue (7 samples, 0.10%)</title><rect x="92.5416%" y="389" width="0.0954%" height="15" fill="rgb(235,163,25)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="399.50"></text></g><g><title>Security`getField_PublicKeyStruct(DecodedItem&amp;, unsigned int, unsigned int&amp;, Security::CssmOwnedData&amp;) (7 samples, 0.10%)</title><rect x="92.5416%" y="373" width="0.0954%" height="15" fill="rgb(217,145,28)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="383.50"></text></g><g><title>Security`CL_extractCSSMKeyNSS(SecAsn1PubKeyInfo const&amp;, Security::Allocator&amp;, DecodedCert const*) (7 samples, 0.10%)</title><rect x="92.5416%" y="357" width="0.0954%" height="15" fill="rgb(223,223,32)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="367.50"></text></g><g><title>Security`CSSM_QueryKeySizeInBits (7 samples, 0.10%)</title><rect x="92.5416%" y="341" width="0.0954%" height="15" fill="rgb(227,189,39)" fg:x="6787" fg:w="7"/><text x="92.7916%" y="351.50"></text></g><g><title>Security`cssm_QueryKeySizeInBits(long, unsigned long long, cssm_context const*, cssm_key const*, cssm_key_size*) (6 samples, 0.08%)</title><rect x="92.5552%" y="325" width="0.0818%" height="15" fill="rgb(248,10,22)" fg:x="6788" fg:w="6"/><text x="92.8052%" y="335.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 0.01%)</title><rect x="92.6234%" y="309" width="0.0136%" height="15" fill="rgb(248,46,39)" fg:x="6793" fg:w="1"/><text x="92.8734%" y="319.50"></text></g><g><title>Security`DefaultAllocator::realloc (1 samples, 0.01%)</title><rect x="92.6507%" y="261" width="0.0136%" height="15" fill="rgb(248,113,48)" fg:x="6795" fg:w="1"/><text x="92.9007%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="92.6507%" y="245" width="0.0136%" height="15" fill="rgb(245,16,25)" fg:x="6795" fg:w="1"/><text x="92.9007%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="92.6507%" y="229" width="0.0136%" height="15" fill="rgb(249,152,16)" fg:x="6795" fg:w="1"/><text x="92.9007%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="92.6507%" y="213" width="0.0136%" height="15" fill="rgb(250,16,1)" fg:x="6795" fg:w="1"/><text x="92.9007%" y="223.50"></text></g><g><title>Security`Security::CssmMemoryFunctionsAllocator::realloc (2 samples, 0.03%)</title><rect x="92.6507%" y="277" width="0.0273%" height="15" fill="rgb(249,138,3)" fg:x="6795" fg:w="2"/><text x="92.9007%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="92.6643%" y="261" width="0.0136%" height="15" fill="rgb(227,71,41)" fg:x="6796" fg:w="1"/><text x="92.9143%" y="271.50"></text></g><g><title>Security`std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::__unordered_map_hasher&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::hash&lt;long&gt;, std::__1::equal_to&lt;long&gt;, true&gt;, std::__1::__unordered_map_equal&lt;long, std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;, std::__1::equal_to&lt;long&gt;, std::__1::hash&lt;long&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;long, Security::MappingHandle&lt;long&gt;*&gt;&gt;&gt;::find&lt;long&gt; (1 samples, 0.01%)</title><rect x="92.6779%" y="277" width="0.0136%" height="15" fill="rgb(209,184,23)" fg:x="6797" fg:w="1"/><text x="92.9279%" y="287.50"></text></g><g><title>Security`DecodedExtensions::addExtension (5 samples, 0.07%)</title><rect x="92.6370%" y="325" width="0.0682%" height="15" fill="rgb(223,215,31)" fg:x="6794" fg:w="5"/><text x="92.8870%" y="335.50"></text></g><g><title>Security`Security::PluginSession::realloc (4 samples, 0.05%)</title><rect x="92.6507%" y="309" width="0.0545%" height="15" fill="rgb(210,146,28)" fg:x="6795" fg:w="4"/><text x="92.9007%" y="319.50"></text></g><g><title>Security`Attachment::upcallRealloc (4 samples, 0.05%)</title><rect x="92.6507%" y="293" width="0.0545%" height="15" fill="rgb(209,183,41)" fg:x="6795" fg:w="4"/><text x="92.9007%" y="303.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 0.01%)</title><rect x="92.6916%" y="277" width="0.0136%" height="15" fill="rgb(209,224,45)" fg:x="6798" fg:w="1"/><text x="92.9416%" y="287.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__si_class_type_info::search_below_dst (1 samples, 0.01%)</title><rect x="92.6916%" y="261" width="0.0136%" height="15" fill="rgb(224,209,51)" fg:x="6798" fg:w="1"/><text x="92.9416%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.01%)</title><rect x="92.6916%" y="245" width="0.0136%" height="15" fill="rgb(223,17,39)" fg:x="6798" fg:w="1"/><text x="92.9416%" y="255.50"></text></g><g><title>Security`SEC_ASN1DecoderStart (1 samples, 0.01%)</title><rect x="92.7052%" y="309" width="0.0136%" height="15" fill="rgb(234,204,37)" fg:x="6799" fg:w="1"/><text x="92.9552%" y="319.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.01%)</title><rect x="92.7052%" y="293" width="0.0136%" height="15" fill="rgb(236,120,5)" fg:x="6799" fg:w="1"/><text x="92.9552%" y="303.50"></text></g><g><title>Security`PL_ArenaAllocate (1 samples, 0.01%)</title><rect x="92.7052%" y="277" width="0.0136%" height="15" fill="rgb(248,97,27)" fg:x="6799" fg:w="1"/><text x="92.9552%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="92.7052%" y="261" width="0.0136%" height="15" fill="rgb(240,66,17)" fg:x="6799" fg:w="1"/><text x="92.9552%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="92.7052%" y="245" width="0.0136%" height="15" fill="rgb(210,79,3)" fg:x="6799" fg:w="1"/><text x="92.9552%" y="255.50"></text></g><g><title>Security`sec_asn1d_add_to_subitems (1 samples, 0.01%)</title><rect x="92.7734%" y="293" width="0.0136%" height="15" fill="rgb(214,176,27)" fg:x="6804" fg:w="1"/><text x="93.0234%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="92.7734%" y="277" width="0.0136%" height="15" fill="rgb(235,185,3)" fg:x="6804" fg:w="1"/><text x="93.0234%" y="287.50"></text></g><g><title>Security`sec_asn1d_zalloc (1 samples, 0.01%)</title><rect x="92.7870%" y="293" width="0.0136%" height="15" fill="rgb(227,24,12)" fg:x="6805" fg:w="1"/><text x="93.0370%" y="303.50"></text></g><g><title>Security`SEC_ASN1Decode (8 samples, 0.11%)</title><rect x="92.7052%" y="325" width="0.1091%" height="15" fill="rgb(252,169,48)" fg:x="6799" fg:w="8"/><text x="92.9552%" y="335.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (7 samples, 0.10%)</title><rect x="92.7188%" y="309" width="0.0954%" height="15" fill="rgb(212,65,1)" fg:x="6800" fg:w="7"/><text x="92.9688%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="92.8007%" y="293" width="0.0136%" height="15" fill="rgb(242,39,24)" fg:x="6806" fg:w="1"/><text x="93.0507%" y="303.50"></text></g><g><title>Security`clCompareCssmData(cssm_data const*, cssm_data const*) (1 samples, 0.01%)</title><rect x="92.8143%" y="325" width="0.0136%" height="15" fill="rgb(249,32,23)" fg:x="6807" fg:w="1"/><text x="93.0643%" y="335.50"></text></g><g><title>Security`DecodedExtensions::decodeFromNss (15 samples, 0.20%)</title><rect x="92.6370%" y="341" width="0.2045%" height="15" fill="rgb(251,195,23)" fg:x="6794" fg:w="15"/><text x="92.8870%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="92.8279%" y="325" width="0.0136%" height="15" fill="rgb(236,174,8)" fg:x="6808" fg:w="1"/><text x="93.0779%" y="335.50"></text></g><g><title>Security`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="92.9097%" y="293" width="0.0136%" height="15" fill="rgb(220,197,8)" fg:x="6814" fg:w="1"/><text x="93.1597%" y="303.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.01%)</title><rect x="92.9234%" y="277" width="0.0136%" height="15" fill="rgb(240,108,37)" fg:x="6815" fg:w="1"/><text x="93.1734%" y="287.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (5 samples, 0.07%)</title><rect x="92.8825%" y="309" width="0.0682%" height="15" fill="rgb(232,176,24)" fg:x="6812" fg:w="5"/><text x="93.1325%" y="319.50"></text></g><g><title>Security`sec_asn1d_push_state (2 samples, 0.03%)</title><rect x="92.9234%" y="293" width="0.0273%" height="15" fill="rgb(243,35,29)" fg:x="6815" fg:w="2"/><text x="93.1734%" y="303.50"></text></g><g><title>Security`sec_asn1d_zalloc (1 samples, 0.01%)</title><rect x="92.9370%" y="277" width="0.0136%" height="15" fill="rgb(210,37,18)" fg:x="6816" fg:w="1"/><text x="93.1870%" y="287.50"></text></g><g><title>Security`sec_asn1d_init_state_based_on_template (2 samples, 0.03%)</title><rect x="92.9506%" y="309" width="0.0273%" height="15" fill="rgb(224,184,40)" fg:x="6817" fg:w="2"/><text x="93.2006%" y="319.50"></text></g><g><title>Security`sec_asn1d_parse_leaf (1 samples, 0.01%)</title><rect x="92.9779%" y="309" width="0.0136%" height="15" fill="rgb(236,39,29)" fg:x="6819" fg:w="1"/><text x="93.2279%" y="319.50"></text></g><g><title>Security`sec_asn1d_push_state (1 samples, 0.01%)</title><rect x="92.9915%" y="309" width="0.0136%" height="15" fill="rgb(232,48,39)" fg:x="6820" fg:w="1"/><text x="93.2415%" y="319.50"></text></g><g><title>Security`sec_asn1d_zalloc (1 samples, 0.01%)</title><rect x="92.9915%" y="293" width="0.0136%" height="15" fill="rgb(236,34,42)" fg:x="6820" fg:w="1"/><text x="93.2415%" y="303.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.01%)</title><rect x="92.9915%" y="277" width="0.0136%" height="15" fill="rgb(243,106,37)" fg:x="6820" fg:w="1"/><text x="93.2415%" y="287.50"></text></g><g><title>Security`SEC_ASN1Decode (13 samples, 0.18%)</title><rect x="92.8416%" y="341" width="0.1773%" height="15" fill="rgb(218,96,6)" fg:x="6809" fg:w="13"/><text x="93.0916%" y="351.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (13 samples, 0.18%)</title><rect x="92.8416%" y="325" width="0.1773%" height="15" fill="rgb(235,130,12)" fg:x="6809" fg:w="13"/><text x="93.0916%" y="335.50"></text></g><g><title>Security`sec_asn1d_zalloc (1 samples, 0.01%)</title><rect x="93.0052%" y="309" width="0.0136%" height="15" fill="rgb(231,95,0)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="319.50"></text></g><g><title>Security`PORT_ArenaAlloc (1 samples, 0.01%)</title><rect x="93.0052%" y="293" width="0.0136%" height="15" fill="rgb(228,12,23)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="303.50"></text></g><g><title>Security`PL_ArenaAllocate (1 samples, 0.01%)</title><rect x="93.0052%" y="277" width="0.0136%" height="15" fill="rgb(216,12,1)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="93.0052%" y="261" width="0.0136%" height="15" fill="rgb(219,59,3)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="93.0052%" y="245" width="0.0136%" height="15" fill="rgb(215,208,46)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="93.0052%" y="229" width="0.0136%" height="15" fill="rgb(254,224,29)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="93.0052%" y="213" width="0.0136%" height="15" fill="rgb(232,14,29)" fg:x="6821" fg:w="1"/><text x="93.2552%" y="223.50"></text></g><g><title>Security`AppleX509CLSession::CertCache (29 samples, 0.40%)</title><rect x="92.6370%" y="373" width="0.3954%" height="15" fill="rgb(208,45,52)" fg:x="6794" fg:w="29"/><text x="92.8870%" y="383.50"></text></g><g><title>Security`DecodedCert::DecodedCert (29 samples, 0.40%)</title><rect x="92.6370%" y="357" width="0.3954%" height="15" fill="rgb(234,191,28)" fg:x="6794" fg:w="29"/><text x="92.8870%" y="367.50"></text></g><g><title>Security`SecNssCoder::alloc (1 samples, 0.01%)</title><rect x="93.0188%" y="341" width="0.0136%" height="15" fill="rgb(244,67,43)" fg:x="6822" fg:w="1"/><text x="93.2688%" y="351.50"></text></g><g><title>Security`LockedMap&lt;long, CLCachedEntry&gt;::addEntry (1 samples, 0.01%)</title><rect x="93.0325%" y="373" width="0.0136%" height="15" fill="rgb(236,189,24)" fg:x="6823" fg:w="1"/><text x="93.2825%" y="383.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::certHandle (31 samples, 0.42%)</title><rect x="92.6370%" y="421" width="0.4227%" height="15" fill="rgb(239,214,33)" fg:x="6794" fg:w="31"/><text x="92.8870%" y="431.50"></text></g><g><title>Security`CSSM_CL_CertCache (31 samples, 0.42%)</title><rect x="92.6370%" y="405" width="0.4227%" height="15" fill="rgb(226,176,41)" fg:x="6794" fg:w="31"/><text x="92.8870%" y="415.50"></text></g><g><title>Security`cssm_CertCache(long, cssm_data const*, long*) (31 samples, 0.42%)</title><rect x="92.6370%" y="389" width="0.4227%" height="15" fill="rgb(248,47,8)" fg:x="6794" fg:w="31"/><text x="92.8870%" y="399.50"></text></g><g><title>Security`setCountLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="93.0461%" y="373" width="0.0136%" height="15" fill="rgb(218,81,44)" fg:x="6824" fg:w="1"/><text x="93.2961%" y="383.50"></text></g><g><title>Foundation`DYLD-STUB$$pthread_self (1 samples, 0.01%)</title><rect x="93.0461%" y="357" width="0.0136%" height="15" fill="rgb(213,98,6)" fg:x="6824" fg:w="1"/><text x="93.2961%" y="367.50"></text></g><g><title>Security`Security::ModuleNexus&lt;Security::MappingHandle&lt;long&gt;::State&gt;::operator() (1 samples, 0.01%)</title><rect x="93.0597%" y="341" width="0.0136%" height="15" fill="rgb(222,85,22)" fg:x="6825" fg:w="1"/><text x="93.3097%" y="351.50"></text></g><g><title>Security`Attachment::Attachment (2 samples, 0.03%)</title><rect x="93.0597%" y="357" width="0.0273%" height="15" fill="rgb(239,46,39)" fg:x="6825" fg:w="2"/><text x="93.3097%" y="367.50"></text></g><g><title>libsystem_trace.dylib`os_log_type_enabled (1 samples, 0.01%)</title><rect x="93.0734%" y="341" width="0.0136%" height="15" fill="rgb(237,12,29)" fg:x="6826" fg:w="1"/><text x="93.3234%" y="351.50"></text></g><g><title>Security`CSSM_ModuleAttach (3 samples, 0.04%)</title><rect x="93.0597%" y="389" width="0.0409%" height="15" fill="rgb(214,77,8)" fg:x="6825" fg:w="3"/><text x="93.3097%" y="399.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;8u, cssm_spi_cl_funcs, &amp;CLNameTable&gt;::make (3 samples, 0.04%)</title><rect x="93.0597%" y="373" width="0.0409%" height="15" fill="rgb(217,168,37)" fg:x="6825" fg:w="3"/><text x="93.3097%" y="383.50"></text></g><g><title>Security`Security::MappingHandle&lt;long&gt;::MappingHandle (1 samples, 0.01%)</title><rect x="93.0870%" y="357" width="0.0136%" height="15" fill="rgb(221,217,23)" fg:x="6827" fg:w="1"/><text x="93.3370%" y="367.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::objDbHand (1 samples, 0.01%)</title><rect x="93.1006%" y="245" width="0.0136%" height="15" fill="rgb(243,229,36)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="255.50"></text></g><g><title>Security`Security::MDSSession::dbOpen (1 samples, 0.01%)</title><rect x="93.1006%" y="229" width="0.0136%" height="15" fill="rgb(251,163,40)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="239.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 0.01%)</title><rect x="93.1006%" y="213" width="0.0136%" height="15" fill="rgb(237,222,12)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="223.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 0.01%)</title><rect x="93.1006%" y="197" width="0.0136%" height="15" fill="rgb(248,132,6)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="207.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 0.01%)</title><rect x="93.1006%" y="181" width="0.0136%" height="15" fill="rgb(227,167,50)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="191.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 0.01%)</title><rect x="93.1006%" y="165" width="0.0136%" height="15" fill="rgb(242,84,37)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="175.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 0.01%)</title><rect x="93.1006%" y="149" width="0.0136%" height="15" fill="rgb(212,4,50)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="159.50"></text></g><g><title>Security`Security::MetaRecord::unpackRecord (1 samples, 0.01%)</title><rect x="93.1006%" y="133" width="0.0136%" height="15" fill="rgb(230,228,32)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="143.50"></text></g><g><title>Security`Security::MetaAttribute::unpackAttribute (1 samples, 0.01%)</title><rect x="93.1006%" y="117" width="0.0136%" height="15" fill="rgb(248,217,23)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="127.50"></text></g><g><title>Security`Security::TrackingAllocator::malloc (1 samples, 0.01%)</title><rect x="93.1006%" y="101" width="0.0136%" height="15" fill="rgb(238,197,32)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="111.50"></text></g><g><title>Security`Security::TrackingAllocator::malloc (1 samples, 0.01%)</title><rect x="93.1006%" y="85" width="0.0136%" height="15" fill="rgb(236,106,1)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="93.1006%" y="69" width="0.0136%" height="15" fill="rgb(219,228,13)" fg:x="6828" fg:w="1"/><text x="93.3506%" y="79.50"></text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (2 samples, 0.03%)</title><rect x="93.1006%" y="389" width="0.0273%" height="15" fill="rgb(238,30,35)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="399.50"></text></g><g><title>Security`CSSM_ModuleLoad (2 samples, 0.03%)</title><rect x="93.1006%" y="373" width="0.0273%" height="15" fill="rgb(236,70,23)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="383.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (2 samples, 0.03%)</title><rect x="93.1006%" y="357" width="0.0273%" height="15" fill="rgb(249,104,48)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="367.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (2 samples, 0.03%)</title><rect x="93.1006%" y="341" width="0.0273%" height="15" fill="rgb(254,117,50)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="351.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (2 samples, 0.03%)</title><rect x="93.1006%" y="325" width="0.0273%" height="15" fill="rgb(223,152,4)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="335.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (2 samples, 0.03%)</title><rect x="93.1006%" y="309" width="0.0273%" height="15" fill="rgb(245,6,2)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="319.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (2 samples, 0.03%)</title><rect x="93.1006%" y="293" width="0.0273%" height="15" fill="rgb(249,150,24)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="303.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (2 samples, 0.03%)</title><rect x="93.1006%" y="277" width="0.0273%" height="15" fill="rgb(228,185,42)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="287.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (2 samples, 0.03%)</title><rect x="93.1006%" y="261" width="0.0273%" height="15" fill="rgb(226,39,33)" fg:x="6828" fg:w="2"/><text x="93.3506%" y="271.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (1 samples, 0.01%)</title><rect x="93.1143%" y="245" width="0.0136%" height="15" fill="rgb(221,166,19)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="255.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (1 samples, 0.01%)</title><rect x="93.1143%" y="229" width="0.0136%" height="15" fill="rgb(209,109,2)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="239.50"></text></g><g><title>Security`Security::MDSAttrParser::parseAttrs (1 samples, 0.01%)</title><rect x="93.1143%" y="213" width="0.0136%" height="15" fill="rgb(252,216,26)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="223.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLsOfType (1 samples, 0.01%)</title><rect x="93.1143%" y="197" width="0.0136%" height="15" fill="rgb(227,173,36)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="207.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.01%)</title><rect x="93.1143%" y="181" width="0.0136%" height="15" fill="rgb(209,90,7)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="191.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.01%)</title><rect x="93.1143%" y="165" width="0.0136%" height="15" fill="rgb(250,194,11)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="175.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.01%)</title><rect x="93.1143%" y="149" width="0.0136%" height="15" fill="rgb(220,72,50)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="159.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInBundle (1 samples, 0.01%)</title><rect x="93.1143%" y="133" width="0.0136%" height="15" fill="rgb(222,106,48)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="143.50"></text></g><g><title>CoreFoundation`_CFBundleCopyBundleLocalizations (1 samples, 0.01%)</title><rect x="93.1143%" y="117" width="0.0136%" height="15" fill="rgb(216,220,45)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="127.50"></text></g><g><title>CoreFoundation`_copyBundleLocalizationsFromResources (1 samples, 0.01%)</title><rect x="93.1143%" y="101" width="0.0136%" height="15" fill="rgb(234,112,18)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="111.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLProjDirectoriesForURL (1 samples, 0.01%)</title><rect x="93.1143%" y="85" width="0.0136%" height="15" fill="rgb(206,179,9)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="95.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.01%)</title><rect x="93.1143%" y="69" width="0.0136%" height="15" fill="rgb(215,115,40)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="79.50"></text></g><g><title>libsystem_c.dylib`readdir (1 samples, 0.01%)</title><rect x="93.1143%" y="53" width="0.0136%" height="15" fill="rgb(222,69,34)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 0.01%)</title><rect x="93.1143%" y="37" width="0.0136%" height="15" fill="rgb(209,161,10)" fg:x="6829" fg:w="1"/><text x="93.3643%" y="47.50"></text></g><g><title>Security`Security::CssmDbAttributeData::operator unsigned int (1 samples, 0.01%)</title><rect x="93.1279%" y="389" width="0.0136%" height="15" fill="rgb(217,6,38)" fg:x="6830" fg:w="1"/><text x="93.3779%" y="399.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (45 samples, 0.61%)</title><rect x="92.5416%" y="437" width="0.6136%" height="15" fill="rgb(229,229,48)" fg:x="6787" fg:w="45"/><text x="92.7916%" y="447.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (7 samples, 0.10%)</title><rect x="93.0597%" y="421" width="0.0954%" height="15" fill="rgb(225,21,28)" fg:x="6825" fg:w="7"/><text x="93.3097%" y="431.50"></text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (7 samples, 0.10%)</title><rect x="93.0597%" y="405" width="0.0954%" height="15" fill="rgb(206,33,13)" fg:x="6825" fg:w="7"/><text x="93.3097%" y="415.50"></text></g><g><title>Security`StandardAttachmentMaker&lt;8u, cssm_spi_cl_funcs, &amp;CLNameTable&gt;::make (1 samples, 0.01%)</title><rect x="93.1415%" y="389" width="0.0136%" height="15" fill="rgb(242,178,17)" fg:x="6831" fg:w="1"/><text x="93.3915%" y="399.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (48 samples, 0.65%)</title><rect x="92.5143%" y="453" width="0.6545%" height="15" fill="rgb(220,162,5)" fg:x="6785" fg:w="48"/><text x="92.7643%" y="463.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::releaseFieldValue (1 samples, 0.01%)</title><rect x="93.1552%" y="437" width="0.0136%" height="15" fill="rgb(210,33,43)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="447.50"></text></g><g><title>Security`CSSM_CL_FreeFieldValue (1 samples, 0.01%)</title><rect x="93.1552%" y="421" width="0.0136%" height="15" fill="rgb(216,116,54)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="431.50"></text></g><g><title>Security`cssm_FreeFieldValue(long, cssm_data const*, cssm_data*) (1 samples, 0.01%)</title><rect x="93.1552%" y="405" width="0.0136%" height="15" fill="rgb(249,92,24)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="415.50"></text></g><g><title>Security`AppleX509CLSession::FreeFieldValue (1 samples, 0.01%)</title><rect x="93.1552%" y="389" width="0.0136%" height="15" fill="rgb(231,189,14)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="399.50"></text></g><g><title>Security`DecodedCert::freeCertFieldData (1 samples, 0.01%)</title><rect x="93.1552%" y="373" width="0.0136%" height="15" fill="rgb(230,8,41)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="383.50"></text></g><g><title>Security`oidToFields(Security::CssmData const&amp;) (1 samples, 0.01%)</title><rect x="93.1552%" y="357" width="0.0136%" height="15" fill="rgb(249,7,27)" fg:x="6832" fg:w="1"/><text x="93.4052%" y="367.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::required (1 samples, 0.01%)</title><rect x="93.1688%" y="453" width="0.0136%" height="15" fill="rgb(232,86,5)" fg:x="6833" fg:w="1"/><text x="93.4188%" y="463.50"></text></g><g><title>libc+ (1 samples, 0.01%)</title><rect x="93.1688%" y="437" width="0.0136%" height="15" fill="rgb(224,175,18)" fg:x="6833" fg:w="1"/><text x="93.4188%" y="447.50"></text></g><g><title>Security`Security::SecCFObject::handle (1 samples, 0.01%)</title><rect x="93.1824%" y="453" width="0.0136%" height="15" fill="rgb(220,129,12)" fg:x="6834" fg:w="1"/><text x="93.4324%" y="463.50"></text></g><g><title>Security`SecKeyCreate (1 samples, 0.01%)</title><rect x="93.1824%" y="437" width="0.0136%" height="15" fill="rgb(210,19,36)" fg:x="6834" fg:w="1"/><text x="93.4324%" y="447.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (54 samples, 0.74%)</title><rect x="92.4734%" y="469" width="0.7363%" height="15" fill="rgb(219,96,14)" fg:x="6782" fg:w="54"/><text x="92.7234%" y="479.50"></text></g><g><title>Security`countLegacyAPIEnabledForThread (1 samples, 0.01%)</title><rect x="93.1961%" y="453" width="0.0136%" height="15" fill="rgb(249,106,1)" fg:x="6835" fg:w="1"/><text x="93.4461%" y="463.50"></text></g><g><title>Foundation`_NSThreadGet0 (1 samples, 0.01%)</title><rect x="93.1961%" y="437" width="0.0136%" height="15" fill="rgb(249,155,20)" fg:x="6835" fg:w="1"/><text x="93.4461%" y="447.50"></text></g><g><title>Foundation`-[NSThread init] (1 samples, 0.01%)</title><rect x="93.1961%" y="421" width="0.0136%" height="15" fill="rgb(244,168,9)" fg:x="6835" fg:w="1"/><text x="93.4461%" y="431.50"></text></g><g><title>Foundation`-[_NSThreadData init] (1 samples, 0.01%)</title><rect x="93.1961%" y="405" width="0.0136%" height="15" fill="rgb(216,23,50)" fg:x="6835" fg:w="1"/><text x="93.4461%" y="415.50"></text></g><g><title>Security`SecTrustGetCertificateAtIndex (1 samples, 0.01%)</title><rect x="93.2097%" y="469" width="0.0136%" height="15" fill="rgb(224,219,20)" fg:x="6836" fg:w="1"/><text x="93.4597%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.01%)</title><rect x="93.2097%" y="453" width="0.0136%" height="15" fill="rgb(222,156,15)" fg:x="6836" fg:w="1"/><text x="93.4597%" y="463.50"></text></g><g><title>Security`__SecTrustGetCertificateAtIndex_block_invoke (1 samples, 0.01%)</title><rect x="93.2097%" y="437" width="0.0136%" height="15" fill="rgb(231,97,17)" fg:x="6836" fg:w="1"/><text x="93.4597%" y="447.50"></text></g><g><title>Security`SecTrustCopyPublicKey (56 samples, 0.76%)</title><rect x="92.4734%" y="485" width="0.7636%" height="15" fill="rgb(218,70,48)" fg:x="6782" fg:w="56"/><text x="92.7234%" y="495.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_dispose (1 samples, 0.01%)</title><rect x="93.2233%" y="469" width="0.0136%" height="15" fill="rgb(212,196,52)" fg:x="6837" fg:w="1"/><text x="93.4733%" y="479.50"></text></g><g><title>CoreFoundation`__NSArrayImmutablePlaceholder (1 samples, 0.01%)</title><rect x="93.2370%" y="469" width="0.0136%" height="15" fill="rgb(243,203,18)" fg:x="6838" fg:w="1"/><text x="93.4870%" y="479.50"></text></g><g><title>Security`SecPolicyCreateBasicX509 (2 samples, 0.03%)</title><rect x="93.2506%" y="469" width="0.0273%" height="15" fill="rgb(252,125,41)" fg:x="6839" fg:w="2"/><text x="93.5006%" y="479.50"></text></g><g><title>Security`SecPolicyAddBasicX509Options (2 samples, 0.03%)</title><rect x="93.2506%" y="453" width="0.0273%" height="15" fill="rgb(223,180,33)" fg:x="6839" fg:w="2"/><text x="93.5006%" y="463.50"></text></g><g><title>Security`SecPolicyAddBasicCertOptions (2 samples, 0.03%)</title><rect x="93.2506%" y="437" width="0.0273%" height="15" fill="rgb(254,159,46)" fg:x="6839" fg:w="2"/><text x="93.5006%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="93.2506%" y="421" width="0.0273%" height="15" fill="rgb(254,38,10)" fg:x="6839" fg:w="2"/><text x="93.5006%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_create_with_target (1 samples, 0.01%)</title><rect x="93.2779%" y="469" width="0.0136%" height="15" fill="rgb(208,217,32)" fg:x="6841" fg:w="1"/><text x="93.5279%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_strdup_if_mutable (1 samples, 0.01%)</title><rect x="93.2779%" y="453" width="0.0136%" height="15" fill="rgb(221,120,13)" fg:x="6841" fg:w="1"/><text x="93.5279%" y="463.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_is_memory_immutable (1 samples, 0.01%)</title><rect x="93.2779%" y="437" width="0.0136%" height="15" fill="rgb(246,54,52)" fg:x="6841" fg:w="1"/><text x="93.5279%" y="447.50"></text></g><g><title>dyld`DyldSharedCache::forEachCache(void  (1 samples, 0.01%)</title><rect x="93.2779%" y="421" width="0.0136%" height="15" fill="rgb(242,34,25)" fg:x="6841" fg:w="1"/><text x="93.5279%" y="431.50"></text></g><g><title>dyld`DyldSharedCache::forEachRegion(void (1 samples, 0.01%)</title><rect x="93.2779%" y="405" width="0.0136%" height="15" fill="rgb(247,209,9)" fg:x="6841" fg:w="1"/><text x="93.5279%" y="415.50"></text></g><g><title>Security`SecTrustCreateWithCertificates (5 samples, 0.07%)</title><rect x="93.2370%" y="485" width="0.0682%" height="15" fill="rgb(228,71,26)" fg:x="6838" fg:w="5"/><text x="93.4870%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="93.2915%" y="469" width="0.0136%" height="15" fill="rgb(222,145,49)" fg:x="6842" fg:w="1"/><text x="93.5415%" y="479.50"></text></g><g><title>CoreFoundation`CFDataGetLength (1 samples, 0.01%)</title><rect x="93.3052%" y="469" width="0.0136%" height="15" fill="rgb(218,121,17)" fg:x="6843" fg:w="1"/><text x="93.5552%" y="479.50"></text></g><g><title>Security`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="93.3188%" y="469" width="0.0136%" height="15" fill="rgb(244,50,7)" fg:x="6844" fg:w="1"/><text x="93.5688%" y="479.50"></text></g><g><title>Security`DERParseSequenceToObject (1 samples, 0.01%)</title><rect x="93.3324%" y="453" width="0.0136%" height="15" fill="rgb(246,229,37)" fg:x="6845" fg:w="1"/><text x="93.5824%" y="463.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (3 samples, 0.04%)</title><rect x="93.3461%" y="437" width="0.0409%" height="15" fill="rgb(225,18,5)" fg:x="6846" fg:w="3"/><text x="93.5961%" y="447.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (2 samples, 0.03%)</title><rect x="93.3597%" y="421" width="0.0273%" height="15" fill="rgb(213,204,8)" fg:x="6847" fg:w="2"/><text x="93.6097%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free (1 samples, 0.01%)</title><rect x="93.3733%" y="405" width="0.0136%" height="15" fill="rgb(238,103,6)" fg:x="6848" fg:w="1"/><text x="93.6233%" y="415.50"></text></g><g><title>CoreFoundation`CFSetCreateMutable (1 samples, 0.01%)</title><rect x="93.3870%" y="437" width="0.0136%" height="15" fill="rgb(222,25,35)" fg:x="6849" fg:w="1"/><text x="93.6370%" y="447.50"></text></g><g><title>CoreFoundation`__CFSetCreateGeneric (1 samples, 0.01%)</title><rect x="93.3870%" y="421" width="0.0136%" height="15" fill="rgb(213,203,35)" fg:x="6849" fg:w="1"/><text x="93.6370%" y="431.50"></text></g><g><title>CoreFoundation`CFBasicHashCreate (1 samples, 0.01%)</title><rect x="93.3870%" y="405" width="0.0136%" height="15" fill="rgb(221,79,53)" fg:x="6849" fg:w="1"/><text x="93.6370%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="93.4006%" y="437" width="0.0136%" height="15" fill="rgb(243,200,35)" fg:x="6850" fg:w="1"/><text x="93.6506%" y="447.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (1 samples, 0.01%)</title><rect x="93.4006%" y="421" width="0.0136%" height="15" fill="rgb(248,60,25)" fg:x="6850" fg:w="1"/><text x="93.6506%" y="431.50"></text></g><g><title>CoreFoundation`__CFDataInit (3 samples, 0.04%)</title><rect x="93.4142%" y="437" width="0.0409%" height="15" fill="rgb(227,53,46)" fg:x="6851" fg:w="3"/><text x="93.6642%" y="447.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$malloc_zone_calloc (1 samples, 0.01%)</title><rect x="93.4415%" y="421" width="0.0136%" height="15" fill="rgb(216,120,32)" fg:x="6853" fg:w="1"/><text x="93.6915%" y="431.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.01%)</title><rect x="93.4551%" y="437" width="0.0136%" height="15" fill="rgb(220,134,1)" fg:x="6854" fg:w="1"/><text x="93.7051%" y="447.50"></text></g><g><title>CoreFoundation`_CFURLCreateURLStringWithBytes (1 samples, 0.01%)</title><rect x="93.4688%" y="405" width="0.0136%" height="15" fill="rgb(237,168,5)" fg:x="6855" fg:w="1"/><text x="93.7188%" y="415.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.01%)</title><rect x="93.4688%" y="389" width="0.0136%" height="15" fill="rgb(231,100,33)" fg:x="6855" fg:w="1"/><text x="93.7188%" y="399.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.01%)</title><rect x="93.4688%" y="373" width="0.0136%" height="15" fill="rgb(236,177,47)" fg:x="6855" fg:w="1"/><text x="93.7188%" y="383.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.01%)</title><rect x="93.4824%" y="405" width="0.0136%" height="15" fill="rgb(235,7,49)" fg:x="6856" fg:w="1"/><text x="93.7324%" y="415.50"></text></g><g><title>CoreFoundation`scanCharacters (1 samples, 0.01%)</title><rect x="93.4824%" y="389" width="0.0136%" height="15" fill="rgb(232,119,22)" fg:x="6856" fg:w="1"/><text x="93.7324%" y="399.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (3 samples, 0.04%)</title><rect x="93.4688%" y="437" width="0.0409%" height="15" fill="rgb(254,73,53)" fg:x="6855" fg:w="3"/><text x="93.7188%" y="447.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (3 samples, 0.04%)</title><rect x="93.4688%" y="421" width="0.0409%" height="15" fill="rgb(251,35,20)" fg:x="6855" fg:w="3"/><text x="93.7188%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.01%)</title><rect x="93.4960%" y="405" width="0.0136%" height="15" fill="rgb(241,119,20)" fg:x="6857" fg:w="1"/><text x="93.7460%" y="415.50"></text></g><g><title>Security`SecCEPCertificatePolicies (1 samples, 0.01%)</title><rect x="93.5097%" y="437" width="0.0136%" height="15" fill="rgb(207,102,14)" fg:x="6858" fg:w="1"/><text x="93.7597%" y="447.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.01%)</title><rect x="93.5097%" y="421" width="0.0136%" height="15" fill="rgb(248,201,50)" fg:x="6858" fg:w="1"/><text x="93.7597%" y="431.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.01%)</title><rect x="93.5233%" y="357" width="0.0136%" height="15" fill="rgb(222,185,44)" fg:x="6859" fg:w="1"/><text x="93.7733%" y="367.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.01%)</title><rect x="93.5233%" y="341" width="0.0136%" height="15" fill="rgb(218,107,18)" fg:x="6859" fg:w="1"/><text x="93.7733%" y="351.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.01%)</title><rect x="93.5233%" y="325" width="0.0136%" height="15" fill="rgb(237,177,39)" fg:x="6859" fg:w="1"/><text x="93.7733%" y="335.50"></text></g><g><title>CoreFoundation`_CFURLCreateURLStringWithBytes (2 samples, 0.03%)</title><rect x="93.5233%" y="373" width="0.0273%" height="15" fill="rgb(246,69,6)" fg:x="6859" fg:w="2"/><text x="93.7733%" y="383.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (1 samples, 0.01%)</title><rect x="93.5370%" y="357" width="0.0136%" height="15" fill="rgb(234,208,37)" fg:x="6860" fg:w="1"/><text x="93.7870%" y="367.50"></text></g><g><title>CoreFoundation`_parseComponents (1 samples, 0.01%)</title><rect x="93.5642%" y="357" width="0.0136%" height="15" fill="rgb(225,4,6)" fg:x="6862" fg:w="1"/><text x="93.8142%" y="367.50"></text></g><g><title>CoreFoundation`constructBuffers (1 samples, 0.01%)</title><rect x="93.5779%" y="357" width="0.0136%" height="15" fill="rgb(233,45,0)" fg:x="6863" fg:w="1"/><text x="93.8279%" y="367.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (1 samples, 0.01%)</title><rect x="93.5779%" y="341" width="0.0136%" height="15" fill="rgb(226,136,5)" fg:x="6863" fg:w="1"/><text x="93.8279%" y="351.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (5 samples, 0.07%)</title><rect x="93.5506%" y="373" width="0.0682%" height="15" fill="rgb(211,91,47)" fg:x="6861" fg:w="5"/><text x="93.8006%" y="383.50"></text></g><g><title>CoreFoundation`scanCharacters (2 samples, 0.03%)</title><rect x="93.5915%" y="357" width="0.0273%" height="15" fill="rgb(242,88,51)" fg:x="6864" fg:w="2"/><text x="93.8415%" y="367.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (8 samples, 0.11%)</title><rect x="93.5233%" y="437" width="0.1091%" height="15" fill="rgb(230,91,28)" fg:x="6859" fg:w="8"/><text x="93.7733%" y="447.50"></text></g><g><title>Security`parseGeneralNamesContent (8 samples, 0.11%)</title><rect x="93.5233%" y="421" width="0.1091%" height="15" fill="rgb(254,186,29)" fg:x="6859" fg:w="8"/><text x="93.7733%" y="431.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (8 samples, 0.11%)</title><rect x="93.5233%" y="405" width="0.1091%" height="15" fill="rgb(238,6,4)" fg:x="6859" fg:w="8"/><text x="93.7733%" y="415.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (8 samples, 0.11%)</title><rect x="93.5233%" y="389" width="0.1091%" height="15" fill="rgb(221,151,16)" fg:x="6859" fg:w="8"/><text x="93.7733%" y="399.50"></text></g><g><title>CoreFoundation`_rangeForComponent (1 samples, 0.01%)</title><rect x="93.6188%" y="373" width="0.0136%" height="15" fill="rgb(251,143,52)" fg:x="6866" fg:w="1"/><text x="93.8688%" y="383.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.01%)</title><rect x="93.6324%" y="421" width="0.0136%" height="15" fill="rgb(206,90,15)" fg:x="6867" fg:w="1"/><text x="93.8824%" y="431.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.01%)</title><rect x="93.6324%" y="405" width="0.0136%" height="15" fill="rgb(218,35,8)" fg:x="6867" fg:w="1"/><text x="93.8824%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.01%)</title><rect x="93.6324%" y="389" width="0.0136%" height="15" fill="rgb(239,215,6)" fg:x="6867" fg:w="1"/><text x="93.8824%" y="399.50"></text></g><g><title>Security`SecCertificateParse (23 samples, 0.31%)</title><rect x="93.3461%" y="453" width="0.3136%" height="15" fill="rgb(245,116,39)" fg:x="6846" fg:w="23"/><text x="93.5961%" y="463.50"></text></g><g><title>Security`createNormalizedX501Name (2 samples, 0.03%)</title><rect x="93.6324%" y="437" width="0.0273%" height="15" fill="rgb(242,65,28)" fg:x="6867" fg:w="2"/><text x="93.8824%" y="447.50"></text></g><g><title>Security`DERParseSequenceContentToObject (1 samples, 0.01%)</title><rect x="93.6460%" y="421" width="0.0136%" height="15" fill="rgb(252,132,53)" fg:x="6868" fg:w="1"/><text x="93.8960%" y="431.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.01%)</title><rect x="93.6460%" y="405" width="0.0136%" height="15" fill="rgb(224,159,50)" fg:x="6868" fg:w="1"/><text x="93.8960%" y="415.50"></text></g><g><title>Security`SecCertificateCreateWithData (25 samples, 0.34%)</title><rect x="93.3324%" y="469" width="0.3409%" height="15" fill="rgb(224,93,4)" fg:x="6845" fg:w="25"/><text x="93.5824%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="93.6597%" y="453" width="0.0136%" height="15" fill="rgb(208,81,34)" fg:x="6869" fg:w="1"/><text x="93.9097%" y="463.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (28 samples, 0.38%)</title><rect x="93.3052%" y="485" width="0.3818%" height="15" fill="rgb(233,92,54)" fg:x="6843" fg:w="28"/><text x="93.5552%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="93.6733%" y="469" width="0.0136%" height="15" fill="rgb(237,21,14)" fg:x="6870" fg:w="1"/><text x="93.9233%" y="479.50"></text></g><g><title>Security`tls_handshake_message_callback (131 samples, 1.79%)</title><rect x="91.9144%" y="517" width="1.7862%" height="15" fill="rgb(249,128,51)" fg:x="6741" fg:w="131"/><text x="92.1644%" y="527.50">S..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (131 samples, 1.79%)</title><rect x="91.9144%" y="501" width="1.7862%" height="15" fill="rgb(223,129,24)" fg:x="6741" fg:w="131"/><text x="92.1644%" y="511.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_create_with_target (1 samples, 0.01%)</title><rect x="93.6869%" y="485" width="0.0136%" height="15" fill="rgb(231,168,25)" fg:x="6871" fg:w="1"/><text x="93.9369%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderDate initWithTimeIntervalSinceReferenceDate:] (1 samples, 0.01%)</title><rect x="93.7006%" y="469" width="0.0136%" height="15" fill="rgb(224,39,20)" fg:x="6872" fg:w="1"/><text x="93.9506%" y="479.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.01%)</title><rect x="93.7142%" y="453" width="0.0136%" height="15" fill="rgb(225,152,53)" fg:x="6873" fg:w="1"/><text x="93.9642%" y="463.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.01%)</title><rect x="93.7142%" y="437" width="0.0136%" height="15" fill="rgb(252,17,24)" fg:x="6873" fg:w="1"/><text x="93.9642%" y="447.50"></text></g><g><title>Security`SecPolicyRemoveWeakHashOptions (1 samples, 0.01%)</title><rect x="93.7278%" y="453" width="0.0136%" height="15" fill="rgb(250,114,30)" fg:x="6874" fg:w="1"/><text x="93.9778%" y="463.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="93.7278%" y="437" width="0.0136%" height="15" fill="rgb(229,5,4)" fg:x="6874" fg:w="1"/><text x="93.9778%" y="447.50"></text></g><g><title>CoreFoundation`-[NSMutableDictionary __addObject:forKey:] (1 samples, 0.01%)</title><rect x="93.7415%" y="421" width="0.0136%" height="15" fill="rgb(225,176,49)" fg:x="6875" fg:w="1"/><text x="93.9915%" y="431.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.01%)</title><rect x="93.7415%" y="405" width="0.0136%" height="15" fill="rgb(224,221,49)" fg:x="6875" fg:w="1"/><text x="93.9915%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (1 samples, 0.01%)</title><rect x="93.7415%" y="389" width="0.0136%" height="15" fill="rgb(253,169,27)" fg:x="6875" fg:w="1"/><text x="93.9915%" y="399.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.01%)</title><rect x="93.7551%" y="421" width="0.0136%" height="15" fill="rgb(211,206,16)" fg:x="6876" fg:w="1"/><text x="94.0051%" y="431.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.01%)</title><rect x="93.7551%" y="405" width="0.0136%" height="15" fill="rgb(244,87,35)" fg:x="6876" fg:w="1"/><text x="94.0051%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (1 samples, 0.01%)</title><rect x="93.7551%" y="389" width="0.0136%" height="15" fill="rgb(246,28,10)" fg:x="6876" fg:w="1"/><text x="94.0051%" y="399.50"></text></g><g><title>Security`SecPolicyCreateSSL_internal (5 samples, 0.07%)</title><rect x="93.7142%" y="469" width="0.0682%" height="15" fill="rgb(229,12,44)" fg:x="6873" fg:w="5"/><text x="93.9642%" y="479.50"></text></g><g><title>Security`set_ssl_ekus (3 samples, 0.04%)</title><rect x="93.7415%" y="453" width="0.0409%" height="15" fill="rgb(210,145,37)" fg:x="6875" fg:w="3"/><text x="93.9915%" y="463.50"></text></g><g><title>Security`add_eku (3 samples, 0.04%)</title><rect x="93.7415%" y="437" width="0.0409%" height="15" fill="rgb(227,112,52)" fg:x="6875" fg:w="3"/><text x="93.9915%" y="447.50"></text></g><g><title>Security`add_element (1 samples, 0.01%)</title><rect x="93.7687%" y="421" width="0.0136%" height="15" fill="rgb(238,155,34)" fg:x="6877" fg:w="1"/><text x="94.0187%" y="431.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (1 samples, 0.01%)</title><rect x="93.7687%" y="405" width="0.0136%" height="15" fill="rgb(239,226,36)" fg:x="6877" fg:w="1"/><text x="94.0187%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (1 samples, 0.01%)</title><rect x="93.7687%" y="389" width="0.0136%" height="15" fill="rgb(230,16,23)" fg:x="6877" fg:w="1"/><text x="94.0187%" y="399.50"></text></g><g><title>Security`SecTrustGetTypeID (1 samples, 0.01%)</title><rect x="93.7824%" y="469" width="0.0136%" height="15" fill="rgb(236,171,36)" fg:x="6878" fg:w="1"/><text x="94.0324%" y="479.50"></text></g><g><title>Security`SecTrustSetOCSPResponse (1 samples, 0.01%)</title><rect x="93.7960%" y="469" width="0.0136%" height="15" fill="rgb(221,22,14)" fg:x="6879" fg:w="1"/><text x="94.0460%" y="479.50"></text></g><g><title>CoreFoundation`CFGetTypeID (1 samples, 0.01%)</title><rect x="93.7960%" y="453" width="0.0136%" height="15" fill="rgb(242,43,11)" fg:x="6879" fg:w="1"/><text x="94.0460%" y="463.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.01%)</title><rect x="93.8233%" y="421" width="0.0136%" height="15" fill="rgb(232,69,23)" fg:x="6881" fg:w="1"/><text x="94.0733%" y="431.50"></text></g><g><title>CoreFoundation`__CFAllocatorRespectsHintZeroWhenAllocating (1 samples, 0.01%)</title><rect x="93.8233%" y="405" width="0.0136%" height="15" fill="rgb(216,180,54)" fg:x="6881" fg:w="1"/><text x="94.0733%" y="415.50"></text></g><g><title>Security`DERParseSequenceContentToObject (1 samples, 0.01%)</title><rect x="93.8369%" y="421" width="0.0136%" height="15" fill="rgb(216,5,24)" fg:x="6882" fg:w="1"/><text x="94.0869%" y="431.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (1 samples, 0.01%)</title><rect x="93.8506%" y="421" width="0.0136%" height="15" fill="rgb(225,89,9)" fg:x="6883" fg:w="1"/><text x="94.1006%" y="431.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (1 samples, 0.01%)</title><rect x="93.8506%" y="405" width="0.0136%" height="15" fill="rgb(243,75,33)" fg:x="6883" fg:w="1"/><text x="94.1006%" y="415.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.01%)</title><rect x="93.8506%" y="389" width="0.0136%" height="15" fill="rgb(247,141,45)" fg:x="6883" fg:w="1"/><text x="94.1006%" y="399.50"></text></g><g><title>CoreFoundation`scanCharacters (1 samples, 0.01%)</title><rect x="93.8506%" y="373" width="0.0136%" height="15" fill="rgb(232,177,36)" fg:x="6883" fg:w="1"/><text x="94.1006%" y="383.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (1 samples, 0.01%)</title><rect x="93.8642%" y="421" width="0.0136%" height="15" fill="rgb(219,125,36)" fg:x="6884" fg:w="1"/><text x="94.1142%" y="431.50"></text></g><g><title>Security`parseGeneralNamesContent (1 samples, 0.01%)</title><rect x="93.8642%" y="405" width="0.0136%" height="15" fill="rgb(227,94,9)" fg:x="6884" fg:w="1"/><text x="94.1142%" y="415.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (1 samples, 0.01%)</title><rect x="93.8642%" y="389" width="0.0136%" height="15" fill="rgb(240,34,52)" fg:x="6884" fg:w="1"/><text x="94.1142%" y="399.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (1 samples, 0.01%)</title><rect x="93.8642%" y="373" width="0.0136%" height="15" fill="rgb(216,45,12)" fg:x="6884" fg:w="1"/><text x="94.1142%" y="383.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.01%)</title><rect x="93.8642%" y="357" width="0.0136%" height="15" fill="rgb(246,21,19)" fg:x="6884" fg:w="1"/><text x="94.1142%" y="367.50"></text></g><g><title>Security`createNormalizedX501Name (2 samples, 0.03%)</title><rect x="93.8778%" y="421" width="0.0273%" height="15" fill="rgb(213,98,42)" fg:x="6885" fg:w="2"/><text x="94.1278%" y="431.50"></text></g><g><title>Security`DERDecodeItemPartialBufferGetLength (1 samples, 0.01%)</title><rect x="93.8915%" y="405" width="0.0136%" height="15" fill="rgb(250,136,47)" fg:x="6886" fg:w="1"/><text x="94.1415%" y="415.50"></text></g><g><title>Security`tls_verify_peer_cert (17 samples, 0.23%)</title><rect x="93.7006%" y="517" width="0.2318%" height="15" fill="rgb(251,124,27)" fg:x="6872" fg:w="17"/><text x="93.9506%" y="527.50"></text></g><g><title>Security`sslCreateSecTrust (17 samples, 0.23%)</title><rect x="93.7006%" y="501" width="0.2318%" height="15" fill="rgb(229,180,14)" fg:x="6872" fg:w="17"/><text x="93.9506%" y="511.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_peer_trust (17 samples, 0.23%)</title><rect x="93.7006%" y="485" width="0.2318%" height="15" fill="rgb(245,216,25)" fg:x="6872" fg:w="17"/><text x="93.9506%" y="495.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_create_cfarray_from_certificates (9 samples, 0.12%)</title><rect x="93.8097%" y="469" width="0.1227%" height="15" fill="rgb(251,43,5)" fg:x="6880" fg:w="9"/><text x="94.0597%" y="479.50"></text></g><g><title>Security`SecCertificateCreateWithData (9 samples, 0.12%)</title><rect x="93.8097%" y="453" width="0.1227%" height="15" fill="rgb(250,128,24)" fg:x="6880" fg:w="9"/><text x="94.0597%" y="463.50"></text></g><g><title>Security`SecCertificateParse (9 samples, 0.12%)</title><rect x="93.8097%" y="437" width="0.1227%" height="15" fill="rgb(217,117,27)" fg:x="6880" fg:w="9"/><text x="94.0597%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="93.9051%" y="421" width="0.0273%" height="15" fill="rgb(245,147,4)" fg:x="6887" fg:w="2"/><text x="94.1551%" y="431.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (5 samples, 0.07%)</title><rect x="93.9324%" y="501" width="0.0682%" height="15" fill="rgb(242,201,35)" fg:x="6889" fg:w="5"/><text x="94.1824%" y="511.50"></text></g><g><title>libcoretls.dylib`HashSHA512Update (6 samples, 0.08%)</title><rect x="93.9324%" y="517" width="0.0818%" height="15" fill="rgb(218,181,1)" fg:x="6889" fg:w="6"/><text x="94.1824%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_update (1 samples, 0.01%)</title><rect x="94.0005%" y="501" width="0.0136%" height="15" fill="rgb(222,6,29)" fg:x="6894" fg:w="1"/><text x="94.2505%" y="511.50"></text></g><g><title>libsystem_asl.dylib`_asl_evaluate_send (1 samples, 0.01%)</title><rect x="94.0142%" y="453" width="0.0136%" height="15" fill="rgb(208,186,3)" fg:x="6895" fg:w="1"/><text x="94.2642%" y="463.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_lookup (1 samples, 0.01%)</title><rect x="94.0142%" y="437" width="0.0136%" height="15" fill="rgb(216,36,26)" fg:x="6895" fg:w="1"/><text x="94.2642%" y="447.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_index (1 samples, 0.01%)</title><rect x="94.0142%" y="421" width="0.0136%" height="15" fill="rgb(248,201,23)" fg:x="6895" fg:w="1"/><text x="94.2642%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_strncmp (1 samples, 0.01%)</title><rect x="94.0278%" y="389" width="0.0136%" height="15" fill="rgb(251,170,31)" fg:x="6896" fg:w="1"/><text x="94.2778%" y="399.50"></text></g><g><title>libsystem_asl.dylib`_asl_msg_to_xpc (2 samples, 0.03%)</title><rect x="94.0278%" y="405" width="0.0273%" height="15" fill="rgb(207,110,25)" fg:x="6896" fg:w="2"/><text x="94.2778%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_int64_create_tagged (1 samples, 0.01%)</title><rect x="94.0415%" y="389" width="0.0136%" height="15" fill="rgb(250,54,15)" fg:x="6897" fg:w="1"/><text x="94.2915%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="94.0551%" y="373" width="0.0136%" height="15" fill="rgb(227,68,33)" fg:x="6898" fg:w="1"/><text x="94.3051%" y="383.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.03%)</title><rect x="94.0551%" y="405" width="0.0273%" height="15" fill="rgb(238,34,41)" fg:x="6898" fg:w="2"/><text x="94.3051%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (2 samples, 0.03%)</title><rect x="94.0551%" y="389" width="0.0273%" height="15" fill="rgb(220,11,15)" fg:x="6898" fg:w="2"/><text x="94.3051%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 0.01%)</title><rect x="94.0687%" y="373" width="0.0136%" height="15" fill="rgb(246,111,35)" fg:x="6899" fg:w="1"/><text x="94.3187%" y="383.50"></text></g><g><title>libxpc.dylib`xpc_release (1 samples, 0.01%)</title><rect x="94.0687%" y="357" width="0.0136%" height="15" fill="rgb(209,88,53)" fg:x="6899" fg:w="1"/><text x="94.3187%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_mach_msg (9 samples, 0.12%)</title><rect x="94.0824%" y="389" width="0.1227%" height="15" fill="rgb(231,185,47)" fg:x="6900" fg:w="9"/><text x="94.3324%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (9 samples, 0.12%)</title><rect x="94.0824%" y="373" width="0.1227%" height="15" fill="rgb(233,154,1)" fg:x="6900" fg:w="9"/><text x="94.3324%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (9 samples, 0.12%)</title><rect x="94.0824%" y="357" width="0.1227%" height="15" fill="rgb(225,15,46)" fg:x="6900" fg:w="9"/><text x="94.3324%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.12%)</title><rect x="94.0824%" y="341" width="0.1227%" height="15" fill="rgb(211,135,41)" fg:x="6900" fg:w="9"/><text x="94.3324%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (1 samples, 0.01%)</title><rect x="94.2051%" y="389" width="0.0136%" height="15" fill="rgb(208,54,0)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.01%)</title><rect x="94.2051%" y="373" width="0.0136%" height="15" fill="rgb(244,136,14)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="383.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply_f (1 samples, 0.01%)</title><rect x="94.2051%" y="357" width="0.0136%" height="15" fill="rgb(241,56,14)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="94.2051%" y="341" width="0.0136%" height="15" fill="rgb(205,80,24)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_f_apply (1 samples, 0.01%)</title><rect x="94.2051%" y="325" width="0.0136%" height="15" fill="rgb(220,57,4)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_apply (1 samples, 0.01%)</title><rect x="94.2051%" y="309" width="0.0136%" height="15" fill="rgb(226,193,50)" fg:x="6909" fg:w="1"/><text x="94.4551%" y="319.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (15 samples, 0.20%)</title><rect x="94.0278%" y="421" width="0.2045%" height="15" fill="rgb(231,168,22)" fg:x="6896" fg:w="15"/><text x="94.2778%" y="431.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (11 samples, 0.15%)</title><rect x="94.0824%" y="405" width="0.1500%" height="15" fill="rgb(254,215,14)" fg:x="6900" fg:w="11"/><text x="94.3324%" y="415.50"></text></g><g><title>libxpc.dylib`xpc_receive_mach_msg (1 samples, 0.01%)</title><rect x="94.2187%" y="389" width="0.0136%" height="15" fill="rgb(211,115,16)" fg:x="6910" fg:w="1"/><text x="94.4687%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_graph_unpack_impl (1 samples, 0.01%)</title><rect x="94.2187%" y="373" width="0.0136%" height="15" fill="rgb(236,210,16)" fg:x="6910" fg:w="1"/><text x="94.4687%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_create_from_received_message (1 samples, 0.01%)</title><rect x="94.2187%" y="357" width="0.0136%" height="15" fill="rgb(221,94,12)" fg:x="6910" fg:w="1"/><text x="94.4687%" y="367.50"></text></g><g><title>libsystem_asl.dylib`_asl_server_message (3 samples, 0.04%)</title><rect x="94.2323%" y="421" width="0.0409%" height="15" fill="rgb(235,218,49)" fg:x="6911" fg:w="3"/><text x="94.4823%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.04%)</title><rect x="94.2323%" y="405" width="0.0409%" height="15" fill="rgb(217,114,14)" fg:x="6911" fg:w="3"/><text x="94.4823%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.04%)</title><rect x="94.2323%" y="389" width="0.0409%" height="15" fill="rgb(216,145,22)" fg:x="6911" fg:w="3"/><text x="94.4823%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.04%)</title><rect x="94.2323%" y="373" width="0.0409%" height="15" fill="rgb(217,112,39)" fg:x="6911" fg:w="3"/><text x="94.4823%" y="383.50"></text></g><g><title>libcoretls.dylib`tls_metric_client_finished (20 samples, 0.27%)</title><rect x="94.0142%" y="501" width="0.2727%" height="15" fill="rgb(225,85,32)" fg:x="6895" fg:w="20"/><text x="94.2642%" y="511.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_add_string (20 samples, 0.27%)</title><rect x="94.0142%" y="485" width="0.2727%" height="15" fill="rgb(245,209,47)" fg:x="6895" fg:w="20"/><text x="94.2642%" y="495.50"></text></g><g><title>libsystem_asl.dylib`asl_log (20 samples, 0.27%)</title><rect x="94.0142%" y="469" width="0.2727%" height="15" fill="rgb(218,220,15)" fg:x="6895" fg:w="20"/><text x="94.2642%" y="479.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (19 samples, 0.26%)</title><rect x="94.0278%" y="453" width="0.2591%" height="15" fill="rgb(222,202,31)" fg:x="6896" fg:w="19"/><text x="94.2778%" y="463.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (19 samples, 0.26%)</title><rect x="94.0278%" y="437" width="0.2591%" height="15" fill="rgb(243,203,4)" fg:x="6896" fg:w="19"/><text x="94.2778%" y="447.50"></text></g><g><title>libsystem_asl.dylib`asl_msg_to_string_raw (1 samples, 0.01%)</title><rect x="94.2732%" y="421" width="0.0136%" height="15" fill="rgb(237,92,17)" fg:x="6914" fg:w="1"/><text x="94.5232%" y="431.50"></text></g><g><title>libsystem_asl.dylib`asl_string_new (1 samples, 0.01%)</title><rect x="94.2732%" y="405" width="0.0136%" height="15" fill="rgb(231,119,7)" fg:x="6914" fg:w="1"/><text x="94.5232%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="94.2732%" y="389" width="0.0136%" height="15" fill="rgb(237,82,41)" fg:x="6914" fg:w="1"/><text x="94.5232%" y="399.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (21 samples, 0.29%)</title><rect x="94.0142%" y="517" width="0.2863%" height="15" fill="rgb(226,81,48)" fg:x="6895" fg:w="21"/><text x="94.2642%" y="527.50"></text></g><g><title>libcoretls.dylib`tls_metric_event_done (1 samples, 0.01%)</title><rect x="94.2869%" y="501" width="0.0136%" height="15" fill="rgb(234,70,51)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="511.50"></text></g><g><title>libsystem_asl.dylib`asl_log (1 samples, 0.01%)</title><rect x="94.2869%" y="485" width="0.0136%" height="15" fill="rgb(251,86,4)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="495.50"></text></g><g><title>libsystem_asl.dylib`_asl_lib_vlog (1 samples, 0.01%)</title><rect x="94.2869%" y="469" width="0.0136%" height="15" fill="rgb(244,144,28)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="479.50"></text></g><g><title>libsystem_asl.dylib`_asl_send_message (1 samples, 0.01%)</title><rect x="94.2869%" y="453" width="0.0136%" height="15" fill="rgb(232,161,39)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="463.50"></text></g><g><title>libsystem_asl.dylib`_asl_mt_shim_send_message (1 samples, 0.01%)</title><rect x="94.2869%" y="437" width="0.0136%" height="15" fill="rgb(247,34,51)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="447.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.01%)</title><rect x="94.2869%" y="421" width="0.0136%" height="15" fill="rgb(225,132,2)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="431.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_pack_message (1 samples, 0.01%)</title><rect x="94.2869%" y="405" width="0.0136%" height="15" fill="rgb(209,159,44)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (1 samples, 0.01%)</title><rect x="94.2869%" y="389" width="0.0136%" height="15" fill="rgb(251,214,1)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.01%)</title><rect x="94.2869%" y="373" width="0.0136%" height="15" fill="rgb(247,84,47)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="94.2869%" y="357" width="0.0136%" height="15" fill="rgb(240,111,43)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (1 samples, 0.01%)</title><rect x="94.2869%" y="341" width="0.0136%" height="15" fill="rgb(215,214,35)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_string_serialize (1 samples, 0.01%)</title><rect x="94.2869%" y="325" width="0.0136%" height="15" fill="rgb(248,207,23)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="94.2869%" y="309" width="0.0136%" height="15" fill="rgb(214,186,4)" fg:x="6915" fg:w="1"/><text x="94.5369%" y="319.50"></text></g><g><title>libcoretls.dylib`HMAC_Hmac (1 samples, 0.01%)</title><rect x="94.3142%" y="437" width="0.0136%" height="15" fill="rgb(220,133,22)" fg:x="6917" fg:w="1"/><text x="94.5642%" y="447.50"></text></g><g><title>libsystem_c.dylib`__memset_chk (1 samples, 0.01%)</title><rect x="94.3142%" y="421" width="0.0136%" height="15" fill="rgb(239,134,19)" fg:x="6917" fg:w="1"/><text x="94.5642%" y="431.50"></text></g><g><title>libcoretls.dylib`SSLProcessFinished (2 samples, 0.03%)</title><rect x="94.3142%" y="501" width="0.0273%" height="15" fill="rgb(250,140,9)" fg:x="6917" fg:w="2"/><text x="94.5642%" y="511.50"></text></g><g><title>libcoretls.dylib`tls12ComputeFinishedMac (2 samples, 0.03%)</title><rect x="94.3142%" y="485" width="0.0273%" height="15" fill="rgb(225,59,14)" fg:x="6917" fg:w="2"/><text x="94.5642%" y="495.50"></text></g><g><title>libcoretls.dylib`tls_handshake_internal_prf (2 samples, 0.03%)</title><rect x="94.3142%" y="469" width="0.0273%" height="15" fill="rgb(214,152,51)" fg:x="6917" fg:w="2"/><text x="94.5642%" y="479.50"></text></g><g><title>libcoretls.dylib`tlsPHash (2 samples, 0.03%)</title><rect x="94.3142%" y="453" width="0.0273%" height="15" fill="rgb(251,227,43)" fg:x="6917" fg:w="2"/><text x="94.5642%" y="463.50"></text></g><g><title>libcoretls.dylib`HMAC_Update (1 samples, 0.01%)</title><rect x="94.3278%" y="437" width="0.0136%" height="15" fill="rgb(241,96,17)" fg:x="6918" fg:w="1"/><text x="94.5778%" y="447.50"></text></g><g><title>libcoretls.dylib`HashSHA384Update (1 samples, 0.01%)</title><rect x="94.3278%" y="421" width="0.0136%" height="15" fill="rgb(234,198,43)" fg:x="6918" fg:w="1"/><text x="94.5778%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="94.3278%" y="405" width="0.0136%" height="15" fill="rgb(220,108,29)" fg:x="6918" fg:w="1"/><text x="94.5778%" y="415.50"></text></g><g><title>libcoretls.dylib`SSLProcessServerHello (1 samples, 0.01%)</title><rect x="94.3414%" y="501" width="0.0136%" height="15" fill="rgb(226,163,33)" fg:x="6919" fg:w="1"/><text x="94.5914%" y="511.50"></text></g><g><title>libcoretls.dylib`SSLProcessServerHelloExtensions (1 samples, 0.01%)</title><rect x="94.3414%" y="485" width="0.0136%" height="15" fill="rgb(205,194,45)" fg:x="6919" fg:w="1"/><text x="94.5914%" y="495.50"></text></g><g><title>libcoretls.dylib`HashSHA256Final (2 samples, 0.03%)</title><rect x="94.3551%" y="485" width="0.0273%" height="15" fill="rgb(206,143,44)" fg:x="6920" fg:w="2"/><text x="94.6051%" y="495.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_final_64be (2 samples, 0.03%)</title><rect x="94.3551%" y="469" width="0.0273%" height="15" fill="rgb(236,136,36)" fg:x="6920" fg:w="2"/><text x="94.6051%" y="479.50"></text></g><g><title>libcoretls.dylib`HashSHA256Init (1 samples, 0.01%)</title><rect x="94.3823%" y="485" width="0.0136%" height="15" fill="rgb(249,172,42)" fg:x="6922" fg:w="1"/><text x="94.6323%" y="495.50"></text></g><g><title>libcorecrypto.dylib`cc_disable_dit (1 samples, 0.01%)</title><rect x="94.3823%" y="469" width="0.0136%" height="15" fill="rgb(216,139,23)" fg:x="6922" fg:w="1"/><text x="94.6323%" y="479.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_free (1 samples, 0.01%)</title><rect x="94.3960%" y="437" width="0.0136%" height="15" fill="rgb(207,166,20)" fg:x="6923" fg:w="1"/><text x="94.6460%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="94.3960%" y="421" width="0.0136%" height="15" fill="rgb(210,209,22)" fg:x="6923" fg:w="1"/><text x="94.6460%" y="431.50"></text></g><g><title>libcorecrypto.dylib`ccec_affinify_x_only_ws (5 samples, 0.07%)</title><rect x="94.4096%" y="405" width="0.0682%" height="15" fill="rgb(232,118,20)" fg:x="6924" fg:w="5"/><text x="94.6596%" y="415.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (5 samples, 0.07%)</title><rect x="94.4096%" y="389" width="0.0682%" height="15" fill="rgb(238,113,42)" fg:x="6924" fg:w="5"/><text x="94.6596%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_add_asm (6 samples, 0.08%)</title><rect x="94.5869%" y="373" width="0.0818%" height="15" fill="rgb(231,42,5)" fg:x="6937" fg:w="6"/><text x="94.8369%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="94.6687%" y="373" width="0.0136%" height="15" fill="rgb(243,166,24)" fg:x="6943" fg:w="1"/><text x="94.9187%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (8 samples, 0.11%)</title><rect x="94.6823%" y="373" width="0.1091%" height="15" fill="rgb(237,226,12)" fg:x="6944" fg:w="8"/><text x="94.9323%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (9 samples, 0.12%)</title><rect x="94.7914%" y="373" width="0.1227%" height="15" fill="rgb(229,133,24)" fg:x="6952" fg:w="9"/><text x="95.0414%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cc_try_abort_if (2 samples, 0.03%)</title><rect x="94.9141%" y="357" width="0.0273%" height="15" fill="rgb(238,33,43)" fg:x="6961" fg:w="2"/><text x="95.1641%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_double_ws (30 samples, 0.41%)</title><rect x="94.5732%" y="389" width="0.4091%" height="15" fill="rgb(227,59,38)" fg:x="6936" fg:w="30"/><text x="94.8232%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (5 samples, 0.07%)</title><rect x="94.9141%" y="373" width="0.0682%" height="15" fill="rgb(230,97,0)" fg:x="6961" fg:w="5"/><text x="95.1641%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (3 samples, 0.04%)</title><rect x="94.9414%" y="357" width="0.0409%" height="15" fill="rgb(250,173,50)" fg:x="6963" fg:w="3"/><text x="95.1914%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="94.9823%" y="357" width="0.0136%" height="15" fill="rgb(240,15,50)" fg:x="6966" fg:w="1"/><text x="95.2323%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_add_asm (1 samples, 0.01%)</title><rect x="94.9959%" y="357" width="0.0136%" height="15" fill="rgb(221,93,22)" fg:x="6967" fg:w="1"/><text x="95.2459%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (2 samples, 0.03%)</title><rect x="95.0095%" y="357" width="0.0273%" height="15" fill="rgb(245,180,53)" fg:x="6968" fg:w="2"/><text x="95.2595%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_add_ws (1 samples, 0.01%)</title><rect x="95.0368%" y="357" width="0.0136%" height="15" fill="rgb(231,88,51)" fg:x="6970" fg:w="1"/><text x="95.2868%" y="367.50"></text></g><g><title>libcorecrypto.dylib`cczp_div2_ws (1 samples, 0.01%)</title><rect x="95.0504%" y="357" width="0.0136%" height="15" fill="rgb(240,58,21)" fg:x="6971" fg:w="1"/><text x="95.3004%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="95.0504%" y="341" width="0.0136%" height="15" fill="rgb(237,21,10)" fg:x="6971" fg:w="1"/><text x="95.3004%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (8 samples, 0.11%)</title><rect x="94.9823%" y="373" width="0.1091%" height="15" fill="rgb(218,43,11)" fg:x="6966" fg:w="8"/><text x="95.2323%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (2 samples, 0.03%)</title><rect x="95.0641%" y="357" width="0.0273%" height="15" fill="rgb(218,221,29)" fg:x="6972" fg:w="2"/><text x="95.3141%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (2 samples, 0.03%)</title><rect x="95.0641%" y="341" width="0.0273%" height="15" fill="rgb(214,118,42)" fg:x="6972" fg:w="2"/><text x="95.3141%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (7 samples, 0.10%)</title><rect x="95.0914%" y="373" width="0.0954%" height="15" fill="rgb(251,200,26)" fg:x="6974" fg:w="7"/><text x="95.3414%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_n_asm (1 samples, 0.01%)</title><rect x="95.1868%" y="373" width="0.0136%" height="15" fill="rgb(237,101,39)" fg:x="6981" fg:w="1"/><text x="95.4368%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_normalized_ws (17 samples, 0.23%)</title><rect x="94.9823%" y="389" width="0.2318%" height="15" fill="rgb(251,117,11)" fg:x="6966" fg:w="17"/><text x="95.2323%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.01%)</title><rect x="95.2004%" y="373" width="0.0136%" height="15" fill="rgb(216,223,23)" fg:x="6982" fg:w="1"/><text x="95.4504%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 0.01%)</title><rect x="95.2141%" y="389" width="0.0136%" height="15" fill="rgb(251,54,12)" fg:x="6983" fg:w="1"/><text x="95.4641%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (1 samples, 0.01%)</title><rect x="95.2141%" y="373" width="0.0136%" height="15" fill="rgb(254,176,54)" fg:x="6983" fg:w="1"/><text x="95.4641%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (1 samples, 0.01%)</title><rect x="95.2550%" y="357" width="0.0136%" height="15" fill="rgb(210,32,8)" fg:x="6986" fg:w="1"/><text x="95.5050%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 0.01%)</title><rect x="95.2686%" y="357" width="0.0136%" height="15" fill="rgb(235,52,38)" fg:x="6987" fg:w="1"/><text x="95.5186%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (4 samples, 0.05%)</title><rect x="95.2822%" y="357" width="0.0545%" height="15" fill="rgb(231,4,44)" fg:x="6988" fg:w="4"/><text x="95.5322%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (12 samples, 0.16%)</title><rect x="95.2277%" y="373" width="0.1636%" height="15" fill="rgb(249,2,32)" fg:x="6984" fg:w="12"/><text x="95.4777%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (4 samples, 0.05%)</title><rect x="95.3368%" y="357" width="0.0545%" height="15" fill="rgb(224,65,26)" fg:x="6992" fg:w="4"/><text x="95.5868%" y="367.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_add (3 samples, 0.04%)</title><rect x="95.3504%" y="341" width="0.0409%" height="15" fill="rgb(250,73,40)" fg:x="6993" fg:w="3"/><text x="95.6004%" y="351.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (9 samples, 0.12%)</title><rect x="95.3913%" y="373" width="0.1227%" height="15" fill="rgb(253,177,16)" fg:x="6996" fg:w="9"/><text x="95.6413%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (3 samples, 0.04%)</title><rect x="95.5140%" y="373" width="0.0409%" height="15" fill="rgb(217,32,34)" fg:x="7005" fg:w="3"/><text x="95.7640%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_sub_normalized_ws (25 samples, 0.34%)</title><rect x="95.2277%" y="389" width="0.3409%" height="15" fill="rgb(212,7,10)" fg:x="6984" fg:w="25"/><text x="95.4777%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.01%)</title><rect x="95.5549%" y="373" width="0.0136%" height="15" fill="rgb(245,89,8)" fg:x="7008" fg:w="1"/><text x="95.8049%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_sub_ws (1 samples, 0.01%)</title><rect x="95.5686%" y="389" width="0.0136%" height="15" fill="rgb(237,16,53)" fg:x="7009" fg:w="1"/><text x="95.8186%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (1 samples, 0.01%)</title><rect x="95.5686%" y="373" width="0.0136%" height="15" fill="rgb(250,204,30)" fg:x="7009" fg:w="1"/><text x="95.8186%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul_256_montgomery (20 samples, 0.27%)</title><rect x="95.5822%" y="389" width="0.2727%" height="15" fill="rgb(208,77,27)" fg:x="7010" fg:w="20"/><text x="95.8322%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_sqr_256_montgomery (17 samples, 0.23%)</title><rect x="95.8549%" y="389" width="0.2318%" height="15" fill="rgb(250,204,28)" fg:x="7030" fg:w="17"/><text x="96.1049%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cczp_mul_ws (1 samples, 0.01%)</title><rect x="96.0867%" y="389" width="0.0136%" height="15" fill="rgb(244,63,21)" fg:x="7047" fg:w="1"/><text x="96.3367%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccec_twin_mult_ws (120 samples, 1.64%)</title><rect x="94.4778%" y="405" width="1.6362%" height="15" fill="rgb(236,85,44)" fg:x="6929" fg:w="120"/><text x="94.7278%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cczp_sub_ws (1 samples, 0.01%)</title><rect x="96.1004%" y="389" width="0.0136%" height="15" fill="rgb(215,98,4)" fg:x="7048" fg:w="1"/><text x="96.3504%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_addmul1_asm (1 samples, 0.01%)</title><rect x="96.1549%" y="389" width="0.0136%" height="15" fill="rgb(235,38,11)" fg:x="7052" fg:w="1"/><text x="96.4049%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_cmp (1 samples, 0.01%)</title><rect x="96.1685%" y="389" width="0.0136%" height="15" fill="rgb(254,186,25)" fg:x="7053" fg:w="1"/><text x="96.4185%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_mul1_asm (1 samples, 0.01%)</title><rect x="96.1822%" y="389" width="0.0136%" height="15" fill="rgb(225,55,31)" fg:x="7054" fg:w="1"/><text x="96.4322%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_rsub (1 samples, 0.01%)</title><rect x="96.1958%" y="373" width="0.0136%" height="15" fill="rgb(211,15,21)" fg:x="7055" fg:w="1"/><text x="96.4458%" y="383.50"></text></g><g><title>libcorecrypto.dylib`ccn_shift_right (1 samples, 0.01%)</title><rect x="96.2094%" y="373" width="0.0136%" height="15" fill="rgb(215,187,41)" fg:x="7056" fg:w="1"/><text x="96.4594%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_redc_ws (3 samples, 0.04%)</title><rect x="96.1958%" y="389" width="0.0409%" height="15" fill="rgb(248,69,32)" fg:x="7055" fg:w="3"/><text x="96.4458%" y="399.50"></text></g><g><title>libcorecrypto.dylib`cczp_cond_negate (1 samples, 0.01%)</title><rect x="96.2231%" y="373" width="0.0136%" height="15" fill="rgb(252,102,52)" fg:x="7057" fg:w="1"/><text x="96.4731%" y="383.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (11 samples, 0.15%)</title><rect x="96.1140%" y="405" width="0.1500%" height="15" fill="rgb(253,140,32)" fg:x="7049" fg:w="11"/><text x="96.3640%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_ws (2 samples, 0.03%)</title><rect x="96.2367%" y="389" width="0.0273%" height="15" fill="rgb(216,56,42)" fg:x="7058" fg:w="2"/><text x="96.4867%" y="399.50"></text></g><g><title>libcorecrypto.dylib`ccn_cond_neg (2 samples, 0.03%)</title><rect x="96.2367%" y="373" width="0.0273%" height="15" fill="rgb(216,184,14)" fg:x="7058" fg:w="2"/><text x="96.4867%" y="383.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeMessage (145 samples, 1.98%)</title><rect x="94.3005%" y="517" width="1.9771%" height="15" fill="rgb(237,187,27)" fg:x="6916" fg:w="145"/><text x="94.5505%" y="527.50">l..</text></g><g><title>libcoretls.dylib`SSLProcessServerKeyExchange (141 samples, 1.92%)</title><rect x="94.3551%" y="501" width="1.9226%" height="15" fill="rgb(219,65,3)" fg:x="6920" fg:w="141"/><text x="94.6051%" y="511.50">l..</text></g><g><title>libcoretls.dylib`sslRawVerify (138 samples, 1.88%)</title><rect x="94.3960%" y="485" width="1.8816%" height="15" fill="rgb(245,83,25)" fg:x="6923" fg:w="138"/><text x="94.6460%" y="495.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_verify (138 samples, 1.88%)</title><rect x="94.3960%" y="469" width="1.8816%" height="15" fill="rgb(214,205,45)" fg:x="6923" fg:w="138"/><text x="94.6460%" y="479.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest (138 samples, 1.88%)</title><rect x="94.3960%" y="453" width="1.8816%" height="15" fill="rgb(241,20,18)" fg:x="6923" fg:w="138"/><text x="94.6460%" y="463.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_verify_digest_ws (137 samples, 1.87%)</title><rect x="94.4096%" y="437" width="1.8680%" height="15" fill="rgb(232,163,23)" fg:x="6924" fg:w="137"/><text x="94.6596%" y="447.50">l..</text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (137 samples, 1.87%)</title><rect x="94.4096%" y="421" width="1.8680%" height="15" fill="rgb(214,5,46)" fg:x="6924" fg:w="137"/><text x="94.6596%" y="431.50">l..</text></g><g><title>libcorecrypto.dylib`cczp_mul_default_ws (1 samples, 0.01%)</title><rect x="96.2640%" y="405" width="0.0136%" height="15" fill="rgb(229,78,17)" fg:x="7060" fg:w="1"/><text x="96.5140%" y="415.50"></text></g><g><title>libcorecrypto.dylib`cc_ws_alloc (1 samples, 0.01%)</title><rect x="96.2640%" y="389" width="0.0136%" height="15" fill="rgb(248,89,10)" fg:x="7060" fg:w="1"/><text x="96.5140%" y="399.50"></text></g><g><title>libcoretls.dylib`SSLSendFlight (1 samples, 0.01%)</title><rect x="96.2776%" y="517" width="0.0136%" height="15" fill="rgb(248,54,15)" fg:x="7061" fg:w="1"/><text x="96.5276%" y="527.50"></text></g><g><title>libcoretls.dylib`HashSHA1Update (1 samples, 0.01%)</title><rect x="96.2912%" y="501" width="0.0136%" height="15" fill="rgb(223,116,6)" fg:x="7062" fg:w="1"/><text x="96.5412%" y="511.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA1_compress (1 samples, 0.01%)</title><rect x="96.2912%" y="485" width="0.0136%" height="15" fill="rgb(205,125,38)" fg:x="7062" fg:w="1"/><text x="96.5412%" y="495.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress (1 samples, 0.01%)</title><rect x="96.3049%" y="485" width="0.0136%" height="15" fill="rgb(251,78,38)" fg:x="7063" fg:w="1"/><text x="96.5549%" y="495.50"></text></g><g><title>libcoretls.dylib`HashSHA256Update (2 samples, 0.03%)</title><rect x="96.3049%" y="501" width="0.0273%" height="15" fill="rgb(253,78,28)" fg:x="7063" fg:w="2"/><text x="96.5549%" y="511.50"></text></g><g><title>libcorecrypto.dylib`ccdigest_update (1 samples, 0.01%)</title><rect x="96.3185%" y="485" width="0.0136%" height="15" fill="rgb(209,120,3)" fg:x="7064" fg:w="1"/><text x="96.5685%" y="495.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (329 samples, 4.49%)</title><rect x="91.9144%" y="533" width="4.4860%" height="15" fill="rgb(238,229,9)" fg:x="6741" fg:w="329"/><text x="92.1644%" y="543.50">libco..</text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (8 samples, 0.11%)</title><rect x="96.2912%" y="517" width="0.1091%" height="15" fill="rgb(253,159,18)" fg:x="7062" fg:w="8"/><text x="96.5412%" y="527.50"></text></g><g><title>libcoretls.dylib`HashSHA384Update (5 samples, 0.07%)</title><rect x="96.3322%" y="501" width="0.0682%" height="15" fill="rgb(244,42,34)" fg:x="7065" fg:w="5"/><text x="96.5822%" y="511.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA512_compress_hwassist (5 samples, 0.07%)</title><rect x="96.3322%" y="485" width="0.0682%" height="15" fill="rgb(224,8,7)" fg:x="7065" fg:w="5"/><text x="96.5822%" y="495.50"></text></g><g><title>Security`SSLHandshake (930 samples, 12.68%)</title><rect x="83.7469%" y="581" width="12.6807%" height="15" fill="rgb(210,201,45)" fg:x="6142" fg:w="930"/><text x="83.9969%" y="591.50">Security`SSLHandsha..</text></g><g><title>Security`SSLHandshakeProceed (930 samples, 12.68%)</title><rect x="83.7469%" y="565" width="12.6807%" height="15" fill="rgb(252,185,21)" fg:x="6142" fg:w="930"/><text x="83.9969%" y="575.50">Security`SSLHandsha..</text></g><g><title>libcoretls.dylib`tls_handshake_process (332 samples, 4.53%)</title><rect x="91.9007%" y="549" width="4.5269%" height="15" fill="rgb(223,131,1)" fg:x="6740" fg:w="332"/><text x="92.1507%" y="559.50">libco..</text></g><g><title>libcoretls.dylib`SSLUpdateHandshakeMacs (2 samples, 0.03%)</title><rect x="96.4003%" y="533" width="0.0273%" height="15" fill="rgb(245,141,16)" fg:x="7070" fg:w="2"/><text x="96.6503%" y="543.50"></text></g><g><title>Security`SecTrustSetPolicies (2 samples, 0.03%)</title><rect x="96.4276%" y="581" width="0.0273%" height="15" fill="rgb(229,55,45)" fg:x="7072" fg:w="2"/><text x="96.6776%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.01%)</title><rect x="96.4412%" y="565" width="0.0136%" height="15" fill="rgb(208,92,15)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.01%)</title><rect x="96.4412%" y="549" width="0.0136%" height="15" fill="rgb(234,185,47)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="559.50"></text></g><g><title>Security`__SecTrustSetPolicies_block_invoke (1 samples, 0.01%)</title><rect x="96.4412%" y="533" width="0.0136%" height="15" fill="rgb(253,104,50)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (1 samples, 0.01%)</title><rect x="96.4412%" y="517" width="0.0136%" height="15" fill="rgb(205,70,7)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="527.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.01%)</title><rect x="96.4412%" y="501" width="0.0136%" height="15" fill="rgb(240,178,43)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="511.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (1 samples, 0.01%)</title><rect x="96.4412%" y="485" width="0.0136%" height="15" fill="rgb(214,112,2)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="495.50"></text></g><g><title>CoreFoundation`cow_cleanup (1 samples, 0.01%)</title><rect x="96.4412%" y="469" width="0.0136%" height="15" fill="rgb(206,46,17)" fg:x="7073" fg:w="1"/><text x="96.6912%" y="479.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.01%)</title><rect x="96.4549%" y="565" width="0.0136%" height="15" fill="rgb(225,220,16)" fg:x="7074" fg:w="1"/><text x="96.7049%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.01%)</title><rect x="96.4685%" y="549" width="0.0136%" height="15" fill="rgb(238,65,40)" fg:x="7075" fg:w="1"/><text x="96.7185%" y="559.50"></text></g><g><title>CoreFoundation`__CFStringEqual (1 samples, 0.01%)</title><rect x="96.4685%" y="533" width="0.0136%" height="15" fill="rgb(230,151,21)" fg:x="7075" fg:w="1"/><text x="96.7185%" y="543.50"></text></g><g><title>graphgen`security_framework::policy::SecPolicy::create_ssl (3 samples, 0.04%)</title><rect x="96.4549%" y="581" width="0.0409%" height="15" fill="rgb(218,58,49)" fg:x="7074" fg:w="3"/><text x="96.7049%" y="591.50"></text></g><g><title>Security`SecPolicyCreateSSL_internal (2 samples, 0.03%)</title><rect x="96.4685%" y="565" width="0.0273%" height="15" fill="rgb(219,179,14)" fg:x="7075" fg:w="2"/><text x="96.7185%" y="575.50"></text></g><g><title>Security`set_ssl_ekus (1 samples, 0.01%)</title><rect x="96.4821%" y="549" width="0.0136%" height="15" fill="rgb(223,72,1)" fg:x="7076" fg:w="1"/><text x="96.7321%" y="559.50"></text></g><g><title>Security`add_eku (1 samples, 0.01%)</title><rect x="96.4821%" y="533" width="0.0136%" height="15" fill="rgb(238,126,10)" fg:x="7076" fg:w="1"/><text x="96.7321%" y="543.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 0.01%)</title><rect x="96.4821%" y="517" width="0.0136%" height="15" fill="rgb(224,206,38)" fg:x="7076" fg:w="1"/><text x="96.7321%" y="527.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.01%)</title><rect x="96.4821%" y="501" width="0.0136%" height="15" fill="rgb(212,201,54)" fg:x="7076" fg:w="1"/><text x="96.7321%" y="511.50"></text></g><g><title>libobjc.A.dylib`object_setClass (1 samples, 0.01%)</title><rect x="96.4821%" y="485" width="0.0136%" height="15" fill="rgb(218,154,48)" fg:x="7076" fg:w="1"/><text x="96.7321%" y="495.50"></text></g><g><title>CoreFoundation`CFBundleGetIdentifier (1 samples, 0.01%)</title><rect x="96.4958%" y="549" width="0.0136%" height="15" fill="rgb(232,93,24)" fg:x="7077" fg:w="1"/><text x="96.7458%" y="559.50"></text></g><g><title>libdispatch.dylib`voucher_adopt (1 samples, 0.01%)</title><rect x="96.5094%" y="485" width="0.0136%" height="15" fill="rgb(245,30,21)" fg:x="7078" fg:w="1"/><text x="96.7594%" y="495.50"></text></g><g><title>Security`SetLastError (1 samples, 0.01%)</title><rect x="96.5230%" y="437" width="0.0136%" height="15" fill="rgb(242,148,29)" fg:x="7079" fg:w="1"/><text x="96.7730%" y="447.50"></text></g><g><title>Security`SecXPCDictionarySetCertificates (1 samples, 0.01%)</title><rect x="96.5367%" y="389" width="0.0136%" height="15" fill="rgb(244,153,54)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="399.50"></text></g><g><title>libxpc.dylib`xpc_array_set_data (1 samples, 0.01%)</title><rect x="96.5367%" y="373" width="0.0136%" height="15" fill="rgb(252,87,22)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="383.50"></text></g><g><title>libxpc.dylib`xpc_data_create (1 samples, 0.01%)</title><rect x="96.5367%" y="357" width="0.0136%" height="15" fill="rgb(210,51,29)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="367.50"></text></g><g><title>libxpc.dylib`xpc_data_create_with_dispatch_data (1 samples, 0.01%)</title><rect x="96.5367%" y="341" width="0.0136%" height="15" fill="rgb(242,136,47)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="351.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.01%)</title><rect x="96.5367%" y="325" width="0.0136%" height="15" fill="rgb(238,68,4)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="335.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.01%)</title><rect x="96.5367%" y="309" width="0.0136%" height="15" fill="rgb(242,161,30)" fg:x="7080" fg:w="1"/><text x="96.7867%" y="319.50"></text></g><g><title>Security`SecXPCDictionarySetDataArray (1 samples, 0.01%)</title><rect x="96.5503%" y="389" width="0.0136%" height="15" fill="rgb(218,58,44)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="399.50"></text></g><g><title>libxpc.dylib`xpc_array_create (1 samples, 0.01%)</title><rect x="96.5503%" y="373" width="0.0136%" height="15" fill="rgb(252,125,32)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_array_create (1 samples, 0.01%)</title><rect x="96.5503%" y="357" width="0.0136%" height="15" fill="rgb(219,178,0)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_alloc (1 samples, 0.01%)</title><rect x="96.5503%" y="341" width="0.0136%" height="15" fill="rgb(213,152,7)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="96.5503%" y="325" width="0.0136%" height="15" fill="rgb(249,109,34)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="96.5503%" y="309" width="0.0136%" height="15" fill="rgb(232,96,21)" fg:x="7081" fg:w="1"/><text x="96.8003%" y="319.50"></text></g><g><title>CoreFoundation`CFStrIsUnicode (1 samples, 0.01%)</title><rect x="96.5639%" y="373" width="0.0136%" height="15" fill="rgb(228,27,39)" fg:x="7082" fg:w="1"/><text x="96.8139%" y="383.50"></text></g><g><title>CoreFoundation`CFStringGetMaximumSizeForEncoding (1 samples, 0.01%)</title><rect x="96.5776%" y="325" width="0.0136%" height="15" fill="rgb(211,182,52)" fg:x="7083" fg:w="1"/><text x="96.8276%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI __apply:context:] (3 samples, 0.04%)</title><rect x="96.5912%" y="309" width="0.0409%" height="15" fill="rgb(234,178,38)" fg:x="7084" fg:w="3"/><text x="96.8412%" y="319.50"></text></g><g><title>CoreFoundation`__CFXPCDictionaryApplier (3 samples, 0.04%)</title><rect x="96.5912%" y="293" width="0.0409%" height="15" fill="rgb(221,111,3)" fg:x="7084" fg:w="3"/><text x="96.8412%" y="303.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (3 samples, 0.04%)</title><rect x="96.5912%" y="277" width="0.0409%" height="15" fill="rgb(228,175,21)" fg:x="7084" fg:w="3"/><text x="96.8412%" y="287.50"></text></g><g><title>libxpc.dylib`_xpc_int64_create_tagged (2 samples, 0.03%)</title><rect x="96.6049%" y="261" width="0.0273%" height="15" fill="rgb(228,174,43)" fg:x="7085" fg:w="2"/><text x="96.8549%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_and_wakeup (1 samples, 0.01%)</title><rect x="96.6321%" y="277" width="0.0136%" height="15" fill="rgb(211,191,0)" fg:x="7087" fg:w="1"/><text x="96.8821%" y="287.50"></text></g><g><title>CoreFoundation`_CFDataCreateDispatchData (4 samples, 0.05%)</title><rect x="96.6321%" y="293" width="0.0545%" height="15" fill="rgb(253,117,3)" fg:x="7087" fg:w="4"/><text x="96.8821%" y="303.50"></text></g><g><title>libdispatch.dylib`dispatch_data_create (3 samples, 0.04%)</title><rect x="96.6458%" y="277" width="0.0409%" height="15" fill="rgb(241,127,19)" fg:x="7088" fg:w="3"/><text x="96.8958%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (3 samples, 0.04%)</title><rect x="96.6458%" y="261" width="0.0409%" height="15" fill="rgb(218,103,12)" fg:x="7088" fg:w="3"/><text x="96.8958%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (3 samples, 0.04%)</title><rect x="96.6458%" y="245" width="0.0409%" height="15" fill="rgb(236,214,43)" fg:x="7088" fg:w="3"/><text x="96.8958%" y="255.50"></text></g><g><title>libdispatch.dylib`dispatch_data_create (1 samples, 0.01%)</title><rect x="96.6867%" y="293" width="0.0136%" height="15" fill="rgb(244,144,19)" fg:x="7091" fg:w="1"/><text x="96.9367%" y="303.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.01%)</title><rect x="96.7003%" y="261" width="0.0136%" height="15" fill="rgb(246,188,10)" fg:x="7092" fg:w="1"/><text x="96.9503%" y="271.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.01%)</title><rect x="96.7003%" y="245" width="0.0136%" height="15" fill="rgb(212,193,33)" fg:x="7092" fg:w="1"/><text x="96.9503%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="96.7003%" y="229" width="0.0136%" height="15" fill="rgb(241,51,29)" fg:x="7092" fg:w="1"/><text x="96.9503%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="96.7003%" y="213" width="0.0136%" height="15" fill="rgb(211,58,19)" fg:x="7092" fg:w="1"/><text x="96.9503%" y="223.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (10 samples, 0.14%)</title><rect x="96.5912%" y="325" width="0.1364%" height="15" fill="rgb(229,111,26)" fg:x="7084" fg:w="10"/><text x="96.8412%" y="335.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (7 samples, 0.10%)</title><rect x="96.6321%" y="309" width="0.0954%" height="15" fill="rgb(213,115,40)" fg:x="7087" fg:w="7"/><text x="96.8821%" y="319.50"></text></g><g><title>libxpc.dylib`xpc_array_create (2 samples, 0.03%)</title><rect x="96.7003%" y="293" width="0.0273%" height="15" fill="rgb(209,56,44)" fg:x="7092" fg:w="2"/><text x="96.9503%" y="303.50"></text></g><g><title>libxpc.dylib`_xpc_array_create (2 samples, 0.03%)</title><rect x="96.7003%" y="277" width="0.0273%" height="15" fill="rgb(230,108,32)" fg:x="7092" fg:w="2"/><text x="96.9503%" y="287.50"></text></g><g><title>libxpc.dylib`_xpc_alloc (1 samples, 0.01%)</title><rect x="96.7139%" y="261" width="0.0136%" height="15" fill="rgb(216,165,31)" fg:x="7093" fg:w="1"/><text x="96.9639%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.01%)</title><rect x="96.7139%" y="245" width="0.0136%" height="15" fill="rgb(218,122,21)" fg:x="7093" fg:w="1"/><text x="96.9639%" y="255.50"></text></g><g><title>CoreFoundation`__CFXPCDictionaryApplier (12 samples, 0.16%)</title><rect x="96.5776%" y="341" width="0.1636%" height="15" fill="rgb(223,224,47)" fg:x="7083" fg:w="12"/><text x="96.8276%" y="351.50"></text></g><g><title>libdispatch.dylib`_os_object_retain (1 samples, 0.01%)</title><rect x="96.7276%" y="325" width="0.0136%" height="15" fill="rgb(238,102,44)" fg:x="7094" fg:w="1"/><text x="96.9776%" y="335.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$_os_object_release_without_xref_dispose (1 samples, 0.01%)</title><rect x="96.7412%" y="341" width="0.0136%" height="15" fill="rgb(236,46,40)" fg:x="7095" fg:w="1"/><text x="96.9912%" y="351.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __apply:context:] (14 samples, 0.19%)</title><rect x="96.5776%" y="357" width="0.1909%" height="15" fill="rgb(247,202,50)" fg:x="7083" fg:w="14"/><text x="96.8276%" y="367.50"></text></g><g><title>libxpc.dylib`xpc_bool_create (1 samples, 0.01%)</title><rect x="96.7548%" y="341" width="0.0136%" height="15" fill="rgb(209,99,20)" fg:x="7096" fg:w="1"/><text x="97.0048%" y="351.50"></text></g><g><title>Security`SecXPCDictionarySetPolicies (16 samples, 0.22%)</title><rect x="96.5639%" y="389" width="0.2182%" height="15" fill="rgb(252,27,34)" fg:x="7082" fg:w="16"/><text x="96.8139%" y="399.50"></text></g><g><title>CoreFoundation`_CFXPCCreateXPCObjectFromCFObject (15 samples, 0.20%)</title><rect x="96.5776%" y="373" width="0.2045%" height="15" fill="rgb(215,206,23)" fg:x="7083" fg:w="15"/><text x="96.8276%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="96.7685%" y="357" width="0.0136%" height="15" fill="rgb(212,135,36)" fg:x="7097" fg:w="1"/><text x="97.0185%" y="367.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke (19 samples, 0.26%)</title><rect x="96.5367%" y="405" width="0.2591%" height="15" fill="rgb(240,189,1)" fg:x="7080" fg:w="19"/><text x="96.7867%" y="415.50"></text></g><g><title>libxpc.dylib`xpc_array_set_data (1 samples, 0.01%)</title><rect x="96.7821%" y="389" width="0.0136%" height="15" fill="rgb(242,56,20)" fg:x="7098" fg:w="1"/><text x="97.0321%" y="399.50"></text></g><g><title>Security`SecXPCDictionaryCopyArrayOptional (1 samples, 0.01%)</title><rect x="96.7957%" y="389" width="0.0136%" height="15" fill="rgb(247,132,33)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="399.50"></text></g><g><title>Security`SecXPCDictionaryCopyArray (1 samples, 0.01%)</title><rect x="96.7957%" y="373" width="0.0136%" height="15" fill="rgb(208,149,11)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="383.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (1 samples, 0.01%)</title><rect x="96.7957%" y="357" width="0.0136%" height="15" fill="rgb(211,33,11)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="367.50"></text></g><g><title>Security`der_decode_plist (1 samples, 0.01%)</title><rect x="96.7957%" y="341" width="0.0136%" height="15" fill="rgb(221,29,38)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="351.50"></text></g><g><title>CoreFoundation`__CFArrayCreateInit (1 samples, 0.01%)</title><rect x="96.7957%" y="325" width="0.0136%" height="15" fill="rgb(206,182,49)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="335.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.01%)</title><rect x="96.7957%" y="309" width="0.0136%" height="15" fill="rgb(216,140,1)" fg:x="7099" fg:w="1"/><text x="97.0457%" y="319.50"></text></g><g><title>Security`DYLD-STUB$$CFSetAddValue (1 samples, 0.01%)</title><rect x="96.8094%" y="341" width="0.0136%" height="15" fill="rgb(232,57,40)" fg:x="7100" fg:w="1"/><text x="97.0594%" y="351.50"></text></g><g><title>Security`SecCEPBasicConstraints (1 samples, 0.01%)</title><rect x="96.8230%" y="341" width="0.0136%" height="15" fill="rgb(224,186,18)" fg:x="7101" fg:w="1"/><text x="97.0730%" y="351.50"></text></g><g><title>CoreFoundation`CFSetAddValue (1 samples, 0.01%)</title><rect x="96.8367%" y="325" width="0.0136%" height="15" fill="rgb(215,121,11)" fg:x="7102" fg:w="1"/><text x="97.0867%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (1 samples, 0.01%)</title><rect x="96.8503%" y="309" width="0.0136%" height="15" fill="rgb(245,147,10)" fg:x="7103" fg:w="1"/><text x="97.1003%" y="319.50"></text></g><g><title>CoreFoundation`CFHash (1 samples, 0.01%)</title><rect x="96.8503%" y="293" width="0.0136%" height="15" fill="rgb(238,153,13)" fg:x="7103" fg:w="1"/><text x="97.1003%" y="303.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (2 samples, 0.03%)</title><rect x="96.8503%" y="325" width="0.0273%" height="15" fill="rgb(233,108,0)" fg:x="7103" fg:w="2"/><text x="97.1003%" y="335.50"></text></g><g><title>CoreFoundation`__CFDataEqual (1 samples, 0.01%)</title><rect x="96.8639%" y="309" width="0.0136%" height="15" fill="rgb(212,157,17)" fg:x="7104" fg:w="1"/><text x="97.1139%" y="319.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (1 samples, 0.01%)</title><rect x="96.8776%" y="309" width="0.0136%" height="15" fill="rgb(225,213,38)" fg:x="7105" fg:w="1"/><text x="97.1276%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="96.8776%" y="293" width="0.0136%" height="15" fill="rgb(248,16,11)" fg:x="7105" fg:w="1"/><text x="97.1276%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="96.8776%" y="325" width="0.0273%" height="15" fill="rgb(241,33,4)" fg:x="7105" fg:w="2"/><text x="97.1276%" y="335.50"></text></g><g><title>CoreFoundation`__CFTypeCollectionRelease (1 samples, 0.01%)</title><rect x="96.8912%" y="309" width="0.0136%" height="15" fill="rgb(222,26,43)" fg:x="7106" fg:w="1"/><text x="97.1412%" y="319.50"></text></g><g><title>CoreFoundation`__CFDataInit (2 samples, 0.03%)</title><rect x="96.9048%" y="325" width="0.0273%" height="15" fill="rgb(243,29,36)" fg:x="7107" fg:w="2"/><text x="97.1548%" y="335.50"></text></g><g><title>CoreFoundation`__CFDataShouldUseAllocator (1 samples, 0.01%)</title><rect x="96.9185%" y="309" width="0.0136%" height="15" fill="rgb(241,9,27)" fg:x="7108" fg:w="1"/><text x="97.1685%" y="319.50"></text></g><g><title>Security`DERParseSequenceContentToObject (3 samples, 0.04%)</title><rect x="96.9321%" y="325" width="0.0409%" height="15" fill="rgb(205,117,26)" fg:x="7109" fg:w="3"/><text x="97.1821%" y="335.50"></text></g><g><title>CoreFoundation`_CFURLCreateURLStringWithBytes (1 samples, 0.01%)</title><rect x="96.9730%" y="293" width="0.0136%" height="15" fill="rgb(209,80,39)" fg:x="7112" fg:w="1"/><text x="97.2230%" y="303.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.01%)</title><rect x="96.9730%" y="277" width="0.0136%" height="15" fill="rgb(239,155,6)" fg:x="7112" fg:w="1"/><text x="97.2230%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="96.9730%" y="261" width="0.0136%" height="15" fill="rgb(212,104,12)" fg:x="7112" fg:w="1"/><text x="97.2230%" y="271.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (3 samples, 0.04%)</title><rect x="96.9730%" y="309" width="0.0409%" height="15" fill="rgb(234,204,3)" fg:x="7112" fg:w="3"/><text x="97.2230%" y="319.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (2 samples, 0.03%)</title><rect x="96.9866%" y="293" width="0.0273%" height="15" fill="rgb(251,218,7)" fg:x="7113" fg:w="2"/><text x="97.2366%" y="303.50"></text></g><g><title>CoreFoundation`scanCharacters (1 samples, 0.01%)</title><rect x="97.0003%" y="277" width="0.0136%" height="15" fill="rgb(221,81,32)" fg:x="7114" fg:w="1"/><text x="97.2503%" y="287.50"></text></g><g><title>Security`SecCEPAuthorityInfoAccess (4 samples, 0.05%)</title><rect x="96.9730%" y="325" width="0.0545%" height="15" fill="rgb(214,152,26)" fg:x="7112" fg:w="4"/><text x="97.2230%" y="335.50"></text></g><g><title>Security`DERParseSequenceContentToObject (1 samples, 0.01%)</title><rect x="97.0139%" y="309" width="0.0136%" height="15" fill="rgb(223,22,3)" fg:x="7115" fg:w="1"/><text x="97.2639%" y="319.50"></text></g><g><title>Security`DERDecodeSeqNext (1 samples, 0.01%)</title><rect x="97.0139%" y="293" width="0.0136%" height="15" fill="rgb(207,174,7)" fg:x="7115" fg:w="1"/><text x="97.2639%" y="303.50"></text></g><g><title>CoreFoundation`-[__NSArrayM addObject:] (1 samples, 0.01%)</title><rect x="97.0275%" y="293" width="0.0136%" height="15" fill="rgb(224,19,52)" fg:x="7116" fg:w="1"/><text x="97.2775%" y="303.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (1 samples, 0.01%)</title><rect x="97.0412%" y="293" width="0.0136%" height="15" fill="rgb(228,24,14)" fg:x="7117" fg:w="1"/><text x="97.2912%" y="303.50"></text></g><g><title>CoreFoundation`_parseComponents (1 samples, 0.01%)</title><rect x="97.0684%" y="245" width="0.0136%" height="15" fill="rgb(230,153,43)" fg:x="7119" fg:w="1"/><text x="97.3184%" y="255.50"></text></g><g><title>CoreFoundation`CFURLCreateWithBytes (3 samples, 0.04%)</title><rect x="97.0548%" y="277" width="0.0409%" height="15" fill="rgb(231,106,12)" fg:x="7118" fg:w="3"/><text x="97.3048%" y="287.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (3 samples, 0.04%)</title><rect x="97.0548%" y="261" width="0.0409%" height="15" fill="rgb(215,92,2)" fg:x="7118" fg:w="3"/><text x="97.3048%" y="271.50"></text></g><g><title>CoreFoundation`constructBuffers (1 samples, 0.01%)</title><rect x="97.0821%" y="245" width="0.0136%" height="15" fill="rgb(249,143,25)" fg:x="7120" fg:w="1"/><text x="97.3321%" y="255.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (1 samples, 0.01%)</title><rect x="97.0821%" y="229" width="0.0136%" height="15" fill="rgb(252,7,35)" fg:x="7120" fg:w="1"/><text x="97.3321%" y="239.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="97.0957%" y="277" width="0.0136%" height="15" fill="rgb(216,69,40)" fg:x="7121" fg:w="1"/><text x="97.3457%" y="287.50"></text></g><g><title>Security`SecCEPCrlDistributionPoints (7 samples, 0.10%)</title><rect x="97.0275%" y="325" width="0.0954%" height="15" fill="rgb(240,36,33)" fg:x="7116" fg:w="7"/><text x="97.2775%" y="335.50"></text></g><g><title>Security`parseGeneralNamesContent (7 samples, 0.10%)</title><rect x="97.0275%" y="309" width="0.0954%" height="15" fill="rgb(231,128,14)" fg:x="7116" fg:w="7"/><text x="97.2775%" y="319.50"></text></g><g><title>Security`appendCRLDPFromGeneralNames (5 samples, 0.07%)</title><rect x="97.0548%" y="293" width="0.0682%" height="15" fill="rgb(245,143,14)" fg:x="7118" fg:w="5"/><text x="97.3048%" y="303.50"></text></g><g><title>Foundation`-[NSURL(NSURL) retain] (1 samples, 0.01%)</title><rect x="97.1094%" y="277" width="0.0136%" height="15" fill="rgb(222,130,28)" fg:x="7122" fg:w="1"/><text x="97.3594%" y="287.50"></text></g><g><title>CoreFoundation`CFDataReplaceBytes (1 samples, 0.01%)</title><rect x="97.1366%" y="293" width="0.0136%" height="15" fill="rgb(212,10,48)" fg:x="7124" fg:w="1"/><text x="97.3866%" y="303.50"></text></g><g><title>Security`createNormalizedX501Name (3 samples, 0.04%)</title><rect x="97.1230%" y="325" width="0.0409%" height="15" fill="rgb(254,118,45)" fg:x="7123" fg:w="3"/><text x="97.3730%" y="335.50"></text></g><g><title>CoreFoundation`__CFDataInit (2 samples, 0.03%)</title><rect x="97.1366%" y="309" width="0.0273%" height="15" fill="rgb(228,6,45)" fg:x="7124" fg:w="2"/><text x="97.3866%" y="319.50"></text></g><g><title>dyld`dyld4::APIs::dyld_program_sdk_at_least (1 samples, 0.01%)</title><rect x="97.1503%" y="293" width="0.0136%" height="15" fill="rgb(241,18,35)" fg:x="7125" fg:w="1"/><text x="97.4003%" y="303.50"></text></g><g><title>Security`SecCertificateParse (25 samples, 0.34%)</title><rect x="96.8367%" y="341" width="0.3409%" height="15" fill="rgb(227,214,53)" fg:x="7102" fg:w="25"/><text x="97.0867%" y="351.50"></text></g><g><title>libobjc.A.dylib`0x000000018af13ebc (1 samples, 0.01%)</title><rect x="97.1639%" y="325" width="0.0136%" height="15" fill="rgb(224,107,51)" fg:x="7126" fg:w="1"/><text x="97.4139%" y="335.50"></text></g><g><title>Security`SecCertificateCreateWithBytes (28 samples, 0.38%)</title><rect x="96.8094%" y="357" width="0.3818%" height="15" fill="rgb(248,60,28)" fg:x="7100" fg:w="28"/><text x="97.0594%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="97.1775%" y="341" width="0.0136%" height="15" fill="rgb(249,101,23)" fg:x="7127" fg:w="1"/><text x="97.4275%" y="351.50"></text></g><g><title>Security`SecCertificateCreateWithXPCArrayAtIndex (29 samples, 0.40%)</title><rect x="96.8094%" y="373" width="0.3954%" height="15" fill="rgb(228,51,19)" fg:x="7100" fg:w="29"/><text x="97.0594%" y="383.50"></text></g><g><title>libxpc.dylib`xpc_array_get_data (1 samples, 0.01%)</title><rect x="97.1912%" y="357" width="0.0136%" height="15" fill="rgb(213,20,6)" fg:x="7128" fg:w="1"/><text x="97.4412%" y="367.50"></text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 0.01%)</title><rect x="97.1912%" y="341" width="0.0136%" height="15" fill="rgb(212,124,10)" fg:x="7128" fg:w="1"/><text x="97.4412%" y="351.50"></text></g><g><title>Security`SecXPCDictionaryCopyChainOptional (30 samples, 0.41%)</title><rect x="96.8094%" y="389" width="0.4091%" height="15" fill="rgb(248,3,40)" fg:x="7100" fg:w="30"/><text x="97.0594%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.01%)</title><rect x="97.2048%" y="373" width="0.0136%" height="15" fill="rgb(223,178,23)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value_and_vend (1 samples, 0.01%)</title><rect x="97.2048%" y="357" width="0.0136%" height="15" fill="rgb(240,132,45)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value (1 samples, 0.01%)</title><rect x="97.2048%" y="341" width="0.0136%" height="15" fill="rgb(245,164,36)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_array_deserialize (1 samples, 0.01%)</title><rect x="97.2048%" y="325" width="0.0136%" height="15" fill="rgb(231,188,53)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_data_deserialize (1 samples, 0.01%)</title><rect x="97.2048%" y="309" width="0.0136%" height="15" fill="rgb(237,198,39)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="319.50"></text></g><g><title>libxpc.dylib`xpc_data_create (1 samples, 0.01%)</title><rect x="97.2048%" y="293" width="0.0136%" height="15" fill="rgb(223,120,35)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="303.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.01%)</title><rect x="97.2048%" y="277" width="0.0136%" height="15" fill="rgb(253,107,49)" fg:x="7129" fg:w="1"/><text x="97.4548%" y="287.50"></text></g><g><title>CoreFoundation`CFDictionaryAddValue (1 samples, 0.01%)</title><rect x="97.2184%" y="309" width="0.0136%" height="15" fill="rgb(216,44,31)" fg:x="7130" fg:w="1"/><text x="97.4684%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.01%)</title><rect x="97.2184%" y="293" width="0.0136%" height="15" fill="rgb(253,87,21)" fg:x="7130" fg:w="1"/><text x="97.4684%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringEqual (1 samples, 0.01%)</title><rect x="97.2184%" y="277" width="0.0136%" height="15" fill="rgb(226,18,2)" fg:x="7130" fg:w="1"/><text x="97.4684%" y="287.50"></text></g><g><title>CoreFoundation`__calcNextDaylightSavingTimeTransition (1 samples, 0.01%)</title><rect x="97.2457%" y="149" width="0.0136%" height="15" fill="rgb(216,8,46)" fg:x="7132" fg:w="1"/><text x="97.4957%" y="159.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZoneTransition::~TimeZoneTransition (1 samples, 0.01%)</title><rect x="97.2457%" y="133" width="0.0136%" height="15" fill="rgb(226,140,39)" fg:x="7132" fg:w="1"/><text x="97.4957%" y="143.50"></text></g><g><title>CoreFoundation`__CFCalendarGetTimeRangeOfTimeZoneTransition (2 samples, 0.03%)</title><rect x="97.2457%" y="165" width="0.0273%" height="15" fill="rgb(221,194,54)" fg:x="7132" fg:w="2"/><text x="97.4957%" y="175.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::getTimeInMillis (1 samples, 0.01%)</title><rect x="97.2593%" y="149" width="0.0136%" height="15" fill="rgb(213,92,11)" fg:x="7133" fg:w="1"/><text x="97.5093%" y="159.50"></text></g><g><title>CoreFoundation`__cficu_ucal_clear (1 samples, 0.01%)</title><rect x="97.2730%" y="165" width="0.0136%" height="15" fill="rgb(229,162,46)" fg:x="7134" fg:w="1"/><text x="97.5230%" y="175.50"></text></g><g><title>libsystem_trace.dylib`os_log_type_enabled (1 samples, 0.01%)</title><rect x="97.2730%" y="149" width="0.0136%" height="15" fill="rgb(214,111,36)" fg:x="7134" fg:w="1"/><text x="97.5230%" y="159.50"></text></g><g><title>CoreFoundation`__cficu_ucal_getMillis (1 samples, 0.01%)</title><rect x="97.2866%" y="165" width="0.0136%" height="15" fill="rgb(207,6,21)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="175.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::getTimeInMillis (1 samples, 0.01%)</title><rect x="97.2866%" y="149" width="0.0136%" height="15" fill="rgb(213,127,38)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="159.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::updateTime (1 samples, 0.01%)</title><rect x="97.2866%" y="133" width="0.0136%" height="15" fill="rgb(238,118,32)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="143.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::computeTime (1 samples, 0.01%)</title><rect x="97.2866%" y="117" width="0.0136%" height="15" fill="rgb(240,139,39)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="127.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::computeZoneOffset (1 samples, 0.01%)</title><rect x="97.2866%" y="101" width="0.0136%" height="15" fill="rgb(235,10,37)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="111.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::getBasicTimeZone (1 samples, 0.01%)</title><rect x="97.2866%" y="85" width="0.0136%" height="15" fill="rgb(249,171,38)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="95.50"></text></g><g><title>libc+ (1 samples, 0.01%)</title><rect x="97.2866%" y="69" width="0.0136%" height="15" fill="rgb(242,144,32)" fg:x="7135" fg:w="1"/><text x="97.5366%" y="79.50"></text></g><g><title>Security`der_decode_commontime_body (5 samples, 0.07%)</title><rect x="97.2457%" y="277" width="0.0682%" height="15" fill="rgb(217,117,21)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="287.50"></text></g><g><title>Security`SecCFCalendarDoWithZuluCalendar (5 samples, 0.07%)</title><rect x="97.2457%" y="261" width="0.0682%" height="15" fill="rgb(249,87,1)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.07%)</title><rect x="97.2457%" y="245" width="0.0682%" height="15" fill="rgb(248,196,48)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.07%)</title><rect x="97.2457%" y="229" width="0.0682%" height="15" fill="rgb(251,206,33)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="239.50"></text></g><g><title>Security`__SecGregorianDateGetAbsoluteTime_block_invoke (5 samples, 0.07%)</title><rect x="97.2457%" y="213" width="0.0682%" height="15" fill="rgb(232,141,28)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="223.50"></text></g><g><title>CoreFoundation`CFCalendarComposeAbsoluteTime (5 samples, 0.07%)</title><rect x="97.2457%" y="197" width="0.0682%" height="15" fill="rgb(209,167,14)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="207.50"></text></g><g><title>CoreFoundation`_CFCalendarComposeAbsoluteTimeV (5 samples, 0.07%)</title><rect x="97.2457%" y="181" width="0.0682%" height="15" fill="rgb(225,11,50)" fg:x="7132" fg:w="5"/><text x="97.4957%" y="191.50"></text></g><g><title>CoreFoundation`__cficu_ucal_set (1 samples, 0.01%)</title><rect x="97.3002%" y="165" width="0.0136%" height="15" fill="rgb(209,50,20)" fg:x="7136" fg:w="1"/><text x="97.5502%" y="175.50"></text></g><g><title>Security`validateDateComponents (1 samples, 0.01%)</title><rect x="97.3139%" y="277" width="0.0136%" height="15" fill="rgb(212,17,46)" fg:x="7137" fg:w="1"/><text x="97.5639%" y="287.50"></text></g><g><title>Security`der_decode_date (8 samples, 0.11%)</title><rect x="97.2321%" y="293" width="0.1091%" height="15" fill="rgb(216,101,39)" fg:x="7131" fg:w="8"/><text x="97.4821%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.01%)</title><rect x="97.3275%" y="277" width="0.0136%" height="15" fill="rgb(212,228,48)" fg:x="7138" fg:w="1"/><text x="97.5775%" y="287.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.01%)</title><rect x="97.3412%" y="277" width="0.0136%" height="15" fill="rgb(250,6,50)" fg:x="7139" fg:w="1"/><text x="97.5912%" y="287.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.01%)</title><rect x="97.3412%" y="261" width="0.0136%" height="15" fill="rgb(250,160,48)" fg:x="7139" fg:w="1"/><text x="97.5912%" y="271.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (1 samples, 0.01%)</title><rect x="97.3412%" y="245" width="0.0136%" height="15" fill="rgb(244,216,33)" fg:x="7139" fg:w="1"/><text x="97.5912%" y="255.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (42 samples, 0.57%)</title><rect x="96.7957%" y="405" width="0.5727%" height="15" fill="rgb(207,157,5)" fg:x="7099" fg:w="42"/><text x="97.0457%" y="415.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (11 samples, 0.15%)</title><rect x="97.2184%" y="389" width="0.1500%" height="15" fill="rgb(228,199,8)" fg:x="7130" fg:w="11"/><text x="97.4684%" y="399.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryAndPossiblyMutateMessage (11 samples, 0.15%)</title><rect x="97.2184%" y="373" width="0.1500%" height="15" fill="rgb(227,80,20)" fg:x="7130" fg:w="11"/><text x="97.4684%" y="383.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (11 samples, 0.15%)</title><rect x="97.2184%" y="357" width="0.1500%" height="15" fill="rgb(222,9,33)" fg:x="7130" fg:w="11"/><text x="97.4684%" y="367.50"></text></g><g><title>Security`der_decode_plist (11 samples, 0.15%)</title><rect x="97.2184%" y="341" width="0.1500%" height="15" fill="rgb(239,44,28)" fg:x="7130" fg:w="11"/><text x="97.4684%" y="351.50"></text></g><g><title>Security`der_decode_dictionary (11 samples, 0.15%)</title><rect x="97.2184%" y="325" width="0.1500%" height="15" fill="rgb(249,187,43)" fg:x="7130" fg:w="11"/><text x="97.4684%" y="335.50"></text></g><g><title>Security`der_decode_plist (10 samples, 0.14%)</title><rect x="97.2321%" y="309" width="0.1364%" height="15" fill="rgb(216,141,28)" fg:x="7131" fg:w="10"/><text x="97.4821%" y="319.50"></text></g><g><title>Security`der_decode_string (2 samples, 0.03%)</title><rect x="97.3412%" y="293" width="0.0273%" height="15" fill="rgb(230,154,53)" fg:x="7139" fg:w="2"/><text x="97.5912%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.01%)</title><rect x="97.3548%" y="277" width="0.0136%" height="15" fill="rgb(227,82,4)" fg:x="7140" fg:w="1"/><text x="97.6048%" y="287.50"></text></g><g><title>Security`securityd_create_message (1 samples, 0.01%)</title><rect x="97.3684%" y="405" width="0.0136%" height="15" fill="rgb(220,107,16)" fg:x="7141" fg:w="1"/><text x="97.6184%" y="415.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_set_uint64 (1 samples, 0.01%)</title><rect x="97.3684%" y="389" width="0.0136%" height="15" fill="rgb(207,187,2)" fg:x="7141" fg:w="1"/><text x="97.6184%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_insert (1 samples, 0.01%)</title><rect x="97.3684%" y="373" width="0.0136%" height="15" fill="rgb(210,162,52)" fg:x="7141" fg:w="1"/><text x="97.6184%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="97.3684%" y="357" width="0.0136%" height="15" fill="rgb(217,216,49)" fg:x="7141" fg:w="1"/><text x="97.6184%" y="367.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.01%)</title><rect x="97.3821%" y="389" width="0.0136%" height="15" fill="rgb(218,146,49)" fg:x="7142" fg:w="1"/><text x="97.6321%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 0.01%)</title><rect x="97.3957%" y="373" width="0.0136%" height="15" fill="rgb(216,55,40)" fg:x="7143" fg:w="1"/><text x="97.6457%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (5 samples, 0.07%)</title><rect x="97.4093%" y="309" width="0.0682%" height="15" fill="rgb(208,196,21)" fg:x="7144" fg:w="5"/><text x="97.6593%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.07%)</title><rect x="97.4093%" y="293" width="0.0682%" height="15" fill="rgb(242,117,42)" fg:x="7144" fg:w="5"/><text x="97.6593%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (6 samples, 0.08%)</title><rect x="97.4093%" y="341" width="0.0818%" height="15" fill="rgb(210,11,23)" fg:x="7144" fg:w="6"/><text x="97.6593%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (6 samples, 0.08%)</title><rect x="97.4093%" y="325" width="0.0818%" height="15" fill="rgb(217,110,2)" fg:x="7144" fg:w="6"/><text x="97.6593%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_reply_waiter_register (1 samples, 0.01%)</title><rect x="97.4775%" y="309" width="0.0136%" height="15" fill="rgb(229,77,54)" fg:x="7149" fg:w="1"/><text x="97.7275%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (10 samples, 0.14%)</title><rect x="97.4093%" y="357" width="0.1364%" height="15" fill="rgb(218,53,16)" fg:x="7144" fg:w="10"/><text x="97.6593%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.05%)</title><rect x="97.4911%" y="341" width="0.0545%" height="15" fill="rgb(215,38,13)" fg:x="7150" fg:w="4"/><text x="97.7411%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.05%)</title><rect x="97.4911%" y="325" width="0.0545%" height="15" fill="rgb(235,42,18)" fg:x="7150" fg:w="4"/><text x="97.7411%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.05%)</title><rect x="97.4911%" y="309" width="0.0545%" height="15" fill="rgb(219,66,54)" fg:x="7150" fg:w="4"/><text x="97.7411%" y="319.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (12 samples, 0.16%)</title><rect x="97.4093%" y="373" width="0.1636%" height="15" fill="rgb(222,205,4)" fg:x="7144" fg:w="12"/><text x="97.6593%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`thread_get_special_reply_port (2 samples, 0.03%)</title><rect x="97.5457%" y="357" width="0.0273%" height="15" fill="rgb(227,213,46)" fg:x="7154" fg:w="2"/><text x="97.7957%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.01%)</title><rect x="97.5729%" y="341" width="0.0136%" height="15" fill="rgb(250,145,42)" fg:x="7156" fg:w="1"/><text x="97.8229%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="97.5729%" y="325" width="0.0136%" height="15" fill="rgb(219,15,2)" fg:x="7156" fg:w="1"/><text x="97.8229%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="97.5729%" y="309" width="0.0136%" height="15" fill="rgb(231,181,52)" fg:x="7156" fg:w="1"/><text x="97.8229%" y="319.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (2 samples, 0.03%)</title><rect x="97.5729%" y="373" width="0.0273%" height="15" fill="rgb(235,1,42)" fg:x="7156" fg:w="2"/><text x="97.8229%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_dispose (2 samples, 0.03%)</title><rect x="97.5729%" y="357" width="0.0273%" height="15" fill="rgb(249,88,27)" fg:x="7156" fg:w="2"/><text x="97.8229%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_xref_dispose (1 samples, 0.01%)</title><rect x="97.5866%" y="341" width="0.0136%" height="15" fill="rgb(235,145,16)" fg:x="7157" fg:w="1"/><text x="97.8366%" y="351.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="97.6002%" y="325" width="0.0136%" height="15" fill="rgb(237,114,19)" fg:x="7158" fg:w="1"/><text x="97.8502%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (3 samples, 0.04%)</title><rect x="97.6002%" y="341" width="0.0409%" height="15" fill="rgb(238,51,50)" fg:x="7158" fg:w="3"/><text x="97.8502%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (2 samples, 0.03%)</title><rect x="97.6139%" y="325" width="0.0273%" height="15" fill="rgb(205,194,25)" fg:x="7159" fg:w="2"/><text x="97.8639%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize_apply (2 samples, 0.03%)</title><rect x="97.6139%" y="309" width="0.0273%" height="15" fill="rgb(215,203,17)" fg:x="7159" fg:w="2"/><text x="97.8639%" y="319.50"></text></g><g><title>libxpc.dylib`_xpc_array_serialize (2 samples, 0.03%)</title><rect x="97.6139%" y="293" width="0.0273%" height="15" fill="rgb(233,112,49)" fg:x="7159" fg:w="2"/><text x="97.8639%" y="303.50"></text></g><g><title>libxpc.dylib`_xpc_array_serialize (2 samples, 0.03%)</title><rect x="97.6139%" y="277" width="0.0273%" height="15" fill="rgb(241,130,26)" fg:x="7159" fg:w="2"/><text x="97.8639%" y="287.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_serialize (1 samples, 0.01%)</title><rect x="97.6275%" y="261" width="0.0136%" height="15" fill="rgb(252,223,19)" fg:x="7160" fg:w="1"/><text x="97.8775%" y="271.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="97.6275%" y="245" width="0.0136%" height="15" fill="rgb(211,95,25)" fg:x="7160" fg:w="1"/><text x="97.8775%" y="255.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_append (1 samples, 0.01%)</title><rect x="97.6275%" y="229" width="0.0136%" height="15" fill="rgb(251,182,27)" fg:x="7160" fg:w="1"/><text x="97.8775%" y="239.50"></text></g><g><title>libxpc.dylib`DYLD-STUB$$object_getClass (1 samples, 0.01%)</title><rect x="97.6411%" y="325" width="0.0136%" height="15" fill="rgb(238,24,4)" fg:x="7161" fg:w="1"/><text x="97.8911%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_connection_pack_message (5 samples, 0.07%)</title><rect x="97.6002%" y="373" width="0.0682%" height="15" fill="rgb(224,220,25)" fg:x="7158" fg:w="5"/><text x="97.8502%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_pack (5 samples, 0.07%)</title><rect x="97.6002%" y="357" width="0.0682%" height="15" fill="rgb(239,133,26)" fg:x="7158" fg:w="5"/><text x="97.8502%" y="367.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply_f (2 samples, 0.03%)</title><rect x="97.6411%" y="341" width="0.0273%" height="15" fill="rgb(211,94,48)" fg:x="7161" fg:w="2"/><text x="97.8911%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="97.6548%" y="325" width="0.0136%" height="15" fill="rgb(239,87,6)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_f_apply (1 samples, 0.01%)</title><rect x="97.6548%" y="309" width="0.0136%" height="15" fill="rgb(227,62,0)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="319.50"></text></g><g><title>libxpc.dylib`xpc_array_apply_f (1 samples, 0.01%)</title><rect x="97.6548%" y="293" width="0.0136%" height="15" fill="rgb(211,226,4)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="303.50"></text></g><g><title>libxpc.dylib`xpc_array_apply_f (1 samples, 0.01%)</title><rect x="97.6548%" y="277" width="0.0136%" height="15" fill="rgb(253,38,52)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="287.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_apply_f (1 samples, 0.01%)</title><rect x="97.6548%" y="261" width="0.0136%" height="15" fill="rgb(229,126,40)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="271.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_node_f (1 samples, 0.01%)</title><rect x="97.6548%" y="245" width="0.0136%" height="15" fill="rgb(229,165,44)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="255.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_apply_f_apply (1 samples, 0.01%)</title><rect x="97.6548%" y="229" width="0.0136%" height="15" fill="rgb(247,95,47)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="239.50"></text></g><g><title>libxpc.dylib`xpc_array_apply_f (1 samples, 0.01%)</title><rect x="97.6548%" y="213" width="0.0136%" height="15" fill="rgb(216,140,30)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="223.50"></text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 0.01%)</title><rect x="97.6548%" y="197" width="0.0136%" height="15" fill="rgb(246,214,8)" fg:x="7162" fg:w="1"/><text x="97.9048%" y="207.50"></text></g><g><title>libxpc.dylib`_xpc_connection_unpack_message (1 samples, 0.01%)</title><rect x="97.6684%" y="373" width="0.0136%" height="15" fill="rgb(227,224,15)" fg:x="7163" fg:w="1"/><text x="97.9184%" y="383.50"></text></g><g><title>libxpc.dylib`xpc_receive_mach_msg (1 samples, 0.01%)</title><rect x="97.6684%" y="357" width="0.0136%" height="15" fill="rgb(233,175,4)" fg:x="7163" fg:w="1"/><text x="97.9184%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_payload_create_from_mach_msg (1 samples, 0.01%)</title><rect x="97.6684%" y="341" width="0.0136%" height="15" fill="rgb(221,66,45)" fg:x="7163" fg:w="1"/><text x="97.9184%" y="351.50"></text></g><g><title>Security`securityd_message_with_reply_sync (23 samples, 0.31%)</title><rect x="97.3821%" y="405" width="0.3136%" height="15" fill="rgb(221,178,18)" fg:x="7142" fg:w="23"/><text x="97.6321%" y="415.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (22 samples, 0.30%)</title><rect x="97.3957%" y="389" width="0.3000%" height="15" fill="rgb(213,81,29)" fg:x="7143" fg:w="22"/><text x="97.6457%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_serializer_dispose (1 samples, 0.01%)</title><rect x="97.6820%" y="373" width="0.0136%" height="15" fill="rgb(220,89,49)" fg:x="7164" fg:w="1"/><text x="97.9320%" y="383.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.01%)</title><rect x="97.6957%" y="373" width="0.0136%" height="15" fill="rgb(227,60,33)" fg:x="7165" fg:w="1"/><text x="97.9457%" y="383.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data dealloc] (1 samples, 0.01%)</title><rect x="97.6957%" y="357" width="0.0136%" height="15" fill="rgb(205,113,12)" fg:x="7165" fg:w="1"/><text x="97.9457%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="97.6957%" y="341" width="0.0136%" height="15" fill="rgb(211,32,1)" fg:x="7165" fg:w="1"/><text x="97.9457%" y="351.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_payload dealloc] (1 samples, 0.01%)</title><rect x="97.7093%" y="373" width="0.0136%" height="15" fill="rgb(246,2,12)" fg:x="7166" fg:w="1"/><text x="97.9593%" y="383.50"></text></g><g><title>libxpc.dylib`_xpc_payload_dispose (1 samples, 0.01%)</title><rect x="97.7093%" y="357" width="0.0136%" height="15" fill="rgb(243,37,27)" fg:x="7166" fg:w="1"/><text x="97.9593%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_destroy (1 samples, 0.01%)</title><rect x="97.7093%" y="341" width="0.0136%" height="15" fill="rgb(248,211,31)" fg:x="7166" fg:w="1"/><text x="97.9593%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="97.7229%" y="309" width="0.0273%" height="15" fill="rgb(242,146,47)" fg:x="7167" fg:w="2"/><text x="97.9729%" y="319.50"></text></g><g><title>libdispatch.dylib`-[OS_dispatch_data dealloc] (3 samples, 0.04%)</title><rect x="97.7502%" y="197" width="0.0409%" height="15" fill="rgb(206,70,20)" fg:x="7169" fg:w="3"/><text x="98.0002%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_poke_slow (3 samples, 0.04%)</title><rect x="97.7502%" y="181" width="0.0409%" height="15" fill="rgb(215,10,51)" fg:x="7169" fg:w="3"/><text x="98.0002%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (3 samples, 0.04%)</title><rect x="97.7502%" y="165" width="0.0409%" height="15" fill="rgb(243,178,53)" fg:x="7169" fg:w="3"/><text x="98.0002%" y="175.50"></text></g><g><title>libdispatch.dylib`dispatch_async_f (1 samples, 0.01%)</title><rect x="97.7911%" y="197" width="0.0136%" height="15" fill="rgb(233,221,20)" fg:x="7172" fg:w="1"/><text x="98.0411%" y="207.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (1 samples, 0.01%)</title><rect x="97.8047%" y="197" width="0.0136%" height="15" fill="rgb(218,95,35)" fg:x="7173" fg:w="1"/><text x="98.0547%" y="207.50"></text></g><g><title>libxpc.dylib`_xpc_date_dispose (1 samples, 0.01%)</title><rect x="97.8047%" y="181" width="0.0136%" height="15" fill="rgb(229,13,5)" fg:x="7173" fg:w="1"/><text x="98.0547%" y="191.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (8 samples, 0.11%)</title><rect x="97.7229%" y="325" width="0.1091%" height="15" fill="rgb(252,164,30)" fg:x="7167" fg:w="8"/><text x="97.9729%" y="335.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (6 samples, 0.08%)</title><rect x="97.7502%" y="309" width="0.0818%" height="15" fill="rgb(232,68,36)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="319.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (6 samples, 0.08%)</title><rect x="97.7502%" y="293" width="0.0818%" height="15" fill="rgb(219,59,54)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="303.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (6 samples, 0.08%)</title><rect x="97.7502%" y="277" width="0.0818%" height="15" fill="rgb(250,92,33)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="287.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (6 samples, 0.08%)</title><rect x="97.7502%" y="261" width="0.0818%" height="15" fill="rgb(229,162,54)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="271.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (6 samples, 0.08%)</title><rect x="97.7502%" y="245" width="0.0818%" height="15" fill="rgb(244,114,52)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="255.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (6 samples, 0.08%)</title><rect x="97.7502%" y="229" width="0.0818%" height="15" fill="rgb(212,211,43)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="239.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (6 samples, 0.08%)</title><rect x="97.7502%" y="213" width="0.0818%" height="15" fill="rgb(226,147,8)" fg:x="7169" fg:w="6"/><text x="98.0002%" y="223.50"></text></g><g><title>libxpc.dylib`_xpc_dispose (1 samples, 0.01%)</title><rect x="97.8184%" y="197" width="0.0136%" height="15" fill="rgb(226,23,13)" fg:x="7174" fg:w="1"/><text x="98.0684%" y="207.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (97 samples, 1.32%)</title><rect x="96.5230%" y="469" width="1.3226%" height="15" fill="rgb(240,63,4)" fg:x="7079" fg:w="97"/><text x="96.7730%" y="479.50"></text></g><g><title>Security`SecOSStatusWith (97 samples, 1.32%)</title><rect x="96.5230%" y="453" width="1.3226%" height="15" fill="rgb(221,1,32)" fg:x="7079" fg:w="97"/><text x="96.7730%" y="463.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (96 samples, 1.31%)</title><rect x="96.5367%" y="437" width="1.3090%" height="15" fill="rgb(242,117,10)" fg:x="7080" fg:w="96"/><text x="96.7867%" y="447.50"></text></g><g><title>Security`securityd_send_sync_and_do (96 samples, 1.31%)</title><rect x="96.5367%" y="421" width="1.3090%" height="15" fill="rgb(249,172,44)" fg:x="7080" fg:w="96"/><text x="96.7867%" y="431.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (11 samples, 0.15%)</title><rect x="97.6957%" y="405" width="0.1500%" height="15" fill="rgb(244,46,45)" fg:x="7165" fg:w="11"/><text x="97.9457%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (11 samples, 0.15%)</title><rect x="97.6957%" y="389" width="0.1500%" height="15" fill="rgb(206,43,17)" fg:x="7165" fg:w="11"/><text x="97.9457%" y="399.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (9 samples, 0.12%)</title><rect x="97.7229%" y="373" width="0.1227%" height="15" fill="rgb(239,218,39)" fg:x="7167" fg:w="9"/><text x="97.9729%" y="383.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (9 samples, 0.12%)</title><rect x="97.7229%" y="357" width="0.1227%" height="15" fill="rgb(208,169,54)" fg:x="7167" fg:w="9"/><text x="97.9729%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (9 samples, 0.12%)</title><rect x="97.7229%" y="341" width="0.1227%" height="15" fill="rgb(247,25,42)" fg:x="7167" fg:w="9"/><text x="97.9729%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_array_dispose (1 samples, 0.01%)</title><rect x="97.8320%" y="325" width="0.0136%" height="15" fill="rgb(226,23,31)" fg:x="7175" fg:w="1"/><text x="98.0820%" y="335.50"></text></g><g><title>graphgen`security_framework::trust::SecTrust::evaluate_with_error (100 samples, 1.36%)</title><rect x="96.4958%" y="581" width="1.3635%" height="15" fill="rgb(247,16,28)" fg:x="7077" fg:w="100"/><text x="96.7458%" y="591.50"></text></g><g><title>Security`SecTrustEvaluateInternal (100 samples, 1.36%)</title><rect x="96.4958%" y="565" width="1.3635%" height="15" fill="rgb(231,147,38)" fg:x="7077" fg:w="100"/><text x="96.7458%" y="575.50"></text></g><g><title>Security`SecTrustEvaluateIfNecessary (99 samples, 1.35%)</title><rect x="96.5094%" y="549" width="1.3499%" height="15" fill="rgb(253,81,48)" fg:x="7078" fg:w="99"/><text x="96.7594%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (99 samples, 1.35%)</title><rect x="96.5094%" y="533" width="1.3499%" height="15" fill="rgb(249,222,43)" fg:x="7078" fg:w="99"/><text x="96.7594%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (99 samples, 1.35%)</title><rect x="96.5094%" y="517" width="1.3499%" height="15" fill="rgb(221,3,27)" fg:x="7078" fg:w="99"/><text x="96.7594%" y="527.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke.521 (99 samples, 1.35%)</title><rect x="96.5094%" y="501" width="1.3499%" height="15" fill="rgb(228,180,5)" fg:x="7078" fg:w="99"/><text x="96.7594%" y="511.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (98 samples, 1.34%)</title><rect x="96.5230%" y="485" width="1.3362%" height="15" fill="rgb(227,131,42)" fg:x="7079" fg:w="98"/><text x="96.7730%" y="495.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_create_addr (1 samples, 0.01%)</title><rect x="97.8457%" y="469" width="0.0136%" height="15" fill="rgb(212,3,39)" fg:x="7176" fg:w="1"/><text x="98.0957%" y="479.50"></text></g><g><title>libdispatch.dylib`voucher_activity_create_with_data (1 samples, 0.01%)</title><rect x="97.8457%" y="453" width="0.0136%" height="15" fill="rgb(226,45,5)" fg:x="7176" fg:w="1"/><text x="98.0957%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_generate_activity_id (1 samples, 0.01%)</title><rect x="97.8457%" y="437" width="0.0136%" height="15" fill="rgb(215,167,45)" fg:x="7176" fg:w="1"/><text x="98.0957%" y="447.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1,037 samples, 14.14%)</title><rect x="83.7333%" y="629" width="14.1396%" height="15" fill="rgb(250,218,53)" fg:x="6141" fg:w="1037"/><text x="83.9833%" y="639.50">graphgen`&lt;tokio_nativ..</text></g><g><title>graphgen`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1,037 samples, 14.14%)</title><rect x="83.7333%" y="613" width="14.1396%" height="15" fill="rgb(207,140,0)" fg:x="6141" fg:w="1037"/><text x="83.9833%" y="623.50">graphgen`native_tls::..</text></g><g><title>graphgen`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1,037 samples, 14.14%)</title><rect x="83.7333%" y="597" width="14.1396%" height="15" fill="rgb(238,133,51)" fg:x="6141" fg:w="1037"/><text x="83.9833%" y="607.50">graphgen`security_fra..</text></g><g><title>graphgen`security_framework::trust::SecTrust::set_anchor_certificates (1 samples, 0.01%)</title><rect x="97.8593%" y="581" width="0.0136%" height="15" fill="rgb(218,203,53)" fg:x="7177" fg:w="1"/><text x="98.1093%" y="591.50"></text></g><g><title>Security`SecTrustSetAnchorCertificates (1 samples, 0.01%)</title><rect x="97.8593%" y="565" width="0.0136%" height="15" fill="rgb(226,184,25)" fg:x="7177" fg:w="1"/><text x="98.1093%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.01%)</title><rect x="97.8593%" y="549" width="0.0136%" height="15" fill="rgb(231,121,21)" fg:x="7177" fg:w="1"/><text x="98.1093%" y="559.50"></text></g><g><title>Security`__SecTrustSetAnchorCertificates_block_invoke (1 samples, 0.01%)</title><rect x="97.8593%" y="533" width="0.0136%" height="15" fill="rgb(251,14,34)" fg:x="7177" fg:w="1"/><text x="98.1093%" y="543.50"></text></g><g><title>graphgen`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="97.8729%" y="597" width="0.0136%" height="15" fill="rgb(249,193,11)" fg:x="7178" fg:w="1"/><text x="98.1229%" y="607.50"></text></g><g><title>libcoretls.dylib`InitCipherSpecParams (1 samples, 0.01%)</title><rect x="97.8866%" y="549" width="0.0136%" height="15" fill="rgb(220,172,37)" fg:x="7179" fg:w="1"/><text x="98.1366%" y="559.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetKeyExchangeMethod (2 samples, 0.03%)</title><rect x="97.9002%" y="517" width="0.0273%" height="15" fill="rgb(231,229,43)" fg:x="7180" fg:w="2"/><text x="98.1502%" y="527.50"></text></g><g><title>libcoretls.dylib`tls_handshake_create (3 samples, 0.04%)</title><rect x="97.9002%" y="549" width="0.0409%" height="15" fill="rgb(250,161,5)" fg:x="7180" fg:w="3"/><text x="98.1502%" y="559.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_ciphersuites_internal (3 samples, 0.04%)</title><rect x="97.9002%" y="533" width="0.0409%" height="15" fill="rgb(218,225,18)" fg:x="7180" fg:w="3"/><text x="98.1502%" y="543.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_allowed (1 samples, 0.01%)</title><rect x="97.9275%" y="517" width="0.0136%" height="15" fill="rgb(245,45,42)" fg:x="7182" fg:w="1"/><text x="98.1775%" y="527.50"></text></g><g><title>CoreFoundation`_CFPrefsGetCacheStringForBundleID (1 samples, 0.01%)</title><rect x="97.9411%" y="453" width="0.0136%" height="15" fill="rgb(211,115,1)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="463.50"></text></g><g><title>CoreFoundation`CFBundleGetMainBundle (1 samples, 0.01%)</title><rect x="97.9411%" y="437" width="0.0136%" height="15" fill="rgb(248,133,52)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="447.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.01%)</title><rect x="97.9411%" y="421" width="0.0136%" height="15" fill="rgb(238,100,21)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="431.50"></text></g><g><title>CoreFoundation`_CFBundleGetBundleVersionForURL (1 samples, 0.01%)</title><rect x="97.9411%" y="405" width="0.0136%" height="15" fill="rgb(247,144,11)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="415.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.01%)</title><rect x="97.9411%" y="389" width="0.0136%" height="15" fill="rgb(206,164,16)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="399.50"></text></g><g><title>libsystem_c.dylib`readdir (1 samples, 0.01%)</title><rect x="97.9411%" y="373" width="0.0136%" height="15" fill="rgb(222,34,3)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 0.01%)</title><rect x="97.9411%" y="357" width="0.0136%" height="15" fill="rgb(248,82,4)" fg:x="7183" fg:w="1"/><text x="98.1911%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.03%)</title><rect x="97.9411%" y="549" width="0.0273%" height="15" fill="rgb(228,81,46)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.03%)</title><rect x="97.9411%" y="533" width="0.0273%" height="15" fill="rgb(227,67,47)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="543.50"></text></g><g><title>Security`__SSLCreateContextWithRecordFuncs_block_invoke (2 samples, 0.03%)</title><rect x="97.9411%" y="517" width="0.0273%" height="15" fill="rgb(215,93,53)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="527.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (2 samples, 0.03%)</title><rect x="97.9411%" y="501" width="0.0273%" height="15" fill="rgb(248,194,39)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="511.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (2 samples, 0.03%)</title><rect x="97.9411%" y="485" width="0.0273%" height="15" fill="rgb(215,5,19)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="495.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (2 samples, 0.03%)</title><rect x="97.9411%" y="469" width="0.0273%" height="15" fill="rgb(226,215,51)" fg:x="7183" fg:w="2"/><text x="98.1911%" y="479.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.01%)</title><rect x="97.9547%" y="453" width="0.0136%" height="15" fill="rgb(225,56,26)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="463.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (1 samples, 0.01%)</title><rect x="97.9547%" y="437" width="0.0136%" height="15" fill="rgb(222,75,29)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="447.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (1 samples, 0.01%)</title><rect x="97.9547%" y="421" width="0.0136%" height="15" fill="rgb(236,139,6)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="431.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (1 samples, 0.01%)</title><rect x="97.9547%" y="405" width="0.0136%" height="15" fill="rgb(223,137,36)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="415.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (1 samples, 0.01%)</title><rect x="97.9547%" y="389" width="0.0136%" height="15" fill="rgb(226,99,2)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="399.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:] (1 samples, 0.01%)</title><rect x="97.9547%" y="373" width="0.0136%" height="15" fill="rgb(206,133,23)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="383.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:] (1 samples, 0.01%)</title><rect x="97.9547%" y="357" width="0.0136%" height="15" fill="rgb(243,173,15)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="367.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 0.01%)</title><rect x="97.9547%" y="341" width="0.0136%" height="15" fill="rgb(228,69,28)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="351.50"></text></g><g><title>CoreFoundation`__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke (1 samples, 0.01%)</title><rect x="97.9547%" y="325" width="0.0136%" height="15" fill="rgb(212,51,22)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="335.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:] (1 samples, 0.01%)</title><rect x="97.9547%" y="309" width="0.0136%" height="15" fill="rgb(227,113,0)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="319.50"></text></g><g><title>CoreFoundation`__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke_2 (1 samples, 0.01%)</title><rect x="97.9547%" y="293" width="0.0136%" height="15" fill="rgb(252,84,27)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="303.50"></text></g><g><title>CoreFoundation`__80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke (1 samples, 0.01%)</title><rect x="97.9547%" y="277" width="0.0136%" height="15" fill="rgb(223,145,39)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="287.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.01%)</title><rect x="97.9547%" y="261" width="0.0136%" height="15" fill="rgb(239,219,30)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="271.50"></text></g><g><title>libxpc.dylib`xpc_array_apply (1 samples, 0.01%)</title><rect x="97.9547%" y="245" width="0.0136%" height="15" fill="rgb(224,196,39)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="255.50"></text></g><g><title>CoreFoundation`__93-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:]_block_invoke (1 samples, 0.01%)</title><rect x="97.9547%" y="229" width="0.0136%" height="15" fill="rgb(205,35,43)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="239.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.01%)</title><rect x="97.9547%" y="213" width="0.0136%" height="15" fill="rgb(228,201,21)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="223.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences shmemForRole:name:] (1 samples, 0.01%)</title><rect x="97.9547%" y="197" width="0.0136%" height="15" fill="rgb(237,118,16)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.01%)</title><rect x="97.9547%" y="181" width="0.0136%" height="15" fill="rgb(241,17,19)" fg:x="7184" fg:w="1"/><text x="98.2047%" y="191.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (7 samples, 0.10%)</title><rect x="97.8866%" y="565" width="0.0954%" height="15" fill="rgb(214,10,25)" fg:x="7179" fg:w="7"/><text x="98.1366%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="97.9684%" y="549" width="0.0136%" height="15" fill="rgb(238,37,29)" fg:x="7185" fg:w="1"/><text x="98.2184%" y="559.50"></text></g><g><title>Security`SSLCreateContext (8 samples, 0.11%)</title><rect x="97.8866%" y="581" width="0.1091%" height="15" fill="rgb(253,83,25)" fg:x="7179" fg:w="8"/><text x="98.1366%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccrng (1 samples, 0.01%)</title><rect x="97.9820%" y="565" width="0.0136%" height="15" fill="rgb(234,192,12)" fg:x="7186" fg:w="1"/><text x="98.2320%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccrng_prng (1 samples, 0.01%)</title><rect x="97.9820%" y="549" width="0.0136%" height="15" fill="rgb(241,216,45)" fg:x="7186" fg:w="1"/><text x="98.2320%" y="559.50"></text></g><g><title>Security`SSLSetSessionOption (1 samples, 0.01%)</title><rect x="97.9956%" y="581" width="0.0136%" height="15" fill="rgb(242,22,33)" fg:x="7187" fg:w="1"/><text x="98.2456%" y="591.50"></text></g><g><title>libcoretls.dylib`sslCipherSuiteGetSymmetricCipherAlgorithm (1 samples, 0.01%)</title><rect x="98.0093%" y="517" width="0.0136%" height="15" fill="rgb(231,105,49)" fg:x="7188" fg:w="1"/><text x="98.2593%" y="527.50"></text></g><g><title>graphgen`security_framework::secure_transport::SslContext::set_enabled_ciphers (2 samples, 0.03%)</title><rect x="98.0093%" y="565" width="0.0273%" height="15" fill="rgb(218,204,15)" fg:x="7188" fg:w="2"/><text x="98.2593%" y="575.50"></text></g><g><title>Security`SSLSetEnabledCiphers (2 samples, 0.03%)</title><rect x="98.0093%" y="549" width="0.0273%" height="15" fill="rgb(235,138,41)" fg:x="7188" fg:w="2"/><text x="98.2593%" y="559.50"></text></g><g><title>libcoretls.dylib`tls_handshake_set_ciphersuites_internal (2 samples, 0.03%)</title><rect x="98.0093%" y="533" width="0.0273%" height="15" fill="rgb(246,0,9)" fg:x="7188" fg:w="2"/><text x="98.2593%" y="543.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_allowed (1 samples, 0.01%)</title><rect x="98.0229%" y="517" width="0.0136%" height="15" fill="rgb(210,74,4)" fg:x="7189" fg:w="1"/><text x="98.2729%" y="527.50"></text></g><g><title>graphgen`security_framework::secure_transport::ClientBuilder::configure_ciphers (3 samples, 0.04%)</title><rect x="98.0093%" y="581" width="0.0409%" height="15" fill="rgb(250,60,41)" fg:x="7188" fg:w="3"/><text x="98.2593%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.01%)</title><rect x="98.0365%" y="565" width="0.0136%" height="15" fill="rgb(220,115,12)" fg:x="7190" fg:w="1"/><text x="98.2865%" y="575.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 0.01%)</title><rect x="98.0502%" y="533" width="0.0136%" height="15" fill="rgb(237,100,13)" fg:x="7191" fg:w="1"/><text x="98.3002%" y="543.50"></text></g><g><title>graphgen`security_framework::secure_transport::read_func (1 samples, 0.01%)</title><rect x="98.0502%" y="517" width="0.0136%" height="15" fill="rgb(213,55,26)" fg:x="7191" fg:w="1"/><text x="98.3002%" y="527.50"></text></g><g><title>graphgen`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="98.0502%" y="501" width="0.0136%" height="15" fill="rgb(216,17,4)" fg:x="7191" fg:w="1"/><text x="98.3002%" y="511.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.01%)</title><rect x="98.0502%" y="485" width="0.0136%" height="15" fill="rgb(220,153,47)" fg:x="7191" fg:w="1"/><text x="98.3002%" y="495.50"></text></g><g><title>graphgen`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="98.0502%" y="469" width="0.0136%" height="15" fill="rgb(215,131,9)" fg:x="7191" fg:w="1"/><text x="98.3002%" y="479.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.01%)</title><rect x="98.0638%" y="469" width="0.0136%" height="15" fill="rgb(233,46,42)" fg:x="7192" fg:w="1"/><text x="98.3138%" y="479.50"></text></g><g><title>Security`SSLHandshakeProceed (19 samples, 0.26%)</title><rect x="98.0502%" y="549" width="0.2591%" height="15" fill="rgb(226,86,7)" fg:x="7191" fg:w="19"/><text x="98.3002%" y="559.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (18 samples, 0.25%)</title><rect x="98.0638%" y="533" width="0.2454%" height="15" fill="rgb(239,226,21)" fg:x="7192" fg:w="18"/><text x="98.3138%" y="543.50"></text></g><g><title>graphgen`security_framework::secure_transport::write_func (18 samples, 0.25%)</title><rect x="98.0638%" y="517" width="0.2454%" height="15" fill="rgb(244,137,22)" fg:x="7192" fg:w="18"/><text x="98.3138%" y="527.50"></text></g><g><title>graphgen`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (18 samples, 0.25%)</title><rect x="98.0638%" y="501" width="0.2454%" height="15" fill="rgb(211,139,35)" fg:x="7192" fg:w="18"/><text x="98.3138%" y="511.50"></text></g><g><title>graphgen`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (18 samples, 0.25%)</title><rect x="98.0638%" y="485" width="0.2454%" height="15" fill="rgb(214,62,50)" fg:x="7192" fg:w="18"/><text x="98.3138%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (17 samples, 0.23%)</title><rect x="98.0774%" y="469" width="0.2318%" height="15" fill="rgb(212,113,44)" fg:x="7193" fg:w="17"/><text x="98.3274%" y="479.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Init (1 samples, 0.01%)</title><rect x="98.3092%" y="533" width="0.0136%" height="15" fill="rgb(226,150,43)" fg:x="7210" fg:w="1"/><text x="98.5592%" y="543.50"></text></g><g><title>libcorecrypto.dylib`cc_clear (1 samples, 0.01%)</title><rect x="98.3092%" y="517" width="0.0136%" height="15" fill="rgb(250,71,37)" fg:x="7210" fg:w="1"/><text x="98.5592%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="98.3092%" y="501" width="0.0136%" height="15" fill="rgb(219,76,19)" fg:x="7210" fg:w="1"/><text x="98.5592%" y="511.50"></text></g><g><title>libcoretls.dylib`SSLEncodeBufferList (1 samples, 0.01%)</title><rect x="98.3229%" y="501" width="0.0136%" height="15" fill="rgb(250,39,11)" fg:x="7211" fg:w="1"/><text x="98.5729%" y="511.50"></text></g><g><title>libcoretls.dylib`tls_handshake_ciphersuite_is_valid (1 samples, 0.01%)</title><rect x="98.3501%" y="485" width="0.0136%" height="15" fill="rgb(230,64,31)" fg:x="7213" fg:w="1"/><text x="98.6001%" y="495.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (4 samples, 0.05%)</title><rect x="98.3229%" y="533" width="0.0545%" height="15" fill="rgb(208,222,23)" fg:x="7211" fg:w="4"/><text x="98.5729%" y="543.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (4 samples, 0.05%)</title><rect x="98.3229%" y="517" width="0.0545%" height="15" fill="rgb(227,125,18)" fg:x="7211" fg:w="4"/><text x="98.5729%" y="527.50"></text></g><g><title>libcoretls.dylib`SSLEncodeClientHello (3 samples, 0.04%)</title><rect x="98.3365%" y="501" width="0.0409%" height="15" fill="rgb(234,210,9)" fg:x="7212" fg:w="3"/><text x="98.5865%" y="511.50"></text></g><g><title>libsystem_c.dylib`time (1 samples, 0.01%)</title><rect x="98.3638%" y="485" width="0.0136%" height="15" fill="rgb(217,127,24)" fg:x="7214" fg:w="1"/><text x="98.6138%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="98.3774%" y="501" width="0.0136%" height="15" fill="rgb(239,141,48)" fg:x="7215" fg:w="1"/><text x="98.6274%" y="511.50"></text></g><g><title>Security`SSLHandshakeStart (7 samples, 0.10%)</title><rect x="98.3092%" y="549" width="0.0954%" height="15" fill="rgb(227,109,8)" fg:x="7210" fg:w="7"/><text x="98.5592%" y="559.50"></text></g><g><title>libcoretls.dylib`tls_handshake_negotiate (2 samples, 0.03%)</title><rect x="98.3774%" y="533" width="0.0273%" height="15" fill="rgb(235,184,23)" fg:x="7215" fg:w="2"/><text x="98.6274%" y="543.50"></text></g><g><title>Security`tls_handshake_load_session_data_callback (2 samples, 0.03%)</title><rect x="98.3774%" y="517" width="0.0273%" height="15" fill="rgb(227,226,48)" fg:x="7215" fg:w="2"/><text x="98.6274%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="98.3911%" y="501" width="0.0136%" height="15" fill="rgb(206,150,11)" fg:x="7216" fg:w="1"/><text x="98.6411%" y="511.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Init (1 samples, 0.01%)</title><rect x="98.4047%" y="549" width="0.0136%" height="15" fill="rgb(254,2,33)" fg:x="7217" fg:w="1"/><text x="98.6547%" y="559.50"></text></g><g><title>graphgen`native_tls::imp::TlsConnector::connect (41 samples, 0.56%)</title><rect x="97.8729%" y="613" width="0.5590%" height="15" fill="rgb(243,160,20)" fg:x="7178" fg:w="41"/><text x="98.1229%" y="623.50"></text></g><g><title>graphgen`security_framework::secure_transport::ClientBuilder::handshake (40 samples, 0.55%)</title><rect x="97.8866%" y="597" width="0.5454%" height="15" fill="rgb(218,208,30)" fg:x="7179" fg:w="40"/><text x="98.1366%" y="607.50"></text></g><g><title>graphgen`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (28 samples, 0.38%)</title><rect x="98.0502%" y="581" width="0.3818%" height="15" fill="rgb(224,120,49)" fg:x="7191" fg:w="28"/><text x="98.3002%" y="591.50"></text></g><g><title>Security`SSLHandshake (28 samples, 0.38%)</title><rect x="98.0502%" y="565" width="0.3818%" height="15" fill="rgb(246,12,2)" fg:x="7191" fg:w="28"/><text x="98.3002%" y="575.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_dispose (1 samples, 0.01%)</title><rect x="98.4183%" y="549" width="0.0136%" height="15" fill="rgb(236,117,3)" fg:x="7218" fg:w="1"/><text x="98.6683%" y="559.50"></text></g><g><title>graphgen`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (1,132 samples, 15.43%)</title><rect x="83.0106%" y="645" width="15.4350%" height="15" fill="rgb(216,128,52)" fg:x="6088" fg:w="1132"/><text x="83.2606%" y="655.50">graphgen`&lt;hyper_tls::cli..</text></g><g><title>graphgen`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (42 samples, 0.57%)</title><rect x="97.8729%" y="629" width="0.5727%" height="15" fill="rgb(246,145,19)" fg:x="7178" fg:w="42"/><text x="98.1229%" y="639.50"></text></g><g><title>graphgen`native_tls::imp::convert_protocol (1 samples, 0.01%)</title><rect x="98.4320%" y="613" width="0.0136%" height="15" fill="rgb(222,11,46)" fg:x="7219" fg:w="1"/><text x="98.6820%" y="623.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper_tls::client::HttpsConnector&lt;hyper::client::connect::http::HttpConnector&lt;reqwest::dns::resolve::DynResolver&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="98.4456%" y="645" width="0.0136%" height="15" fill="rgb(245,82,36)" fg:x="7220" fg:w="1"/><text x="98.6956%" y="655.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;native_tls::TlsConnector&gt; (1 samples, 0.01%)</title><rect x="98.4592%" y="645" width="0.0136%" height="15" fill="rgb(250,73,51)" fg:x="7221" fg:w="1"/><text x="98.7092%" y="655.50"></text></g><g><title>graphgen`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,140 samples, 15.54%)</title><rect x="82.9425%" y="693" width="15.5440%" height="15" fill="rgb(221,189,23)" fg:x="6083" fg:w="1140"/><text x="83.1925%" y="703.50">graphgen`&lt;hyper::service..</text></g><g><title>graphgen`reqwest::connect::with_timeout::_{{closure}} (1,139 samples, 15.53%)</title><rect x="82.9561%" y="677" width="15.5304%" height="15" fill="rgb(210,33,7)" fg:x="6084" fg:w="1139"/><text x="83.2061%" y="687.50">graphgen`reqwest::connec..</text></g><g><title>graphgen`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (1,138 samples, 15.52%)</title><rect x="82.9697%" y="661" width="15.5168%" height="15" fill="rgb(210,107,22)" fg:x="6085" fg:w="1138"/><text x="83.2197%" y="671.50">graphgen`reqwest::connec..</text></g><g><title>graphgen`core::ptr::drop_in_place&lt;tokio_native_tls::TlsConnector::connect&lt;tokio::net::tcp::stream::TcpStream&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="98.4729%" y="645" width="0.0136%" height="15" fill="rgb(222,116,37)" fg:x="7222" fg:w="1"/><text x="98.7229%" y="655.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,146 samples, 15.63%)</title><rect x="82.8743%" y="725" width="15.6259%" height="15" fill="rgb(254,17,48)" fg:x="6078" fg:w="1146"/><text x="83.1243%" y="735.50">graphgen`&lt;futures_util::..</text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,141 samples, 15.56%)</title><rect x="82.9425%" y="709" width="15.5577%" height="15" fill="rgb(224,36,32)" fg:x="6083" fg:w="1141"/><text x="83.1925%" y="719.50">graphgen`&lt;futures_util::..</text></g><g><title>graphgen`reqwest::connect::with_timeout::_{{closure}} (1 samples, 0.01%)</title><rect x="98.4865%" y="693" width="0.0136%" height="15" fill="rgb(232,90,46)" fg:x="7223" fg:w="1"/><text x="98.7365%" y="703.50"></text></g><g><title>graphgen`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1,150 samples, 15.68%)</title><rect x="82.8334%" y="741" width="15.6804%" height="15" fill="rgb(241,66,40)" fg:x="6075" fg:w="1150"/><text x="83.0834%" y="751.50">graphgen`&lt;futures_util::..</text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="98.5001%" y="725" width="0.0136%" height="15" fill="rgb(249,184,29)" fg:x="7224" fg:w="1"/><text x="98.7501%" y="735.50"></text></g><g><title>graphgen`&lt;futures_channel::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="98.5138%" y="725" width="0.0409%" height="15" fill="rgb(231,181,1)" fg:x="7225" fg:w="3"/><text x="98.7638%" y="735.50"></text></g><g><title>graphgen`tokio::runtime::task::waker::drop_waker (2 samples, 0.03%)</title><rect x="98.5547%" y="725" width="0.0273%" height="15" fill="rgb(224,94,2)" fg:x="7228" fg:w="2"/><text x="98.8047%" y="735.50"></text></g><g><title>graphgen`&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.08%)</title><rect x="98.5138%" y="741" width="0.0818%" height="15" fill="rgb(229,170,15)" fg:x="7225" fg:w="6"/><text x="98.7638%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="98.5819%" y="725" width="0.0136%" height="15" fill="rgb(240,127,35)" fg:x="7230" fg:w="1"/><text x="98.8319%" y="735.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="98.6365%" y="597" width="0.0136%" height="15" fill="rgb(248,196,34)" fg:x="7234" fg:w="1"/><text x="98.8865%" y="607.50"></text></g><g><title>graphgen`&lt;hyper::client::connect::dns::GaiFuture as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="98.6365%" y="581" width="0.0136%" height="15" fill="rgb(236,137,7)" fg:x="7234" fg:w="1"/><text x="98.8865%" y="591.50"></text></g><g><title>graphgen`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="98.6365%" y="565" width="0.0136%" height="15" fill="rgb(235,127,16)" fg:x="7234" fg:w="1"/><text x="98.8865%" y="575.50"></text></g><g><title>graphgen`&lt;T as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.01%)</title><rect x="98.6501%" y="517" width="0.0136%" height="15" fill="rgb(250,192,54)" fg:x="7235" fg:w="1"/><text x="98.9001%" y="527.50"></text></g><g><title>graphgen`alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.01%)</title><rect x="98.6501%" y="501" width="0.0136%" height="15" fill="rgb(218,98,20)" fg:x="7235" fg:w="1"/><text x="98.9001%" y="511.50"></text></g><g><title>graphgen`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="98.6501%" y="485" width="0.0136%" height="15" fill="rgb(230,176,47)" fg:x="7235" fg:w="1"/><text x="98.9001%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (6 samples, 0.08%)</title><rect x="98.6638%" y="501" width="0.0818%" height="15" fill="rgb(244,2,33)" fg:x="7236" fg:w="6"/><text x="98.9138%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.01%)</title><rect x="98.7592%" y="485" width="0.0136%" height="15" fill="rgb(231,100,17)" fg:x="7243" fg:w="1"/><text x="99.0092%" y="495.50"></text></g><g><title>graphgen`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (14 samples, 0.19%)</title><rect x="98.6229%" y="629" width="0.1909%" height="15" fill="rgb(245,23,12)" fg:x="7233" fg:w="14"/><text x="98.8729%" y="639.50"></text></g><g><title>graphgen`&lt;hyper::client::connect::http::HttpConnector&lt;R&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (13 samples, 0.18%)</title><rect x="98.6365%" y="613" width="0.1773%" height="15" fill="rgb(249,55,22)" fg:x="7234" fg:w="13"/><text x="98.8865%" y="623.50"></text></g><g><title>graphgen`&lt;reqwest::dns::gai::GaiResolver as reqwest::dns::resolve::Resolve&gt;::resolve (12 samples, 0.16%)</title><rect x="98.6501%" y="597" width="0.1636%" height="15" fill="rgb(207,134,9)" fg:x="7235" fg:w="12"/><text x="98.9001%" y="607.50"></text></g><g><title>graphgen`tokio::runtime::blocking::pool::spawn_blocking (12 samples, 0.16%)</title><rect x="98.6501%" y="581" width="0.1636%" height="15" fill="rgb(218,134,0)" fg:x="7235" fg:w="12"/><text x="98.9001%" y="591.50"></text></g><g><title>graphgen`tokio::runtime::blocking::pool::Spawner::spawn_blocking (12 samples, 0.16%)</title><rect x="98.6501%" y="565" width="0.1636%" height="15" fill="rgb(213,212,33)" fg:x="7235" fg:w="12"/><text x="98.9001%" y="575.50"></text></g><g><title>graphgen`tokio::runtime::blocking::pool::Spawner::spawn_task (12 samples, 0.16%)</title><rect x="98.6501%" y="549" width="0.1636%" height="15" fill="rgb(252,106,18)" fg:x="7235" fg:w="12"/><text x="98.9001%" y="559.50"></text></g><g><title>graphgen`std::thread::Builder::spawn (12 samples, 0.16%)</title><rect x="98.6501%" y="533" width="0.1636%" height="15" fill="rgb(208,126,42)" fg:x="7235" fg:w="12"/><text x="98.9001%" y="543.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::new (11 samples, 0.15%)</title><rect x="98.6638%" y="517" width="0.1500%" height="15" fill="rgb(246,175,29)" fg:x="7236" fg:w="11"/><text x="98.9138%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (5 samples, 0.07%)</title><rect x="98.7456%" y="501" width="0.0682%" height="15" fill="rgb(215,13,50)" fg:x="7242" fg:w="5"/><text x="98.9956%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (3 samples, 0.04%)</title><rect x="98.7728%" y="485" width="0.0409%" height="15" fill="rgb(216,172,15)" fg:x="7244" fg:w="3"/><text x="99.0228%" y="495.50"></text></g><g><title>graphgen`reqwest::connect::with_timeout::_{{closure}} (16 samples, 0.22%)</title><rect x="98.6092%" y="661" width="0.2182%" height="15" fill="rgb(212,103,13)" fg:x="7232" fg:w="16"/><text x="98.8592%" y="671.50"></text></g><g><title>graphgen`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (16 samples, 0.22%)</title><rect x="98.6092%" y="645" width="0.2182%" height="15" fill="rgb(231,171,36)" fg:x="7232" fg:w="16"/><text x="98.8592%" y="655.50"></text></g><g><title>graphgen`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call (1 samples, 0.01%)</title><rect x="98.8137%" y="629" width="0.0136%" height="15" fill="rgb(250,123,20)" fg:x="7247" fg:w="1"/><text x="99.0637%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="98.8137%" y="613" width="0.0136%" height="15" fill="rgb(212,53,50)" fg:x="7247" fg:w="1"/><text x="99.0637%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="98.8137%" y="597" width="0.0136%" height="15" fill="rgb(243,54,12)" fg:x="7247" fg:w="1"/><text x="99.0637%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="98.8137%" y="581" width="0.0136%" height="15" fill="rgb(234,101,34)" fg:x="7247" fg:w="1"/><text x="99.0637%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="98.8137%" y="565" width="0.0136%" height="15" fill="rgb(254,67,22)" fg:x="7247" fg:w="1"/><text x="99.0637%" y="575.50"></text></g><g><title>graphgen`&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (18 samples, 0.25%)</title><rect x="98.5956%" y="741" width="0.2454%" height="15" fill="rgb(250,35,47)" fg:x="7231" fg:w="18"/><text x="98.8456%" y="751.50"></text></g><g><title>graphgen`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (18 samples, 0.25%)</title><rect x="98.5956%" y="725" width="0.2454%" height="15" fill="rgb(226,126,38)" fg:x="7231" fg:w="18"/><text x="98.8456%" y="735.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.25%)</title><rect x="98.5956%" y="709" width="0.2454%" height="15" fill="rgb(216,138,53)" fg:x="7231" fg:w="18"/><text x="98.8456%" y="719.50"></text></g><g><title>graphgen`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.25%)</title><rect x="98.5956%" y="693" width="0.2454%" height="15" fill="rgb(246,199,43)" fg:x="7231" fg:w="18"/><text x="98.8456%" y="703.50"></text></g><g><title>graphgen`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (18 samples, 0.25%)</title><rect x="98.5956%" y="677" width="0.2454%" height="15" fill="rgb(232,125,11)" fg:x="7231" fg:w="18"/><text x="98.8456%" y="687.50"></text></g><g><title>graphgen`reqwest::proxy::Proxy::intercept (1 samples, 0.01%)</title><rect x="98.8274%" y="661" width="0.0136%" height="15" fill="rgb(218,219,45)" fg:x="7248" fg:w="1"/><text x="99.0774%" y="671.50"></text></g><g><title>graphgen`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="98.8410%" y="741" width="0.0136%" height="15" fill="rgb(216,102,54)" fg:x="7249" fg:w="1"/><text x="99.0910%" y="751.50"></text></g><g><title>graphgen`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (1,176 samples, 16.03%)</title><rect x="82.8334%" y="757" width="16.0349%" height="15" fill="rgb(250,228,7)" fg:x="6075" fg:w="1176"/><text x="83.0834%" y="767.50">graphgen`&lt;futures_util::f..</text></g><g><title>graphgen`core::ptr::drop_in_place$LT$hyper..common..lazy..Lazy$LT$hyper..client..client..Client$LT$reqwest..connect..Connector$C$reqwest..async_impl..body..ImplStream$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..either..Either$LT$futures_util..future..try_future..AndThen$LT$futures_util..future..try_future..MapErr$LT$hyper..service..oneshot..Oneshot$LT$reqwest..connect..Connector$C$http..uri..Uri$GT$$C$hyper..error..Error..new_connect$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$$GT$$C$futures_util..future..either..Either$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$hyper..client..client..Client$LT$reqwest..connect..Connector$C$reqwest..async_impl..body..ImplStream$GT$..connect_to..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$hyper..client..pool..Pooled$LT$hyper..client..client..PoolClient$LT$reqwest..async_impl..body..ImplStrea� (1 samples, 0.01%)</title><rect x="98.8546%" y="741" width="0.0136%" height="15" fill="rgb(226,125,25)" fg:x="7250" fg:w="1"/><text x="99.1046%" y="751.50"></text></g><g><title>graphgen`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="98.8683%" y="757" width="0.0136%" height="15" fill="rgb(224,165,27)" fg:x="7251" fg:w="1"/><text x="99.1183%" y="767.50"></text></g><g><title>graphgen`core::ptr::drop_in_place&lt;hyper::client::pool::Checkout&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="98.8819%" y="757" width="0.0136%" height="15" fill="rgb(233,86,3)" fg:x="7252" fg:w="1"/><text x="99.1319%" y="767.50"></text></g><g><title>graphgen`&lt;hyper::client::pool::Checkout&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.8819%" y="741" width="0.0136%" height="15" fill="rgb(228,116,20)" fg:x="7252" fg:w="1"/><text x="99.1319%" y="751.50"></text></g><g><title>graphgen`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain (1 samples, 0.01%)</title><rect x="98.8819%" y="725" width="0.0136%" height="15" fill="rgb(209,192,17)" fg:x="7252" fg:w="1"/><text x="99.1319%" y="735.50"></text></g><g><title>graphgen`http::header::map::Entry&lt;T&gt;::or_insert_with (1 samples, 0.01%)</title><rect x="98.8956%" y="757" width="0.0136%" height="15" fill="rgb(224,88,34)" fg:x="7253" fg:w="1"/><text x="99.1456%" y="767.50"></text></g><g><title>graphgen`hyper::client::client::domain_as_uri (2 samples, 0.03%)</title><rect x="98.9092%" y="757" width="0.0273%" height="15" fill="rgb(233,38,6)" fg:x="7254" fg:w="2"/><text x="99.1592%" y="767.50"></text></g><g><title>graphgen`http::uri::builder::Builder::path_and_query (2 samples, 0.03%)</title><rect x="98.9092%" y="741" width="0.0273%" height="15" fill="rgb(212,59,30)" fg:x="7254" fg:w="2"/><text x="99.1592%" y="751.50"></text></g><g><title>graphgen`bytes::bytes::Bytes::copy_from_slice (1 samples, 0.01%)</title><rect x="98.9228%" y="725" width="0.0136%" height="15" fill="rgb(213,80,3)" fg:x="7255" fg:w="1"/><text x="99.1728%" y="735.50"></text></g><g><title>graphgen`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="98.9228%" y="709" width="0.0136%" height="15" fill="rgb(251,178,7)" fg:x="7255" fg:w="1"/><text x="99.1728%" y="719.50"></text></g><g><title>graphgen`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (1,184 samples, 16.14%)</title><rect x="82.8061%" y="773" width="16.1440%" height="15" fill="rgb(213,154,26)" fg:x="6073" fg:w="1184"/><text x="83.0561%" y="783.50">graphgen`hyper::client::c..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="98.9365%" y="757" width="0.0136%" height="15" fill="rgb(238,165,49)" fg:x="7256" fg:w="1"/><text x="99.1865%" y="767.50"></text></g><g><title>graphgen`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1,187 samples, 16.18%)</title><rect x="82.7788%" y="789" width="16.1849%" height="15" fill="rgb(248,91,46)" fg:x="6071" fg:w="1187"/><text x="83.0288%" y="799.50">graphgen`&lt;reqwest::async_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="98.9501%" y="773" width="0.0136%" height="15" fill="rgb(244,21,52)" fg:x="7257" fg:w="1"/><text x="99.2001%" y="783.50"></text></g><g><title>graphgen`reqwest::blocking::client::forward::_{{closure}} (1,189 samples, 16.21%)</title><rect x="82.7652%" y="805" width="16.2122%" height="15" fill="rgb(247,122,20)" fg:x="6070" fg:w="1189"/><text x="83.0152%" y="815.50">graphgen`reqwest::blockin..</text></g><g><title>graphgen`tokio::sync::oneshot::Sender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="98.9637%" y="789" width="0.0136%" height="15" fill="rgb(218,27,9)" fg:x="7258" fg:w="1"/><text x="99.2137%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (1 samples, 0.01%)</title><rect x="98.9637%" y="773" width="0.0136%" height="15" fill="rgb(246,7,6)" fg:x="7258" fg:w="1"/><text x="99.2137%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (1 samples, 0.01%)</title><rect x="98.9637%" y="757" width="0.0136%" height="15" fill="rgb(227,135,54)" fg:x="7258" fg:w="1"/><text x="99.2137%" y="767.50"></text></g><g><title>graphgen`tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.01%)</title><rect x="98.9774%" y="805" width="0.0136%" height="15" fill="rgb(247,14,11)" fg:x="7259" fg:w="1"/><text x="99.2274%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,592 samples, 35.34%)</title><rect x="63.6624%" y="837" width="35.3422%" height="15" fill="rgb(206,149,34)" fg:x="4669" fg:w="2592"/><text x="63.9124%" y="847.50">graphgen`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>graphgen`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,589 samples, 35.30%)</title><rect x="63.7033%" y="821" width="35.3013%" height="15" fill="rgb(227,228,4)" fg:x="4672" fg:w="2589"/><text x="63.9533%" y="831.50">graphgen`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::wi..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="98.9910%" y="805" width="0.0136%" height="15" fill="rgb(238,218,28)" fg:x="7260" fg:w="1"/><text x="99.2410%" y="815.50"></text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.01%)</title><rect x="99.0046%" y="837" width="0.0136%" height="15" fill="rgb(252,86,40)" fg:x="7261" fg:w="1"/><text x="99.2546%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.01%)</title><rect x="99.0046%" y="821" width="0.0136%" height="15" fill="rgb(251,225,11)" fg:x="7261" fg:w="1"/><text x="99.2546%" y="831.50"></text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,603 samples, 35.49%)</title><rect x="63.5806%" y="853" width="35.4922%" height="15" fill="rgb(206,46,49)" fg:x="4663" fg:w="2603"/><text x="63.8306%" y="863.50">graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>graphgen`tokio::runtime::task::state::State::transition_to_idle (4 samples, 0.05%)</title><rect x="99.0183%" y="837" width="0.0545%" height="15" fill="rgb(245,128,24)" fg:x="7262" fg:w="4"/><text x="99.2683%" y="847.50"></text></g><g><title>graphgen`tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.01%)</title><rect x="99.0728%" y="853" width="0.0136%" height="15" fill="rgb(219,177,34)" fg:x="7266" fg:w="1"/><text x="99.3228%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::task::waker::raw_waker (1 samples, 0.01%)</title><rect x="99.0864%" y="853" width="0.0136%" height="15" fill="rgb(218,60,48)" fg:x="7267" fg:w="1"/><text x="99.3364%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::Context::run_task (2,611 samples, 35.60%)</title><rect x="63.5260%" y="869" width="35.6013%" height="15" fill="rgb(221,11,5)" fg:x="4659" fg:w="2611"/><text x="63.7760%" y="879.50">graphgen`tokio::runtime::scheduler::current_thread::Contex..</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="99.1001%" y="853" width="0.0273%" height="15" fill="rgb(220,148,13)" fg:x="7268" fg:w="2"/><text x="99.3501%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::Handle::pop (2 samples, 0.03%)</title><rect x="99.1274%" y="869" width="0.0273%" height="15" fill="rgb(210,16,3)" fg:x="7270" fg:w="2"/><text x="99.3774%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.03%)</title><rect x="99.1274%" y="853" width="0.0273%" height="15" fill="rgb(236,80,2)" fg:x="7270" fg:w="2"/><text x="99.3774%" y="863.50"></text></g><g><title>graphgen`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.07%)</title><rect x="99.1546%" y="869" width="0.0682%" height="15" fill="rgb(239,129,19)" fg:x="7272" fg:w="5"/><text x="99.4046%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="99.2228%" y="869" width="0.0545%" height="15" fill="rgb(220,106,35)" fg:x="7277" fg:w="4"/><text x="99.4728%" y="879.50"></text></g><g><title>graphgen`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,286 samples, 44.81%)</title><rect x="54.4860%" y="885" width="44.8050%" height="15" fill="rgb(252,139,45)" fg:x="3996" fg:w="3286"/><text x="54.7360%" y="895.50">graphgen`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="99.2773%" y="869" width="0.0136%" height="15" fill="rgb(229,8,36)" fg:x="7281" fg:w="1"/><text x="99.5273%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::context::enter_runtime (1 samples, 0.01%)</title><rect x="99.2910%" y="885" width="0.0136%" height="15" fill="rgb(230,126,33)" fg:x="7282" fg:w="1"/><text x="99.5410%" y="895.50"></text></g><g><title>graphgen`tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="99.2910%" y="869" width="0.0136%" height="15" fill="rgb(239,140,21)" fg:x="7282" fg:w="1"/><text x="99.5410%" y="879.50"></text></g><g><title>graphgen`tokio::runtime::runtime::Runtime::block_on (3,291 samples, 44.87%)</title><rect x="54.4723%" y="917" width="44.8732%" height="15" fill="rgb(254,104,9)" fg:x="3995" fg:w="3291"/><text x="54.7223%" y="927.50">graphgen`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::CurrentThread::block_on (3,290 samples, 44.86%)</title><rect x="54.4860%" y="901" width="44.8596%" height="15" fill="rgb(239,52,14)" fg:x="3996" fg:w="3290"/><text x="54.7360%" y="911.50">graphgen`tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>graphgen`tokio::runtime::scheduler::current_thread::Context::run_task (3 samples, 0.04%)</title><rect x="99.3046%" y="885" width="0.0409%" height="15" fill="rgb(208,227,44)" fg:x="7283" fg:w="3"/><text x="99.5546%" y="895.50"></text></g><g><title>graphgen`tokio::util::rand::RngSeedGenerator::next_seed (1 samples, 0.01%)</title><rect x="99.3455%" y="917" width="0.0136%" height="15" fill="rgb(246,18,19)" fg:x="7286" fg:w="1"/><text x="99.5955%" y="927.50"></text></g><g><title>graphgen`std::sys_common::backtrace::__rust_begin_short_backtrace (6,869 samples, 93.66%)</title><rect x="5.7404%" y="933" width="93.6597%" height="15" fill="rgb(235,228,25)" fg:x="421" fg:w="6869"/><text x="5.9904%" y="943.50">graphgen`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="99.3591%" y="917" width="0.0409%" height="15" fill="rgb(240,156,20)" fg:x="7287" fg:w="3"/><text x="99.6091%" y="927.50"></text></g><g><title>dyld`dyld4::RuntimeState::_instantiateTLVs (1 samples, 0.01%)</title><rect x="99.4001%" y="917" width="0.0136%" height="15" fill="rgb(224,8,20)" fg:x="7290" fg:w="1"/><text x="99.6501%" y="927.50"></text></g><g><title>libdyld.dylib`instantiateTLVs_thunk (1 samples, 0.01%)</title><rect x="99.4137%" y="917" width="0.0136%" height="15" fill="rgb(214,12,52)" fg:x="7291" fg:w="1"/><text x="99.6637%" y="927.50"></text></g><g><title>libdyld.dylib`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="99.4273%" y="901" width="0.0136%" height="15" fill="rgb(211,220,47)" fg:x="7292" fg:w="1"/><text x="99.6773%" y="911.50"></text></g><g><title>graphgen`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,876 samples, 93.76%)</title><rect x="5.7131%" y="949" width="93.7551%" height="15" fill="rgb(250,173,5)" fg:x="419" fg:w="6876"/><text x="5.9631%" y="959.50">graphgen`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>graphgen`std::sys_common::thread_info::set (5 samples, 0.07%)</title><rect x="99.4001%" y="933" width="0.0682%" height="15" fill="rgb(250,125,52)" fg:x="7290" fg:w="5"/><text x="99.6501%" y="943.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="99.4273%" y="917" width="0.0409%" height="15" fill="rgb(209,133,18)" fg:x="7292" fg:w="3"/><text x="99.6773%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="99.4410%" y="901" width="0.0273%" height="15" fill="rgb(216,173,22)" fg:x="7293" fg:w="2"/><text x="99.6910%" y="911.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.01%)</title><rect x="99.4682%" y="933" width="0.0136%" height="15" fill="rgb(205,3,22)" fg:x="7295" fg:w="1"/><text x="99.7182%" y="943.50"></text></g><g><title>graphgen`std::sys::unix::stack_overflow::imp::make_handler (7 samples, 0.10%)</title><rect x="99.4682%" y="949" width="0.0954%" height="15" fill="rgb(248,22,20)" fg:x="7295" fg:w="7"/><text x="99.7182%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (6 samples, 0.08%)</title><rect x="99.4819%" y="933" width="0.0818%" height="15" fill="rgb(233,6,29)" fg:x="7296" fg:w="6"/><text x="99.7319%" y="943.50"></text></g><g><title>graphgen`std::sys::unix::thread::Thread::new::thread_start (6,888 samples, 93.92%)</title><rect x="5.7131%" y="965" width="93.9187%" height="15" fill="rgb(240,22,54)" fg:x="419" fg:w="6888"/><text x="5.9631%" y="975.50">graphgen`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>libsystem_kernel.dylib`__mprotect (5 samples, 0.07%)</title><rect x="99.5637%" y="949" width="0.0682%" height="15" fill="rgb(231,133,32)" fg:x="7302" fg:w="5"/><text x="99.8137%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (1 samples, 0.01%)</title><rect x="99.6319%" y="965" width="0.0136%" height="15" fill="rgb(248,193,4)" fg:x="7307" fg:w="1"/><text x="99.8819%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (1 samples, 0.01%)</title><rect x="99.6455%" y="965" width="0.0136%" height="15" fill="rgb(211,178,46)" fg:x="7308" fg:w="1"/><text x="99.8955%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (1 samples, 0.01%)</title><rect x="99.6591%" y="965" width="0.0136%" height="15" fill="rgb(224,5,42)" fg:x="7309" fg:w="1"/><text x="99.9091%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.05%)</title><rect x="99.6728%" y="949" width="0.0545%" height="15" fill="rgb(239,176,25)" fg:x="7310" fg:w="4"/><text x="99.9228%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (4 samples, 0.05%)</title><rect x="99.7273%" y="933" width="0.0545%" height="15" fill="rgb(245,187,50)" fg:x="7314" fg:w="4"/><text x="99.9773%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.05%)</title><rect x="99.7818%" y="917" width="0.0545%" height="15" fill="rgb(248,24,15)" fg:x="7318" fg:w="4"/><text x="100.0318%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (9 samples, 0.12%)</title><rect x="99.7273%" y="949" width="0.1227%" height="15" fill="rgb(205,166,13)" fg:x="7314" fg:w="9"/><text x="99.9773%" y="959.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (5 samples, 0.07%)</title><rect x="99.7818%" y="933" width="0.0682%" height="15" fill="rgb(208,114,23)" fg:x="7318" fg:w="5"/><text x="100.0318%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_destruct_trap (1 samples, 0.01%)</title><rect x="99.8364%" y="917" width="0.0136%" height="15" fill="rgb(239,127,18)" fg:x="7322" fg:w="1"/><text x="100.0864%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (1 samples, 0.01%)</title><rect x="99.9182%" y="917" width="0.0136%" height="15" fill="rgb(219,154,28)" fg:x="7328" fg:w="1"/><text x="100.1682%" y="927.50"></text></g><g><title>Foundation`-[_NSThreadData setTarget:] (1 samples, 0.01%)</title><rect x="99.9318%" y="917" width="0.0136%" height="15" fill="rgb(225,157,23)" fg:x="7329" fg:w="1"/><text x="100.1818%" y="927.50"></text></g><g><title>CoreFoundation`__CFTSDFinalize (3 samples, 0.04%)</title><rect x="99.9182%" y="933" width="0.0409%" height="15" fill="rgb(219,8,6)" fg:x="7328" fg:w="3"/><text x="100.1682%" y="943.50"></text></g><g><title>Foundation`__NSFinalizeThreadData (1 samples, 0.01%)</title><rect x="99.9455%" y="917" width="0.0136%" height="15" fill="rgb(212,47,6)" fg:x="7330" fg:w="1"/><text x="100.1955%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.01%)</title><rect x="99.9455%" y="901" width="0.0136%" height="15" fill="rgb(224,190,4)" fg:x="7330" fg:w="1"/><text x="100.1955%" y="911.50"></text></g><g><title>dyld`dyld4::RuntimeState::_finalizeListTLV (2 samples, 0.03%)</title><rect x="99.9591%" y="933" width="0.0273%" height="15" fill="rgb(239,183,29)" fg:x="7331" fg:w="2"/><text x="100.2091%" y="943.50"></text></g><g><title>dyld`invocation function for block in dyld4::RuntimeState::_finalizeListTLV (2 samples, 0.03%)</title><rect x="99.9591%" y="917" width="0.0273%" height="15" fill="rgb(213,57,7)" fg:x="7331" fg:w="2"/><text x="100.2091%" y="927.50"></text></g><g><title>graphgen`std::thread::local::fast::destroy_value (2 samples, 0.03%)</title><rect x="99.9591%" y="901" width="0.0273%" height="15" fill="rgb(216,148,1)" fg:x="7331" fg:w="2"/><text x="100.2091%" y="911.50"></text></g><g><title>all (7,334 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(236,182,29)" fg:x="0" fg:w="7334"/><text x="0.2500%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (6,922 samples, 94.38%)</title><rect x="5.6177%" y="997" width="94.3823%" height="15" fill="rgb(244,120,48)" fg:x="412" fg:w="6922"/><text x="5.8677%" y="1007.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (6,915 samples, 94.29%)</title><rect x="5.7131%" y="981" width="94.2869%" height="15" fill="rgb(206,71,34)" fg:x="419" fg:w="6915"/><text x="5.9631%" y="991.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (24 samples, 0.33%)</title><rect x="99.6728%" y="965" width="0.3272%" height="15" fill="rgb(242,32,6)" fg:x="7310" fg:w="24"/><text x="99.9228%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (11 samples, 0.15%)</title><rect x="99.8500%" y="949" width="0.1500%" height="15" fill="rgb(241,35,3)" fg:x="7323" fg:w="11"/><text x="100.1000%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="99.9864%" y="933" width="0.0136%" height="15" fill="rgb(222,62,19)" fg:x="7333" fg:w="1"/><text x="100.2364%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="99.9864%" y="917" width="0.0136%" height="15" fill="rgb(223,110,41)" fg:x="7333" fg:w="1"/><text x="100.2364%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="99.9864%" y="901" width="0.0136%" height="15" fill="rgb(208,224,4)" fg:x="7333" fg:w="1"/><text x="100.2364%" y="911.50"></text></g></svg></svg>